# By Hectobo And Gely Con La Colaboracion De Exaltado
 

import base64, codecs
magic = 'IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKIyAgICAgIENvcHlyaWdodCAoQykgMjAxNSBTdXJmYWNpbmd4ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICMKIyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICMKIyAgVGhpcyBQcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU7IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnkgICAgICAgICMKIyAgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkgICAgICAgICMKIyAgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbjsgZWl0aGVyIHZlcnNpb24gMiwgb3IgKGF0IHlvdXIgb3B0aW9uKSAgICAgICAgICMKIyAgYW55IGxhdGVyIHZlcnNpb24uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICMKIyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICMKIyAgVGhpcyBQcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsICAgICAgICAgICAgICMKIyAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YgICAgICAgICAgICAgICMKIyAgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiBTZWUgdGhlICAgICAgICAgICAgICAgICMKIyAgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICMKIyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICMKIyAgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgICAgICAgICAgICMKIyAgYWxvbmcgd2l0aCBYQk1DOyBzZWUgdGhlIGZpbGUgQ09QWUlORy4gIElmIG5vdCwgd3JpdGUgdG8gICAgICAgICAgICAgICAgICAgICMKIyAgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgNjc1IE1hc3MgQXZlLCBDYW1icmlkZ2UsIE1BIDAyMTM5LCBVU0EuICAgICAgICMKIyAgaHR0cDovL3d3dy5nbnUub3JnL2NvcHlsZWZ0L2dwbC5odG1sICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICMKIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKCmltcG9ydCB4Ym1jLCB4Ym1jYWRkb24sIHhibWNndWksIHhibWNwbHVnaW4sIG9zLCBzeXMsIHhibWN2ZnMsIGdsb2IKaW1wb3J0IHNodXRpbAppbXBvcnQgdXJsbGliMix1cmxsaWIKaW1wb3J0IHJlCmltcG9ydCB1c2VydmFyCmltcG9ydCBmbm1hdGNoCnRyeTogICAgZnJvbSBzcWxpdGUzIGltcG9ydCBkYmFwaTIgYXMgZGF0YWJhc2UKZXhjZXB0OiBmcm9tIHB5c3FsaXRlMiBpbXBvcnQgZGJhcGkyIGFzIGRhdGFiYXNlCmZyb20gZGF0ZXRpbWUgaW1wb3J0IGRhdGUsIGRhdGV0aW1lLCB0aW1lZGVsdGEKZnJvbSB1cmxwYXJzZSBpbXBvcnQgdXJsam9pbgpmcm9tIHJlc291cmNlcy5saWJzIGltcG9ydCBleHRyYWN0LCBkb3dubG9hZGVyLCBub3RpZnksIGRlYnJpZGl0LCB0cmFrdGl0LCBsb2dpbml0LCBza2luU3dpdGNoLCB1cGxvYWRMb2csIHl0LCBzcGVlZHRlc3QsIHdpemFyZCBhcyB3aXoKCkFERE9OX0lEICAgICAgICAgPSB1c2VydmFyLkFERE9OX0lECkFERE9OVElUTEUgICAgICAgPSB1c2VydmFyLkFERE9OVElUTEUKQURET04gICAgICAgICAgICA9IHdpei5hZGRvbklkKEFERE9OX0lEKQpWRVJTSU9OICAgICAgICAgID0gd2l6LmFkZG9uSW5mbyhBRERPTl9JRCwndmVyc2lvbicpCkFERE9OUEFUSCAgICAgICAgPSB3aXouYWRkb25JbmZvKEFERE9OX0lELCAncGF0aCcpCkRJQUxPRyAgICAgICAgICAgPSB4Ym1jZ3VpLkRpYWxvZygpCkRQICAgICAgICAgICAgICAgPSB4Ym1jZ3VpLkRpYWxvZ1Byb2dyZXNzKCkKSE9NRSAgICAgICAgICAgICA9IHhibWMudHJhbnNsYXRlUGF0aCgnc3BlY2lhbDovL2hvbWUvJykKTE9HICAgICAgICAgICAgICA9IHhibWMudHJhbnNsYXRlUGF0aCgnc3BlY2lhbDovL2xvZ3BhdGgvJykKUFJPRklMRSAgICAgICAgICA9IHhibWMudHJhbnNsYXRlUGF0aCgnc3BlY2lhbDovL3Byb2ZpbGUvJykKVEVNUERJUiAgICAgICAgICA9IHhibWMudHJhbnNsYXRlUGF0aCgnc3BlY2lhbDovL3RlbXAnKQpBRERPTlMgICAgICAgICAgID0gb3MucGF0aC5qb2luKEhPTUUsICAgICAgJ2FkZG9ucycpClVTRVJEQVRBICAgICAgICAgPSBvcy5wYXRoLmpvaW4oSE9NRSwgICAgICAndXNlcmRhdGEnKQpQTFVHSU4gICAgICAgICAgID0gb3MucGF0aC5qb2luKEFERE9OUywgICAgQURET05fSUQpClBBQ0tBR0VTICAgICAgICAgPSBvcy5wYXRoLmpvaW4oQURET05TLCAgICAncGFja2FnZXMnKQpBRERPTkQgICAgICAgICAgID0gb3MucGF0aC5qb2luKFVTRVJEQVRBLCAgJ2FkZG9uX2RhdGEnKQpBRERPTkRBVEEgICAgICAgID0gb3MucGF0aC5qb2luKFVTRVJEQVRBLCAgJ2FkZG9uX2RhdGEnLCBBRERPTl9JRCkKQURWQU5DRUQgICAgICAgICA9IG9zLnBhdGguam9pbihVU0VSREFUQSwgICdhZHZhbmNlZHNldHRpbmdzLnhtbCcpClNPVVJDRVMgICAgICAgICAgPSBvcy5wYXRoLmpvaW4oVVNFUkRBVEEsICAnc291cmNlcy54bWwnKQpGQVZPVVJJVEVTICAgICAgID0gb3MucGF0aC5qb2luKFVTRVJEQVRBLCAgJ2Zhdm91cml0ZXMueG1sJykKUFJPRklMRVMgICAgICAgICA9IG9zLnBhdGguam9pbihVU0VSREFUQSwgICdwcm9maWxlcy54bWwnKQpHVUlTRVRUSU5HUyAgICAgID0gb3MucGF0aC5qb2luKFVTRVJEQVRBLCAgJ2d1aXNldHRpbmdzLnhtbCcpClRIVU1CUyAgICAgICAgICAgPSBvcy5wYXRoLmpvaW4oVVNFUkRBVEEsICAnVGh1bWJuYWlscycpCkRBVEFCQVNFICAgICAgICAgPSBvcy5wYXRoLmpvaW4oVVNFUkRBVEEsICAnRGF0YWJhc2UnKQpGQU5BUlQgICAgICAgICAgID0gb3MucGF0aC5qb2luKFBMVUdJTiwgICAgJ2ZhbmFydC5qcGcnKQpJQ09OICAgICAgICAgICAgID0gb3MucGF0aC5qb2luKFBMVUdJTiwgICAgJ2ljb24ucG5nJykKQVJUICAgICAgICAgICAgICA9IG9zLnBhdGguam9pbihQTFVHSU4sICAgICdyZXNvdXJjZXMnLCAnYXJ0JykKV0laTE9HICAgICAgICAgICA9IG9zLnBhdGguam9pbihBRERPTkRBVEEsICd3aXphcmQubG9nJykKU1BFRURURVNURk9MRCAgICA9IG9zLnBhdGguam9pbihBRERPTkRBVEEsICdTcGVlZFRlc3QnKQpBUkNISVZFX0NBQ0hFICAgID0gb3MucGF0aC5qb2luKFRFTVBESVIsICAgJ2FyY2hpdmVfY2FjaGUnKQpTS0lOICAgICAgICAgICAgID0geGJtYy5nZXRTa2luRGlyKCkKQlVJTEROQU1FICAgICAgICA9IHdpei5nZXRTKCdidWlsZG5hbWUnKQpERUZBVUxUU0tJTiAgICAgID0gd2l6LmdldFMoJ2RlZmF1bHRza2luJykKREVGQVVMVE5BTUUgICAgICA9IHdpei5nZXRTKCdkZWZhdWx0c2tpbm5hbWUnKQpERUZBVUxUSUdOT1JFICAgID0gd2l6LmdldFMoJ2RlZmF1bHRza2luaWdub3JlJykKQlVJTERWRVJTSU9OICAgICA9IHdpei5nZXRTKCdidWlsZHZlcnNpb24nKQpCVUlMRFRIRU1FICAgICAgID0gd2l6LmdldFMoJ2J1aWxkdGhlbWUnKQpCVUlMRExBVEVTVCAgICAgID0gd2l6LmdldFMoJ2xhdGVzdHZlcnNpb24nKQpTSE9XMTUgICAgICAgICAgID0gd2l6LmdldFMoJ3Nob3cxNScpClNIT1cxNiAgICAgICAgICAgPSB3aXouZ2V0Uygnc2hvdzE2JykKU0hPVzE3ICAgICAgICAgICA9IHdpei5nZXRTKCdzaG93MTcnKQpTSE9XMTggICAgICAgICAgID0gd2l6LmdldFMoJ3Nob3cxOCcpClNIT1dBRFVMVCAgICAgICAgPSB3aXouZ2V0UygnYWR1bHQnKQpTSE9XTUFJTlQgICAgICAgID0gd2l6LmdldFMoJ3Nob3dtYWludCcpCkFVVE9DTEVBTlVQICAgICAgPSB3aXouZ2V0UygnYXV0b2NsZWFuJykKQVVUT0NBQ0hFICAgICAgICA9IHdpei5nZXRTKCdjbGVhcmNhY2hlJykKQVVUT1BBQ0tBR0VTICAgICA9IHdpei5nZXRTKCdjbGVhcnBhY2thZ2VzJykKQVVUT1RIVU1CUyAgICAgICA9IHdpei5nZXRTKCdjbGVhcnRodW1icycpCkFVVE9GRVEgICAgICAgICAgPSB3aXouZ2V0UygnYXV0b2NsZWFuZmVxJykKQVVUT05FWFRSVU4gICAgICA9IHdpei5nZXRTKCduZXh0YXV0b2NsZWFudXAnKQpJTkNMVURFVklERU8gICAgID0gd2l6LmdldFMoJ2luY2x1ZGV2aWRlbycpCklOQ0xVREVBTEwgICAgICAgPSB3aXouZ2V0UygnaW5jbHVkZWFsbCcpCklOQ0xVREVQTEFDRU5UQSAgICA9IHdpei5nZXRTKCdpbmNsdWRlcGxhY2VudGEnKQpJTkNMVURFRVhPRFVTUkVEVVggICAgPSB3aXouZ2V0UygnaW5jbHVkZWV4b2R1c3JlZHV4JykKSU5DTFVERTEzQ0xPV05TID0gd2l6LmdldFMoJ2luY2x1ZGUxM2Nsb3ducycpCklOQ0xVREVaQU5OSSA9IHdpei5nZXRTKCdpbmNsdWRlemFubmknKQpJTkNMVURFR0FJQSAgICAgPSB3aXouZ2V0UygnaW5jbHVkZWdhaWEnKQpJTkNMVURFU0VSRU4gICAgID0gd2l6LmdldFMoJ2luY2x1ZGVzZXJlbicpCklOQ0xVREVNQUdJQ0FMSVRZICAgPSB3aXouZ2V0UygnaW5jbHVkZW1hZ2ljYWxpdHknKQpTRVBFUkFURSAgICAgICAgID0gd2l6LmdldFMoJ3NlcGVyYXRlJykKTk9USUZZICAgICAgICAgICA9IHdpei5nZXRTKCdub3RpZnknKQpOT1RFSUQgICAgICAgICAgID0gd2l6LmdldFMoJ25vdGVpZCcpCk5PVEVESVNNSVNTICAgICAgPSB3aXouZ2V0Uygnbm90ZWRpc21pc3MnKQpUUkFLVFNBVkUgICAgICAgID0gd2l6LmdldFMoJ3RyYWt0bGFzdHNhdmUnKQpSRUFMU0FWRSAgICAgICAgID0gd2l6LmdldFMoJ2RlYnJpZGxhc3RzYXZlJykKTE9HSU5TQVZFICAgICAgICA9IHdpei5nZXRTKCdsb2dpbmxhc3RzYXZlJykKS0VFUEZBVlMgICAgICAgICA9IHdpei5nZXRTKCdrZWVwZmF2b3VyaXRlcycpCktFRVBTT1VSQ0VTICAgICAgPSB3aXouZ2V0Uygna2VlcHNvdXJjZXMnKQpLRUVQUFJPRklMRVMgICAgID0gd2l6LmdldFMoJ2tlZXBwcm9maWxlcycpCktFRVBBRFZBTkNFRCAgICAgPSB3aXouZ2V0Uygna2VlcGFkdmFuY2VkJykKS0VFUFJFUE9TICAgICAgICA9IHdpei5nZXRTKCdrZWVwcmVwb3MnKQpLRUVQU1VQRVIgICAgICAgID0gd2l6LmdldFMoJ2tlZXBzdXBlcicpCktFRVBXSElURUxJU1QgICAgPSB3aXouZ2V0Uygna2VlcHdoaXRlbGlzdCcpCktFRVBUUkFLVCAgICAgICAgPSB3aXouZ2V0Uygna2VlcHRyYWt0JykKS0VFUFJFQUwgICAgICAgICA9IHdpei5nZXRTKCdrZWVwZGVicmlkJykKS0VFUExPR0lOICAgICAgICA9IHdpei5nZXRTKCdrZWVwbG9naW4nKQpERVZFTE9QRVIgICAgICAgID0gd2l6LmdldFMoJ2RldmVsb3BlcicpClRISVJEUEFSVFkgICAgICAgPSB3aXouZ2V0UygnZW5hYmxlM3JkJykKVEhJUkQxTkFNRSAgICAgICA9IHdpei5nZXRTKCd3aXphcmQxbmFtZScpClRISVJEMVVSTCAgICAgICAgPSB3aXouZ2V0Uygnd2l6YXJkMXVybCcpClRISVJEMk5BTUUgICAgICAgPSB3aXouZ2V0Uygnd2l6YXJkMm5hbWUnKQpUSElSRDJVUkwgICAgICAgID0gd2l6LmdldFMoJ3dpemFyZDJ1cmwnKQpUSElSRDNOQU1FICAgICAgID0gd2l6LmdldFMoJ3dpemFyZDNuYW1lJykKVEhJUkQzVVJMICAgICAgICA9IHdpei5nZXRTKCd3aXphcmQzdXJsJykKQkFDS1VQTE9DQVRJT04gICA9IEFERE9OLmdldFNldHRpbmcoJ3BhdGgnKSBpZiBub3QgQURET04uZ2V0U2V0dGluZygncGF0aCcpID09ICcnIGVsc2UgJ3NwZWNpYWw6Ly9ob21lLycKQkFDS1VQUk9NUyAgICAgICA9IHdpei5nZXRTKCdyb21wYXRoJykKTVlCVUlMRFMgICAgICAgICA9IG9zLnBhdGguam9pbihCQUNLVVBMT0NBVElPTiwgJ01pc0J1aWxkcycsICcnKQpBVVRPRkVRICAgICAgICAgID0gaW50KGZsb2F0KEFVVE9GRVEpKSBpZiBBVVRPRkVRLmlzZGlnaXQoKSBlbHNlIDAKVE9EQVkgICAgICAgICAgICA9IGRhdGUudG9kYXkoKQpUT01PUlJPVyAgICAgICAgID0gVE9EQVkgKyB0aW1lZGVsdGEoZGF5cz0xKQpUSFJFRURBWVMgICAgICAgID0gVE9EQVkgKyB0aW1lZGVsdGEoZGF5cz0zKQoKS09ESVYgICAgICAgICAgICA9IGZsb2F0KHhibWMuZ2V0SW5mb0xhYmVsKCJTeXN0ZW0uQnVpbGRWZXJzaW9uIilbOjRdKQppZiBLT0RJViA+IDE3OgoJZnJvbSByZXNvdXJjZXMubGlicyBpbXBvcnQgemZpbGUgYXMgemlwZmlsZQplbHNlOgoJaW1wb3J0IHppcGZpbGUKCk1DTkFNRSAgICAgICAgICAgPSB3aXoubWVkaWFDZW50ZXIoKQpFWENMVURFUyAgICAgICAgID0gdXNlcnZhci5FWENMVURFUwpDQUNIRVRFWFQgICAgICAgID0gdXNlcnZhci5DQUNIRVRFWFQKQ0FDSEVBR0UgICAgICAgICA9IHVzZXJ2YXIuQ0FDSEVBR0UgaWYgc3RyKHVzZXJ2YXIuQ0FDSEVBR0UpLmlzZGlnaXQoKSBlbHNlIDMwCkJVSUxERklMRSAgICAgICAgPSB1c2VydmFyLkJVSUxERklMRQpBUEtGSUxFICAgICAgICAgID0gdXNlcnZhci5BUEtGSUxFCllPVVRVQkVUSVRMRSAgICAgPSB1c2VydmFyLllPVVRVQkVUSVRMRQpZT1VUVUJFRklMRSAgICAgID0gdXNlcnZhci5ZT1VUVUJFRklMRQpBRERPTkZJTEUgICAgICAgID0gdXNlcnZhci5BRERPTkZJTEUKQURWQU5DRURGSUxFICAgICA9IHVzZXJ2YXIuQURWQU5DRURGSUxFClVQREFURUNIRUNLICAgICAgPSB1c2VydmFyLlVQREFURUNIRUNLIGlmIHN0cih1c2VydmFyLlVQREFURUNIRUNLKS5pc2RpZ2l0KCkgZWxzZSAxCk5FWFRDSEVDSyAgICAgICAgPSBUT0RBWSArIHRpbWVkZWx0YShkYXlzPVVQREFURUNIRUNLKQpOT1RJRklDQVRJT04gICAgID0gdXNlcnZhci5OT1RJRklDQVRJT04KRU5BQkxFICAgICAgICAgICA9IHVzZXJ2YXIuRU5BQkxFCkhFQURFUk1FU1NBR0UgICAgPSB1c2VydmFyLkhFQURFUk1FU1NBR0UKQVVUT1VQREFURSAgICAgICA9IHVzZXJ2YXIuQVVUT1VQREFURQpCVUlMREVSTkFNRSAgICAgID0gdXNlcnZhci5CVUlMREVSTkFNRQpXSVpBUkRGSUxFICAgICAgID0gdXNlcnZhci5XSVpBUkRGSUxFCkhJREVDT05UQUNUICAgICAgPSB1c2VydmFyLkhJREVDT05UQUNUCkNPTlRBQ1QgICAgICAgICAgPSB1c2VydmFyLkNPTlRBQ1QKQ09OVEFDVElDT04gICAgICA9IHVzZXJ2YXIuQ09OVEFDVElDT04gaWYgbm90IHVzZXJ2YXIuQ09OVEFDVElDT04gPT0gJ2h0dHA6Ly8nIGVsc2UgSUNPTgpDT05UQUNURkFOQVJUICAgID0gdXNlcnZhci5DT05UQUNURkFOQVJUIGlmIG5vdCB1c2VydmFyLkNPTlRBQ1RGQU5BUlQgPT0gJ2h0dHA6Ly8nIGVsc2UgRkFOQVJUCkhJREVTUEFDRVJTICAgICAgPSB1c2VydmFyLkhJREVTUEFDRVJTCkNPTE9SMSAgICAgICAgICAgPSB1c2VydmFyLkNPTE9SMQpDT0xPUjIgICAgICAgICAgID0gdXNlcnZhci5DT0xPUjIKVEhFTUUxICAgICAgICAgICA9IHVzZXJ2YXIuVEhFTUUxClRIRU1FMiAgICAgICAgICAgPSB1c2VydmFyLlRIRU1FMgpUSEVNRTMgICAgICAgICAgID0gdXNlcnZhci5USEVNRTMKVEhFTUU0ICAgICAgICAgICA9IHVzZXJ2YXIuVEhFTUU0ClRIRU1FNSAgICAgICAgICAgPSB1c2VydmFyLlRIRU1FNQpUSEVNRTYgICAgICAgICAgID0gdXNlcnZhci5USEVNRTYKSUNPTkJVSUxEUyAgICAgICA9IHVzZXJ2YXIuSUNPTkJVSUxEUyBpZiBub3QgdXNlcnZhci5JQ09OQlVJTERTID09ICdodHRwOi8vJyBlbHNlIElDT04KSUNPTk1BSU5UICAgICAgICA9IHVzZXJ2YXIuSUNPTk1BSU5UIGlmIG5vdCB1c2VydmFyLklDT05NQUlOVCA9PSAnaHR0cDovLycgZWxzZSBJQ09OCklDT05BUEsgICAgICAgICAgPSB1c2VydmFyLklDT05BUEsgaWYgbm90IHVzZXJ2YXIuSUNPTkFQSyA9PSAnaHR0cDovLycgZWxzZSBJQ09OCklDT05BRERPTlMgICAgICAgPSB1c2VydmFyLklDT05BRERPTlMgaWYgbm90IHVzZXJ2YXIuSUNPTkFERE9OUyA9PSAnaHR0cDovLycgZWxzZSBJQ09OCklDT05ZT1VUVUJFICAgICAgPSB1c2VydmFyLklDT05ZT1VUVUJFIGlmIG5vdCB1c2VydmFyLklDT05ZT1VUVUJFID09ICdodHRwOi8vJyBlbHNlIElDT04KSUNPTlNBVkUgICAgICAgICA9IHVzZXJ2YXIuSUNPTlNBVkUgaWYgbm90IHVzZXJ2YXIuSUNPTlNBVkUgPT0gJ2h0dHA6Ly8nIGVsc2UgSUNPTgpJQ09OVFJBS1QgICAgICAgID0gdXNlcnZhci5JQ09OVFJBS1QgaWYgbm90IHVzZXJ2YXIuSUNPTlRSQUtUID09ICdodHRwOi8vJyBlbHNlIElDT04KSUNPTlJFQUwgICAgICAgICA9IHVzZXJ2YXIuSUNPTlJFQUwgaWYgbm90IHVzZXJ2YXIuSUNPTlJFQUwgPT0gJ2h0dHA6Ly8nIGVsc2UgSUNPTgpJQ09OTE9HSU4gICAgICAgID0gdXNlcnZhci5JQ09OTE9HSU4gaWYgbm90IHVzZXJ2YXIuSUNPTkxPR0lOID09ICdodHRwOi8vJyBlbHNlIElDT04KSUNPTkNPTlRBQ1QgICAgICA9IHVzZXJ2YXIuSUNPTkNPTlRBQ1QgaWYgbm90IHVzZXJ2YXIuSUNPTkNPTlRBQ1QgPT0gJ2h0dHA6Ly8nIGVsc2UgSUNPTgpJQ09OU0VUVElOR1MgICAgID0gdXNlcnZhci5JQ09OU0VUVElOR1MgaWYgbm90IHVzZXJ2YXIuSUNPTlNFVFRJTkdTID09ICdodHRwOi8vJyBlbHNlIElDT04KTE9HRklMRVMgICAgICAgICA9IHdpei5MT0dGSUxFUwpUUkFLVElEICAgICAgICAgID0gdHJha3RpdC5UUkFLVElECkRFQlJJRElEICAgICAgICAgPSBkZWJyaWRpdC5ERUJSSURJRApMT0dJTklEICAgICAgICAgID0gbG9naW5pdC5MT0dJTklECk1PRFVSTCAgICAgICAgICAgPSAnaHR0cDovL3RyaWJlY2EudHZhZGRvbnMuYWcvdG9vbHMvbWFpbnRlbmFuY2UvbW9kdWxlcy8nCk1PRFVSTDIgICAgICAgICAgPSAnaHR0cDovL21pcnJvcnMua29kaS50di9hZGRvbnMvamFydmlzLycKSU5TVEFMTE1FVEhPRFMgICA9IFsnQWx3YXlzIEFzaycsICdSZWxvYWQgUHJvZmlsZScsICdGb3JjZSBDbG9zZSddCkRFRkFVTFRQTFVHSU5TICAgPSBbJ21ldGFkYXRhLmFsYnVtLnVuaXZlcnNhbCcsICdtZXRhZGF0YS5hcnRpc3RzLnVuaXZlcnNhbCcsICdtZXRhZGF0YS5jb21tb24uZmFuYXJ0LnR2JywgJ21ldGFkYXRhLmNvbW1vbi5pbWRiLmNvbScsICdtZXRhZGF0YS5jb21tb24ubXVzaWNicmFpbnoub3JnJywgJ21ldGFkYXRhLnRoZW1vdmllZGIub3JnJywgJ21ldGFkYXRhLnR2ZGIuY29tJywgJ3NlcnZpY2UueGJtYy52ZXJzaW9uY2hlY2snXQp0cnk6CiAgICBJTlNUQUxMTUVUSE9EICAgID0gaW50KGZsb2F0KHdpei5nZXRTKCdpbnN0YWxsbWV0aG9kJykpKQpleGNlcHQ6CiAgICBJTlNUQUxMTUVUSE9EICAgID0gMAoKIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCiMjIyMjIyBNZW51IEl0ZW1zICAgIyMjIyMjIwojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKI2FkZERpciAoZGlzcGxheSxtb2RlLG5hbWU9Tm9uZSx1cmw9Tm9uZSxtZW51PU5vbmUsb3ZlcndyaXRlPVRydWUsZmFuYXJ0PUZBTkFSVCxpY29uPUlDT04sIHRoZW1laXQ9Tm9uZSkKI2FkZEZpbGUoZGlzcGxheSxtb2RlLG5hbWU9Tm9uZSx1cmw9Tm9uZSxtZW51PU5vbmUsb3ZlcndyaXRlPVRydWUsZmFuYXJ0PUZBTkFSVCxpY29uPUlDT04sIHRoZW1laXQ9Tm9uZSkKCmRlZiBpbmRleCgpOgoJaWYgQVVUT1VQREFURSA9PSAnWWVzJzoKCQlpZiB3aXoud29ya2luZ1VSTChXSVpBUkRGSUxFKSA9PSBUcnVlOgoJCQl2ZXIgPSB3aXouY2hlY2tXaXphcmQoJ3ZlcnNpb24nKQoJCQlpZiB2ZXIgPiBWRVJTSU9OOiBhZGRGaWxlKCclcyBbdiVzXSBbQ09MT1IgcmVkXVtCXVtBQ1RVQUxJWkFDSU9OIHYlc11bL0JdWy9DT0xPUl0nICUgKEFERE9OVElUTEUsIFZFUlNJT04sIHZlciksICd3aXphcmR1cGRhdGUnLCB0aGVtZWl0PVRIRU1FMikKCQkJZWxzZTogYWRkRmlsZSgnJXMgW3Ylc10nICUgKEFERE9OVElUTEUsIFZFUlNJT04pLCAnJywgdGhlbWVpdD1USEVNRTIpCgkJZWxzZTogYWRkRmlsZSgnJXMgW3Ylc10nICUgKEFERE9OVElUTEUsIFZFUlNJT04pLCAnJywgdGhlbWVpdD1USEVNRTIpCgllbHNlOiBhZGRGaWxlKCclcyBbdiVzXScgJSAoQURET05USVRMRSwgVkVSU0lPTiksICcnLCB0aGVtZWl0PVRIRU1FMikKCWlmIGxlbihCVUlMRE5BTUUpID4gMDoKCQl2ZXJzaW9uID0gd2l6LmNoZWNrQnVpbGQoQlVJTEROQU1FLCAndmVyc2lvbicpCgkJYnVpbGQgPSAnJXMgKHYlcyknICUgKEJVSUxETkFNRSwgQlVJTERWRVJTSU9OKQoJCWlmIHZlcnNpb24gPiBCVUlMRFZFUlNJT046IGJ1aWxkID0gJyVzIFtDT0xPUiByZWRdW0JdW0FDVFVBTElaQUNJT04gdiVzXVsvQl1bL0NPTE9SXScgJSAoYnVpbGQsIHZlcnNpb24pCgkJYWRkRGlyKGJ1aWxkLCd2aWV3YnVpbGQnLEJVSUxETkFNRSwgdGhlbWVpdD1USEVNRTQpCgkJdGhlbWVmaWxlID0gd2l6LnRoZW1lQ291bnQoQlVJTEROQU1FKQoJCWlmIG5vdCB0aGVtZWZpbGUgPT0gRmFsc2U6CgkJCWFkZEZpbGUoJ05vbmUnIGlmIEJVSUxEVEhFTUUgPT0gIiIgZWxzZSBCVUlMRFRIRU1FLCAndGhlbWUnLCBCVUlMRE5BTUUsIHRoZW1laXQ9VEhFTUU1KQoJZWxzZTogYWRkRGlyKCdObyBJbnN0YWxhZGEnLCAnYnVpbGRzJywgdGhlbWVpdD1USEVNRTQpCglpZiBISURFU1BBQ0VSUyA9PSAnTm8nOiBhZGRGaWxlKHdpei5zZXAoKSwgJycsIHRoZW1laXQ9VEhFTUUzKQoJYWRkRGlyICgnV2l6YXJkcyB5IFBhcmNoZXMnICAgICAgICAsJ2J1aWxkcycsICAgaWNvbj1JQ09OQlVJTERTLCAgIHRoZW1laXQ9VEhFTUUxKQoJYWRkRGlyICgnTWFudGVuaW1pZW50bycgICAsJ21haW50JywgICAgaWNvbj1JQ09OTUFJTlQsICAgIHRoZW1laXQ9VEhFTUUxKQoJaWYgd2l6LnBsYXRmb3JtKCkgPT0gJ2FuZHJvaWQnIG9yIERFVkVMT1BFUiA9PSAndHJ1ZSc6IGFkZERpciAoJ0luc3RhbGFyIEFwa3MnICwnYXBrJywgaWNvbj1JQ09OQVBLLCB0aGVtZWl0PVRIRU1FMSkKCWlmIG5vdCBBRERPTkZJTEUgPT0gJ2h0dHA6Ly8nOiBhZGREaXIgKCdJbnN0YWxhZG9yIGRlIEFkZG9ucycgLCdhZGRvbnMnLCBpY29uPUlDT05BRERPTlMsIHRoZW1laXQ9VEhFTUUxKQoJaWYgbm90IFlPVVRVQkVGSUxFID09ICdodHRwOi8vJyBhbmQgbm90IFlPVVRVQkVUSVRMRSA9PSAnJzogYWRkRGlyIChZT1VUVUJFVElUTEUgLCd5b3V0dWJlJywgaWNvbj1JQ09OWU9VVFVCRSwgdGhlbWVpdD1USEVNRTEpCglhZGREaXIgKCdDb3BpYSBkZSBzZWd1cmlkYWQnICAgICAsJ21haW50JywgJ2JhY2t1cCcsIGljb249SUNPTlNBVkUsICAgICB0aGVtZWl0PVRIRU1FMSkKCWlmIEhJREVDT05UQUNUID09ICdObyc6IGFkZEZpbGUoJ0NvbnRhY3RvJyAsJ2NvbnRhY3QnLCBpY29uPUlDT05DT05UQUNULCAgdGhlbWVpdD1USEVNRTEpCglpZiBISURFU1BBQ0VSUyA9PSAnTm8nOiBhZGRGaWxlKHdpei5zZXAoKSwgJycsIHRoZW1laXQ9VEhFTUUzKQoJYWRkRmlsZSgnQWp1c3RlcycgICAgICAsJ3NldHRpbmdzJywgaWNvbj1JQ09OU0VUVElOR1MsIHRoZW1laXQ9VEhFTUUxKQoJaWYgREVWRUxPUEVSID09ICd0cnVlJzogYWRkRGlyKCdEZXZlbG9wZXIgTWVudScsJ2RldmVsb3BlcicsIGljb249SUNPTlNFVFRJTkdTLCB0aGVtZWl0PVRIRU1FMSkKCXNldFZpZXcoJ2ZpbGVzJywgJ3ZpZXdUeXBlJykKCmRlZiBidWlsZE1lbnUoKToKCVdPUktJTkdVUkwgPSB3aXoud29ya2luZ1VSTChCVUlMREZJTEUpCglpZiBub3QgV09SS0lOR1VSTCA9PSBUcnVlOgoJCWFkZEZpbGUoJyVzIFZlcnNpb246ICVzJyAlIChNQ05BTUUsIEtPRElWKSwgJycsIGljb249SUNPTkJVSUxEUywgdGhlbWVpdD1USEVNRTMpCgkJYWRkRGlyICgnQ29uc2VydmFyIERhdG9zIEltcG9ydGFudGVzJyAgICAgICAsJ3NhdmVkYXRhJywgaWNvbj1JQ09OU0FWRSwgICAgIHRoZW1laXQ9VEhFTUUzKQoJCWlmIEhJREVTUEFDRVJTID09ICdObyc6IGFkZEZpbGUod2l6LnNlcCgpLCAnJywgdGhlbWVpdD1USEVNRTMpCgkJYWRkRmlsZSgnVXJsIGZvciB0eHQgZmlsZSBub3QgdmFsaWQnLCAnJywgaWNvbj1JQ09OQlVJTERTLCB0aGVtZWl0PVRIRU1FMykKCQlhZGRGaWxlKCclcycgJSBXT1JLSU5HVVJMLCAnJywgaWNvbj1JQ09OQlVJTERTLCB0aGVtZWl0PVRIRU1FMykKCWVsc2U6CgkJdG90YWwsIGNvdW50MTUsIGNvdW50MTYsIGNvdW50MTcsIGNvdW50MTgsIGFkdWx0Y291bnQsIGhpZGRlbiA9IHdpei5idWlsZENvdW50KCkKCQl0aGlyZCA9IEZhbHNlOyBhZGRpbiA9IFtdCgkJaWYgVEhJUkRQQVJUWSA9PSAndHJ1ZSc6CgkJCWlmIG5vdCBUSElSRDFOQU1FID09ICcnIGFuZCBub3QgVEhJUkQxVVJMID09ICcnOiB0aGlyZCA9IFRydWU7IGFkZGluLmFwcGVuZCgnMScpCgkJCWlmIG5vdCBUSElSRDJOQU1FID09ICcnIGFuZCBub3QgVEhJUkQyVVJMID09ICcnOiB0aGlyZCA9IFRydWU7IGFkZGluLmFwcGVuZCgnMicpCgkJCWlmIG5vdCBUSElSRDNOQU1FID09ICcnIGFuZCBub3QgVEhJUkQzVVJMID09ICcnOiB0aGlyZCA9IFRydWU7IGFkZGluLmFwcGVuZCgnMycpCgkJbGluayAgPSB3aXoub3BlblVSTChCVUlMREZJTEUpLnJlcGxhY2UoJ1xuJywnJykucmVwbGFjZSgnXHInLCcnKS5yZXBsYWNlKCdcdCcsJycpLnJlcGxhY2UoJ2d1aT0iIicsICdndWk9Imh0dHA6Ly8iJykucmVwbGFjZSgndGhlbWU9IiInLCAndGhlbWU9Imh0dHA6Ly8iJykucmVwbGFjZSgnYWR1bHQ9IiInLCAnYWR1bHQ9Im5vIicpCgkJbWF0Y2ggPSByZS5jb21waWxlKCduYW1lPSIoLis/KSIuKz9lcnNpb249IiguKz8pIi4rP3JsPSIoLis/KSIuKz91aT0iKC4rPykiLis/b2RpPSIoLis/KSIuKz9oZW1lPSIoLis/KSIuKz9jb249IiguKz8pIi4rP2FuYXJ0PSIoLis/KSIuKz9kdWx0PSIoLis/KSIuKz9lc2NyaXB0aW9uPSIoLis/KSInKS5maW5kYWxsKGxpbmspCgkJaWYgdG90YWwgPT0gMSBhbmQgdGhpcmQgPT0gRmFsc2U6CgkJCWZvciBuYW1lLCB2ZXJzaW9uLCB1cmwsIGd1aSwga29kaSwgdGhlbWUsIGljb24sIGZhbmFydCwgYWR1bHQsIGRlc2NyaXB0aW9uIGluIG1hdGNoOgoJCQkJaWYgbm90IFNIT1dBRFVMVCA9PSAndHJ1ZScgYW5kIGFkdWx0Lmxvd2VyKCkgPT0gJ3llcyc6IGNvbnRpbnVlCgkJCQlpZiBub3QgREVWRUxPUEVSID09ICd0cnVlJyBhbmQgd2l6LnN0clRlc3QobmFtZSk6IGNvbnRpbnVlCgkJCQl2aWV3QnVpbGQobWF0Y2hbMF1bMF0pCgkJCQlyZXR1cm4KCQlhZGRGaWxlKCclcyBWZXJzaW9uOiAlcycgJSAoTUNOQU1FLCBLT0RJViksICcnLCBpY29uPUlDT05CVUlMRFMsIHRoZW1laXQ9VEhFTUUzKQoJCWFkZERpciAoJ0NvbnNlcnZhciBEYXRvcyBJbXBvcnRhbnRlcycgICAgICAgLCdzYXZlZGF0YScsIGljb249SUNPTlNBVkUsICAgICB0aGVtZWl0PVRIRU1FMykKCQlpZiBISURFU1BBQ0VSUyA9PSAnTm8nOiBhZGRGaWxlKHdpei5zZXAoKSwgJycsIHRoZW1laXQ9VEhFTUUzKQoJCWlmIHRoaXJkID09IFRydWU6CgkJCWZvciBpdGVtIGluIGFkZGluOgoJCQkJbmFtZSA9IGV2YWwoJ1RISVJEJXNOQU1FJyAlIGl0ZW0pCgkJCQlhZGREaXIgKCJbQl0lc1svQl0iICUgbmFtZSwgJ3ZpZXd0aGlyZHBhcnR5JywgaXRlbSwgaWNvbj1JQ09OQlVJTERTLCB0aGVtZWl0PVRIRU1FMykKCQlpZiBsZW4obWF0Y2gpID49IDE6CgkJCWlmIFNFUEVSQVRFID09ICd0cnVlJzoKCQkJCWZvciBuYW1lLCB2ZXJzaW9uLCB1cmwsIGd1aSwga29kaSwgdGhlbWUsIGljb24sIGZhbmFydCwgYWR1bHQsIGRlc2NyaXB0aW9uIGluIG1hdGNoOgoJCQkJCWlmIG5vdCBTSE9XQURVTFQgPT0gJ3RydWUnIGFuZCBhZHVsdC5sb3dlcigpID09ICd5ZXMnOiBjb250aW51ZQoJCQkJCWlmIG5vdCBERVZFTE9QRVIgPT0gJ3RydWUnIGFuZCB3aXouc3RyVGVzdChuYW1lKTogY29udGludWUKCQkJCQltZW51ID0gY3JlYXRlTWVudSgnaW5zdGFsbCcsICcnLCBuYW1lKQoJCQkJCWFkZERpcignWyVzXSAlcyAodiVzKScgJSAoZmxvYXQoa29kaSksIG5hbWUsIHZlcnNpb24pLCAndmlld2J1aWxkJywgbmFtZSwgZGVzY3JpcHRpb249ZGVzY3JpcHRpb24sIGZhbmFydD1mYW5hcnQsaWNvbj1pY29uLCBtZW51PW1lbnUsIHRoZW1laXQ9VEhFTUUyKQoJCQllbHNlOgoJCQkJaWYgY291bnQxOCA+IDA6CgkJCQkJc3RhdGUgPSAnKycgaWYgU0hPVzE4ID09ICdmYWxzZScgZWxzZSAnLScKCQkJCQlhZGRGaWxlKCdbQl0lcyBXaXphcmRzIHkgUGFyY2hlcyBwYXJhIEtvZGkgMTggTGVpYSAoJXMpWy9CXScgJSAoc3RhdGUsIGNvdW50MTgpLCAndG9nZ2xlc2V0dGluZycsICAnc2hvdzE4JywgdGhlbWVpdD1USEVNRTMpCgkJCQkJaWYgU0hPVzE4ID09ICdmYWxzZSc6CgkJCQkJCWZvciBuYW1lLCB2ZXJzaW9uLCB1cmwsIGd1aSwga29kaSwgdGhlbWUsIGljb24sIGZhbmFydCwgYWR1bHQsIGRlc2NyaXB0aW9uIGluIG1hdGNoOgoJCQkJCQkJaWYgbm90IFNIT1dBRFVMVCA9PSAndHJ1ZScgYW5kIGFkdWx0Lmxvd2VyKCkgPT0gJ3llcyc6IGNvbnRpbnVlCgkJCQkJCQlpZiBub3QgREVWRUxPUEVSID09ICd0cnVlJyBhbmQgd2l6LnN0clRlc3QobmFtZSk6IGNvbnRpbnVlCgkJCQkJCQlrb2RpdiA9IGludChmbG9hdChrb2RpKSkKCQkJCQkJCWlmIGtvZGl2ID09IDE4OgoJCQkJCQkJCW1lbnUgPSBjcmVhdGVNZW51KCdpbnN0YWxsJywgJycsIG5hbWUpCgkJCQkJCQkJYWRkRGlyKCdbJXNdICVzICh2JXMpJyAlIChmbG9hdChrb2RpKSwgbmFtZSwgdmVyc2lvbiksICd2aWV3YnVpbGQnLCBuYW1lLCBkZXNjcmlwdGlvbj1kZXNjcmlwdGlvbiwgZmFuYXJ0PWZhbmFydCxpY29uPWljb24sIG1lbnU9bWVudSwgdGhlbWVpdD1USEVNRTIpCgkJCQlpZiBjb3VudDE3ID4gMDoKCQkJCQlzdGF0ZSA9ICcrJyBpZiBTSE9XMTcgPT0gJ2ZhbHNlJyBlbHNlICctJwoJCQkJCWFkZEZpbGUoJ1tCXSVzIFdpemFyZHMgeSBQYXJjaGVzIHBhcmEgS29kaSAxNyBLcnlwdG9uICglcylbL0JdJyAlIChzdGF0ZSwgY291bnQxNyksICd0b2dnbGVzZXR0aW5nJywgICdzaG93MTcnLCB0aGVtZWl0PVRIRU1FMykKCQkJCQlpZiBTSE9XMTcgPT0gJ2ZhbHNlJzoKCQkJCQkJZm9yIG5hbWUsIHZlcnNpb24sIHVybCwgZ3VpLCBrb2RpLCB0aGVtZSwgaWNvbiwgZmFuYXJ0LCBhZHVsdCwgZGVzY3JpcHRpb24gaW4gbWF0Y2g6CgkJCQkJCQlpZiBub3QgU0hPV0FEVUxUID09ICd0cnVlJyBhbmQgYWR1bHQubG93ZXIoKSA9PSAneWVzJzogY29udGludWUKCQkJCQkJCWlmIG5vdCBERVZFTE9QRVIgPT0gJ3RydWUnIGFuZCB3aXouc3RyVGVzdChuYW1lKTogY29udGludWUKCQkJCQkJCWtvZGl2ID0gaW50KGZsb2F0KGtvZGkpKQoJCQkJCQkJaWYga29kaXYgPT0gMTc6CgkJCQkJCQkJbWVudSA9IGNyZWF0ZU1lbnUoJ2luc3RhbGwnLCAnJywgbmFtZSkKCQkJCQkJCQlhZGREaXIoJ1slc10gJXMgKHYlcyknICUgKGZsb2F0KGtvZGkpLCBuYW1lLCB2ZXJzaW9uKSwgJ3ZpZXdidWlsZCcsIG5hbWUsIGRlc2NyaXB0aW9uPWRlc2NyaXB0aW9uLCBmYW5hcnQ9ZmFuYXJ0LGljb249aWNvbiwgbWVudT1tZW51LCB0aGVtZWl0PVRIRU1FMikKCQkJCWlmIGNvdW50MTYgPiAwOgoJCQkJCXN0YXRlID0gJysnIGlmIFNIT1cxNiA9PSAnZmFsc2UnIGVsc2UgJy0nCgkJCQkJYWRkRmlsZSgnW0JdJXMgUGFyY2hlcyBleHRyYSAoJXMpWy9CXScgJSAoc3RhdGUsIGNvdW50MTYpLCAndG9nZ2xlc2V0dGluZycsICAnc2hvdzE2JywgdGhlbWVpdD1USEVNRTMpCgkJCQkJaWYgU0hPVzE2ID09ICdmYWxzZSc6CgkJCQkJCWZvciBuYW1lLCB2ZXJzaW9uLCB1cmwsIGd1aSwga29kaSwgdGhlbWUsIGljb24sIGZhbmFydCwgYWR1bHQsIGRlc2NyaXB0aW9uIGluIG1hdGNoOgoJCQkJCQkJaWYgbm90IFNIT1dBRFVMVCA9PSAndHJ1ZScgYW5kIGFkdWx0Lmxvd2VyKCkgPT0gJ3llcyc6IGNvbnRpbnVlCgkJCQkJCQlpZiBub3QgREVWRUxPUEVSID09ICd0cnVlJyBhbmQgd2l6LnN0clRlc3QobmFtZSk6IGNvbnRpbnVlCgkJCQkJCQlrb2RpdiA9IGludChmbG9hdChrb2RpKSkKCQkJCQkJCWlmIGtvZGl2ID09IDE2OgoJCQkJCQkJCW1lbnUgPSBjcmVhdGVNZW51KCdpbnN0YWxsJywgJycsIG5hbWUpCgkJCQkJCQkJYWRkRGlyKCdbMTcvMThdICVzICh2JXMpJyAlIChuYW1lLCB2ZXJzaW9uKSwgJ3ZpZXdidWlsZCcsIG5hbWUsIGRlc2NyaXB0aW9uPWRlc2NyaXB0aW9uLCBmYW5hcnQ9ZmFuYXJ0LGljb249aWNvbiwgbWVudT1tZW51LCB0aGVtZWl0PVRIRU1FMikKCQkJCWlmIGNvdW50MTUgPiAwOgoJCQkJCXN0YXRlID0gJysnIGlmIFNIT1cxNSA9PSAnZmFsc2UnIGVsc2UgJy0nCgkJCQkJYWRkRmlsZSgnW0JdJXMgVmVyc2lvbmVzIGFudGVyaW9yZXMgKCVzKVsvQl0nICUgKHN0YXRlLCBjb3VudDE1KSwgJ3RvZ2dsZXNldHRpbmcnLCAgJ3Nob3cxNScsIHRoZW1laXQ9VEhFTUUzKQoJCQkJCWlmIFNIT1cxNSA9PSAnZmFsc2UnOgoJCQkJCQlmb3IgbmFtZSwgdmVyc2lvbiwgdXJsLCBndWksIGtvZGksIHRoZW1lLCBpY29uLCBmYW5hcnQsIGFkdWx0LCBkZXNjcmlwdGlvbiBpbiBtYXRjaDoKCQkJCQkJCWlmIG5vdCBTSE9XQURVTFQgPT0gJ3RydWUnIGFuZCBhZHVsdC5sb3dlcigpID09ICd5ZXMnOiBjb250aW51ZQoJCQkJCQkJaWYgbm90IERFVkVMT1BFUiA9PSAndHJ1ZScgYW5kIHdpei5zdHJUZXN0KG5hbWUpOiBjb250aW51ZQoJCQkJCQkJa29kaXYgPSBpbnQoZmxvYXQoa29kaSkpCgkJCQkJCQlpZiBrb2RpdiA8PSAxNToKCQkJCQkJCQltZW51ID0gY3JlYXRlTWVudSgnaW5zdGFsbCcsICcnLCBuYW1lKQoJCQkJCQkJCWFkZERpcignWyVzXSAlcyAodiVzKScgJSAoZmxvYXQoa29kaSksIG5hbWUsIHZlcnNpb24pLCAndmlld2J1aWxkJywgbmFtZSwgZGVzY3JpcHRpb249ZGVzY3JpcHRpb24sIGZhbmFydD1mYW5hcnQsaWNvbj1pY29uLCBtZW51PW1lbnUsIHRoZW1laXQ9VEhFTUUyKQoJCWVsaWYgaGlkZGVuID4gMDogCgkJCWlmIGFkdWx0Y291bnQgPiAwOgoJCQkJYWRkRmlsZSgnVGhlcmUgaXMgY3VycmVudGx5IG9ubHkgQWR1bHQgYnVpbGRzJywgJycsIGljb249SUNPTkJVSUxEUywgdGhlbWVpdD1USEVNRTMpCgkJCQlhZGRGaWxlKCdFbmFibGUgU2hvdyBBZHVsdHMgaW4gQWRkb24gU2V0dGluZ3MgPiBNaXNjJywgJycsIGljb249SUNPTkJVSUxEUywgdGhlbWVpdD1USEVNRTMpCgkJCWVsc2U6CgkJCQlhZGRGaWxlKCdDdXJyZW50bHkgTm8gQnVpbGRzIE9mZmVyZWQgZnJvbSAlcycgJSBBRERPTlRJVExFLCAnJywgaWNvbj1JQ09OQlVJTERTLCB0aGVtZWl0PVRIRU1FMykKCQllbHNlOiBhZGRGaWxlKCdUZXh0IGZpbGUgZm9yIGJ1aWxkcyBub3QgZm9ybWF0ZWQgY29ycmVjdGx5LicsICcnLCBpY29uPUlDT05CVUlMRFMsIHRoZW1laXQ9VEhFTUUzKQoJc2V0VmlldygnZmlsZXMnLCAndmlld1R5cGUnKQoKZGVmIHZpZXdCdWlsZChuYW1lKToKICAgIGJmID0gd2l6LnRleHRDYWNoZShCVUlMREZJTEUpCiAgICBpZiBiZiA9PSBGYWxzZToKICAgICAgICBXT1JLSU5HVVJMID0gd2l6LndvcmtpbmdVUkwoQlVJTERGSUxFKQogICAgICAgIGFkZEZpbGUoJ1VybCBmb3IgdHh0IGZpbGUgbm90IHZhbGlkJywgJycsIHRoZW1laXQ9VEhFTUUzKQogICAgICAgIGFkZEZpbGUoJyVzJyAlIFdPUktJTkdVUkwsICcnLCB0aGVtZWl0PVRIRU1FMykKICAgICAgICByZXR1cm4KICAgIGlmIHdpei5jaGVja0J1aWxkKG5hbWUsICd2ZXJzaW9uJykgPT0gRmFsc2U6CiAgICAgICAgYWRkRmlsZSgnRXJyb3IgcmVhZGluZyB0aGUgdHh0IGZpbGUuJywgJycsIHRoZW1laXQ9VEhFTUUzKQogICAgICAgIGFkZEZpbGUoJyVzIHdhcyBub3QgZm91bmQgaW4gdGhlIGJ1aWxkcyBsaXN0LicgJSBuYW1lLCAnJywgdGhlbWVpdD1USEVNRTMpCiAgICAgICAgcmV0dXJuCiAgICBsaW5rID0gYmYucmVwbGFjZSgnXG4nLCcnKS5yZXBsYWNlKCdccicsJycpLnJlcGxhY2UoJ1x0JywnJykucmVwbGFjZSgnZ3VpPSIiJywgJ2d1aT0iaHR0cDovLyInKS5yZXBsYWNlKCd0aGVtZT0iIicsICd0aGVtZT0iaHR0cDovLyInKQogICAgbWF0Y2ggPSByZS5jb21waWxlKCduYW1lPSIlcyIuKz9lcnNpb249IiguKz8pIi4rP3JsPSIoLis/KSIuKz91aT0iKC4rPykiLis/b2RpPSIoLis/KSIuKz9oZW1lPSIoLis/KSIuKz9jb249IiguKz8pIi4rP2FuYXJ0PSIoLis/KSIuKz9yZXZpZXc9IiguKz8pIi4rP2R1bHQ9IiguKz8pIi4rP25mbz0iKC4rPykiLis/ZXNjcmlwdGlvbj0iKC4rPykiJyAlIG5hbWUpLmZpbmRhbGwobGluaykKICAgIGZvciB2ZXJzaW9uLCB1cmwsIGd1aSwga29kaSwgdGhlbWVmaWxlLCBpY29uLCBmYW5hcnQsIHByZXZpZXcsIGFkdWx0LCBpbmZvLCBkZXNjcmlwdGlvbiBpbiBtYXRjaDoKICAgICAgICBpY29uICAgICAgICA9IGljb24KICAgICAgICBmYW5hcnQgICAgICA9IGZhbmFydAogICAgICAgIGJ1aWxkICAgICAgID0gJyVzICh2JXMpJyAlIChuYW1lLCB2ZXJzaW9uKQogICAgICAgIGlmIEJVSUxETkFNRSA9PSBuYW1lIGFuZCB2ZXJzaW9uID4gQlVJTERWRVJTSU9OOgogICAgICAgICAgICBidWlsZCA9ICclcyBbQ09MT1IgcmVkXVtVbHRpbWEgdiVzXVsvQ09MT1JdJyAlIChidWlsZCwgQlVJTERWRVJTSU9OKQogICAgICAgIGFkZEZpbGUoYnVpbGQsICcnLCBkZXNjcmlwdGlvbj1kZXNjcmlwdGlvbiwgZmFuYXJ0PWZhbmFydCwgaWNvbj1pY29uLCB0aGVtZWl0PVRIRU1FNikKICAgICAgICBpZiBISURFU1BBQ0VSUyA9PSAnTm8nOiBhZGRGaWxlKHdpei5zZXAoKSwgJycsIHRoZW1laXQ9VEhFTUUzKQogICAgICAgIGFkZERpciAoJ0NvbnNlcnZhciBEYXRvcyBJbXBvcnRhbnRlcycsICAgICAgICdzYXZlZGF0YScsIGljb249SUNPTlNBVkUsICAgICB0aGVtZWl0PVRIRU1FMykKICAgICAgICBhZGRGaWxlKCdJbmZvcm1hY2lvbiBkZSBsYSB2ZXJzaW9uJywgICAgJ2J1aWxkaW5mbycsIG5hbWUsIGRlc2NyaXB0aW9uPWRlc2NyaXB0aW9uLCBmYW5hcnQ9ZmFuYXJ0LCBpY29uPWljb24sIHRoZW1laXQ9VEhFTUUzKQogICAgICAgIHRlbXAxID0gaW50KGZsb2F0KEtPRElWKSk7IHRlbXAyID0gaW50KGZsb2F0KGtvZGkpKQogICAgICAgIGlmIG5vdCB0ZW1wMSA9PSB0ZW1wMjoKICAgICAgICAgICAgaWYgdGVtcDEgPT0gMTYgYW5kIHRlbXAyIDw9IDE1OiB3YXJuaW5nID0gRmFsc2UKICAgICAgICAgICAgZWxzZTogd2FybmluZyA9IFRydWUKICAgICAgICBlbHNlOiB3YXJuaW5nID0gRmFsc2UKICAgICAgICBpZiB3YXJuaW5nID09IFRydWU6CiAgICAgICAgICAgIGFkZEZpbGUoJyglcykgW0ldQ29tcHJ1ZWJhIHF1ZSBlc3RlIFdpemFyZC9QYXJjaGUgZXMgcGFyYSB0dSB2ZXJzaW9uIGRlIEtvZGk6ICVzKVsvSV0nICUgKHN0cihrb2RpKSwgc3RyKEtPRElWKSksICcnLCBmYW5hcnQ9ZmFuYXJ0LCBpY29uPWljb24sIHRoZW1laXQ9VEhFTUUzKQogICAgICAgIGFkZEZpbGUod2l6LnNlcCgnSU5TVEFMQURPUiBXSVpBUkRTIEJSRUFLSU5HIEJBRCcpLCAnJywgZmFuYXJ0PWZhbmFydCwgaWNvbj1pY29uLCB0aGVtZWl0PVRIRU1FMykKICAgICAgICBhZGRGaWxlKCdbQ09MT1IgbGltZV1bQl1JTlNUQUxBUiBXSVpBUkRbL0JdWy9DT0xPUl0nICAgLCAnaW5zdGFsbCcsIG5hbWUsICdmcmVzaCcgICwgZGVzY3JpcHRpb249ZGVzY3JpcHRpb24sIGZhbmFydD1mYW5hcnQsIGljb249aWNvbiwgdGhlbWVpdD1USEVNRTEpCiAgICAgICAgYWRkRmlsZSgnW0NPTE9SIGdvbGRdW0JdSU5TVEFMQVIgUEFSQ0hFWy9CXVsvQ09MT1JdJywgJ2luc3RhbGwnLCBuYW1lLCAnbm9ybWFsJyAsIGRlc2NyaXB0aW9uPWRlc2NyaXB0aW9uLCBmYW5hcnQ9ZmFuYXJ0LCBpY29uPWljb24sIHRoZW1laXQ9VEhFTUUxKQogICAgICAgIGlmIG5vdCBndWkgPT0gJ2h0dHA6Ly8nOiBhZGRGaWxlKCdBcHBseSBndWlGaXgnICAgICwgJ2luc3RhbGwnLCBuYW1lLCAnZ3VpJyAgICAgLCBkZXNjcmlwdGlvbj1kZXNjcmlwdGlvbiwgZmFuYXJ0PWZhbmFydCwgaWNvbj1pY29uLCB0aGVtZWl0PVRIRU1FMSkKICAgICAgICBpZiBub3QgdGhlbWVmaWxlID09ICdodHRwOi8vJzoKICAgICAgICAgICAgdGhlbWVjaGVjayA9IHdpei50ZXh0Q2FjaGUodGhlbWVmaWxlKQogICAgICAgICAgICBpZiBub3QgdGhlbWVjaGVjayA9PSBGYWxzZToKICAgICAgICAgICAgICAgIGFkZEZpbGUod2l6LnNlcCgnVEhFTUVTJyksICcnLCBmYW5hcnQ9ZmFuYXJ0LCBpY29uPWljb24sIHRoZW1laXQ9VEhFTUUzKQogICAgICAgICAgICAgICAgbGluayAgPSB0aGVtZWNoZWNrLnJlcGxhY2UoJ1xuJywnJykucmVwbGFjZSgnXHInLCcnKS5yZXBsYWNlKCdcdCcsJycpCiAgICAgICAgICAgICAgICBtYXRjaCA9IHJlLmNvbXBpbGUoJ25hbWU9IiguKz8pIi4rP3JsPSIoLis/KSIuKz9jb249IiguKz8pIi4rP2FuYXJ0PSIoLis/KSIuKz9kdWx0PSIoLis/KSIuKz9lc2NyaXB0aW9uPSIoLis/KSInKS5maW5kYWxsKGxpbmspCiAgICAgICAgICAgICAgICBmb3IgdGhlbWVuYW1lLCB0aGVtZXVybCwgdGhlbWVpY29uLCB0aGVtZWZhbmFydCwgdGhlbWVhZHVsdCwgZGVzY3JpcHRpb24gaW4gbWF0Y2g6CiAgICAgICAgICAgICAgICAgICAgaWYgbm90IFNIT1dBRFVMVCA9PSAndHJ1ZScgYW5kIHRoZW1lYWR1bHQubG93ZXIoKSA9PSAneWVzJzogY29udGludWUKICAgICAgICAgICAgICAgICAgICB0aGVtZWljb24gICA9IHRoZW1laWNvbiAgIGlmIHRoZW1laWNvbiAgID09ICdodHRwOi8vJyBlbHNlIGljb24KICAgICAgICAgICAgICAgICAgICB0aGVtZWZhbmFydCA9IHRoZW1lZmFuYXJ0IGlmIHRoZW1lZmFuYXJ0ID09ICdodHRwOi8vJyBlbHNlIGZhbmFydAogICAgICAgICAgICAgICAgICAgIGFkZEZpbGUodGhlbWVuYW1lIGlmIG5vdCB0aGVtZW5hbWUgPT0gQlVJTERUSEVNRSBlbHNlICJbQl0lcyAoSW5zdGFsbGVkKVsvQl0iICUgdGhlbWVuYW1lLCAndGhlbWUnLCBuYW1lLCB0aGVtZW5hbWUsIGRlc2NyaXB0aW9uPWRlc2NyaXB0aW9uLCBmYW5hcnQ9dGhlbWVmYW5hcnQsIGljb249dGhlbWVpY29uLCB0aGVtZWl0PVRIRU1FMykKICAgIHNldFZpZXcoJ2ZpbGVzJywgJ3ZpZXdUeXBlJykKCmRlZiB2aWV3VGhpcmRMaXN0KG51bWJlcik6CiAgICBuYW1lID0gZXZhbCgnVEhJUkQlc05BTUUnICUgbnVtYmVyKQogICAgdXJsICA9IGV2YWwoJ1RISVJEJXNVUkwnICUgbnVtYmVyKQogICAgd29yayA9IHdpei53b3JraW5nVVJMKHVybCkKICAgIGlmIG5vdCB3b3JrID09IFRydWU6CiAgICAgICAgYWRkRmlsZSgnVXJsIGZvciB0eHQgZmlsZSBub3QgdmFsaWQnLCAnJywgaWNvbj1JQ09OQlVJTERTLCB0aGVtZWl0PVRIRU1FMykKICAgICAgICBhZGRGaWxlKCclcycgJSBXT1JLSU5HVVJMLCAnJywgaWNvbj1JQ09OQlVJTERTLCB0aGVtZWl0PVRIRU1FMykKICAgIGVsc2U6CiAgICAgICAgdHlwZSwgYnVpbGRzbGlzdCA9IHdpei50aGlyZFBhcnR5KHVybCkKICAgICAgICBhZGRGaWxlKCJbQl0lc1svQl0iICUgbmFtZSwgJycsIHRoZW1laXQ9VEhFTUUzKQogICAgICAgIGlmIEhJREVTUEFDRVJTID09ICdObyc6IGFkZEZpbGUod2l6LnNlcCgpLCAnJywgdGhlbWVpdD1USEVNRTMpCiAgICAgICAgaWYgdHlwZToKICAgICAgICAgICAgZm9yIG5hbWUsIHZlcnNpb24sIHVybCwga29kaSwgaWNvbiwgZmFuYXJ0LCBhZHVsdCwgZGVzY3JpcHRpb24gaW4gYnVpbGRzbGlzdDoKICAgICAgICAgICAgICAgIGlmIG5vdCBTSE9XQURVTFQgPT0gJ3RydWUnIGFuZCBhZHVsdC5sb3dlcigpID09ICd5ZXMnOiBjb250aW51ZQogICAgICAgICAgICAgICAgYWRkRmlsZSgiWyVzXSAlcyB2JXMiICUgKGtvZGksIG5hbWUsIHZlcnNpb24pLCAnaW5zdGFsbHRoaXJkJywgbmFtZSwgdXJsLCBpY29uPWljb24sIGZhbmFydD1mYW5hcnQsIGRlc2NyaXB0aW9uPWRlc2NyaXB0aW9uLCB0aGVtZWl0PVRIRU1FMikKICAgICAgICBlbHNlOgogICAgICAgICAgICBmb3IgbmFtZSwgdXJsLCBpY29uLCBmYW5hcnQsIGRlc2NyaXB0aW9uIGluIGJ1aWxkc2xpc3Q6CiAgICAgICAgICAgICAgICBhZGRGaWxlKG5hbWUsICdpbnN0YWxsdGhpcmQnLCBuYW1lLCB1cmwsIGljb249aWNvbiwgZmFuYXJ0PWZhbmFydCwgZGVzY3JpcHRpb249ZGVzY3JpcHRpb24sIHRoZW1laXQ9VEhFTUUyKQoKZGVmIGVkaXRUaGlyZFBhcnR5KG51bWJlcik6CiAgICBuYW1lICA9IGV2YWwoJ1RISVJEJXNOQU1FJyAlIG51bWJlcikKICAgIHVybCAgID0gZXZhbCgnVEhJUkQlc1VSTCcgJSBudW1iZXIpCiAgICBuYW1lMiA9IHdpei5nZXRLZXlib2FyZChuYW1lLCAnSW50cm9kdWNlIGVsIG5vbWJyZSBkZSBsYSBidWlsZC93aXphcmQnKQogICAgdXJsMiAgPSB3aXouZ2V0S2V5Ym9hcmQodXJsLCAnSW50cm9kdWNlIGxhIFVSTCBkZWwgYXJjaGl2byB3aXphcmQgZGUgbGEgQnVpbGQnKQoKICAgIHdpei5zZXRTKCd3aXphcmQlc25hbWUnICUgbnVtYmVyLCBuYW1lMikKICAgIHdpei5zZXRTKCd3aXphcmQlc3VybCcgJSBudW1iZXIsIHVybDIpCgpkZWYgYXBrU2NyYXBlcihuYW1lPSIiKToKICAgIGlmIG5hbWUgPT0gJ2tvZGknOgogICAgICAgIGtvZGl1cmwxID0gJ2h0dHA6Ly9taXJyb3JzLmtvZGkudHYvcmVsZWFzZXMvYW5kcm9pZC9hcm0vJwogICAgICAgIGtvZGl1cmwyID0gJ2h0dHA6Ly9taXJyb3JzLmtvZGkudHYvcmVsZWFzZXMvYW5kcm9pZC9hcm0vb2xkLycKICAgICAgICB1cmwxID0gd2l6Lm9wZW5VUkwoa29kaXVybDEpLnJlcGxhY2UoJ1xuJywgJycpLnJlcGxhY2UoJ1xyJywgJycpLnJlcGxhY2UoJ1x0JywgJycpCiAgICAgICAgdXJsMiA9IHdpei5vcGVuVVJMKGtvZGl1cmwyKS5yZXBsYWNlKCdcbicsICcnKS5yZXBsYWNlKCdccicsICcnKS5yZXBsYWNlKCdcdCcsICcnKQogICAgICAgIHggPSAwCiAgICAgICAgbWF0Y2gxID0gcmUuY29tcGlsZSgnPHRyPjx0ZD48YSBocmVmPSIoLis/KSIuKz8+KC4rPyk8L2E+PC90ZD48dGQ+KC4rPyk8L3RkPjx0ZD4oLis/KTwvdGQ+PC90cj4nKS5maW5kYWxsKHVybDEpCiAgICAgICAgbWF0Y2gyID0gcmUuY29tcGlsZSgnPHRyPjx0ZD48YSBocmVmPSIoLis/KSIuKz8+KC4rPyk8L2E+PC90ZD48dGQ+KC4rPyk8L3RkPjx0ZD4oLis/KTwvdGQ+PC90cj4nKS5maW5kYWxsKHVybDIpCgogICAgICAgIGFkZEZpbGUoIlZlcnNpb25lcyBvZmljaWFsZXMgZGUgS29kaSIsIHRoZW1laXQ9VEhFTUUxKQogICAgICAgIHJjID0gRmFsc2UKICAgICAgICBmb3IgdXJsLCBuYW1lLCBzaXplLCBkYXRlIGluIG1hdGNoMToKICAgICAgICAgICAgaWYgdXJsIGluIFsnLi4vJywgJ29sZC8nXTogY29udGludWUKICAgICAgICAgICAgaWYgbm90IHVybC5lbmRzd2l0aCgnLmFwaycpOiBjb250aW51ZQogICAgICAgICAgICBpZiBub3QgdXJsLmZpbmQoJ18nKSA9PSAtMSBhbmQgcmMgPT0gVHJ1ZTogY29udGludWUKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgdGVtcG5hbWUgPSBuYW1lLnNwbGl0KCctJykKICAgICAgICAgICAgICAgIGlmIG5vdCB1cmwuZmluZCgnXycpID09IC0xOgogICAgICAgICAgICAgICAgICAgIHJjID0gVHJ1ZQogICAgICAgICAgICAgICAgICAgIG5hbWUyLCB2MiA9IHRlbXBuYW1lWzJdLnNwbGl0KCdfJykKICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgbmFtZTIgPSB0ZW1wbmFtZVsyXQogICAgICAgICAgICAgICAgICAgIHYyID0gJycKICAgICAgICAgICAgICAgIHRpdGxlID0gIltDT0xPUiAlc10lcyB2JXMlcyAlc1svQ09MT1JdIFtDT0xPUiAlc10lc1svQ09MT1JdIFtDT0xPUiAlc10lc1svQ09MT1JdIiAlIChDT0xPUjEsIHRlbXBuYW1lWzBdLnRpdGxlKCksIHRlbXBuYW1lWzFdLCB2Mi51cHBlcigpLCBuYW1lMiwgQ09MT1IyLCBzaXplLnJlcGxhY2UoJyAnLCAnJyksIENPTE9SMSwgZGF0ZSkKICAgICAgICAgICAgICAgIGRvd25sb2FkID0gdXJsam9pbihrb2RpdXJsMSwgdXJsKQogICAgICAgICAgICAgICAgYWRkRmlsZSh0aXRsZSwgJ2Fwa2luc3RhbGwnLCAiJXMgdiVzJXMgJXMiICUgKHRlbXBuYW1lWzBdLnRpdGxlKCksIHRlbXBuYW1lWzFdLCB2Mi51cHBlcigpLCBuYW1lMiksIGRvd25sb2FkKQogICAgICAgICAgICAgICAgeCArPSAxCiAgICAgICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgICAgIHdpei5sb2coIkVycm9yIG9uOiAlcyIgJSBuYW1lKQoKICAgICAgICBmb3IgdXJsLCBuYW1lLCBzaXplLCBkYXRlIGluIG1hdGNoMjoKICAgICAgICAgICAgaWYgdXJsIGluIFsnLi4vJywgJ29sZC8nXTogY29udGludWUKICAgICAgICAgICAgaWYgbm90IHVybC5lbmRzd2l0aCgnLmFwaycpOiBjb250aW51ZQogICAgICAgICAgICBpZiBub3QgdXJsLmZpbmQoJ18nKSA9PSAtMTogY29udGludWUKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgdGVtcG5hbWUgPSBuYW1lLnNwbGl0KCctJykKICAgICAgICAgICAgICAgIHRpdGxlID0gIltDT0xPUiAlc10lcyB2JXMgJXNbL0NPTE9SXSBbQ09MT1IgJXNdJXNbL0NPTE9SXSBbQ09MT1IgJXNdJXNbL0NPTE9SXSIgJSAoQ09MT1IxLCB0ZW1wbmFtZVswXS50aXRsZSgpLCB0ZW1wbmFtZVsxXSwgdGVtcG5hbWVbMl0sIENPTE9SMiwgc2l6ZS5yZXBsYWNlKCcgJywgJycpLCBDT0xPUjEsIGRhdGUpCiAgICAgICAgICAgICAgICBkb3dubG9hZCA9IHVybGpvaW4oa29kaXVybDIsIHVybCkKICAgICAgICAgICAgICAgIGFkZEZpbGUodGl0bGUsICdhcGtpbnN0YWxsJywgIiVzIHYlcyAlcyIgJSAodGVtcG5hbWVbMF0udGl0bGUoKSwgdGVtcG5hbWVbMV0sIHRlbXBuYW1lWzJdKSwgZG93bmxvYWQpCiAgICAgICAgICAgICAgICB4ICs9IDEKICAgICAgICAgICAgZXhjZXB0OgogICAgICAgICAgICAgICAgd2l6LmxvZygiRXJyb3Igb246ICVzIiAlIG5hbWUpCiAgICAgICAgaWYgeCA9PSAwOiBhZGRGaWxlKCJFcnJvciBLb2RpIFNjcmFwZXIgSXMgQ3VycmVudGx5IERvd24uIikKICAgIGVsaWYgbmFtZSA9PSAnc3BtYyc6CiAgICAgICAgc3BtY3VybDEgPSAnaHR0cHM6Ly9naXRodWIuY29tL2tveWluZy9TUE1DL3JlbGVhc2VzJwogICAgICAgIHVybDEgPSB3aXoub3BlblVSTChzcG1jdXJsMSkucmVwbGFjZSgnXG4nLCAnJykucmVwbGFjZSgnXHInLCAnJykucmVwbGFjZSgnXHQnLCAnJykKICAgICAgICB4ID0gMAogICAgICAgIG1hdGNoMSA9IHJlLmNvbXBpbGUoJzxkaXYuKz9sYXNzPSJyZWxlYXNlLWJvZHkuKz9kaXYgY2xhc3M9InJlbGVhc2UtaGVhZGVyIi4rP2EgaHJlZj0uKz8+KC4rPyk8L2E+Lis/dWwgY2xhc3M9InJlbGVhc2UtZG93bmxvYWRzIj4oLis/KTwvdWw+Lis/L2Rpdj4nKS5maW5kYWxsKHVybDEpCgogICAgICAgIGFkZEZpbGUoIlZlcnNpb25lcyBPZmljaWFsZXMgU1BNQyIsIHRoZW1laXQ9VEhFTUUxKQoKICAgICAgICBmb3IgbmFtZSwgdXJscyBpbiBtYXRjaDE6CiAgICAgICAgICAgIHRlbXB1cmwgPSAnJwogICAgICAgICAgICBtYXRjaDIgPSByZS5jb21waWxlKCc8bGk+Lis/PGEgaHJlZj0iKC4rPykiIHJlbD0ibm9mb2xsb3ciPi4rPzxzbWFsbCBjbGFzcz0idGV4dC1ncmF5IGZsb2F0LXJpZ2h0Ij4oLis/KTwvc21hbGw+Lis/c3Ryb25nPiguKz8pPC9zdHJvbmc+Lis/PC9hPi4rPzwvbGk+JykuZmluZGFsbCh1cmxzKQogICAgICAgICAgICBmb3IgYXBrdXJsLCBhcGtzaXplLCBhcGtuYW1lIGluIG1hdGNoMjoKICAgICAgICAgICAgICAgIGlmIGFwa25hbWUuZmluZCgnYXJtZWFiaScpID09IC0xOiBjb250aW51ZQogICAgICAgICAgICAgICAgaWYgYXBrbmFtZS5maW5kKCdsYXVuY2hlcicpID4gLTE6IGNvbnRpbnVlCiAgICAgICAgICAgICAgICB0ZW1wdXJsID0gdXJsam9pbignaHR0cHM6Ly9naXRodWIuY29tJywgYXBrdXJsKQogICAgICAgICAgICAgICAgYnJlYWsKICAgICAgICAgICAgaWYgdGVtcHVybCA9PSAnJzogY29udGludWUKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgbmFtZSA9ICJTUE1DICVzIiAlIG5hbWUKICAgICAgICAgICAgICAgIHRpdGxlID0gIltDT0xPUiAlc10lc1svQ09MT1JdIFtDT0xPUiAlc10lc1svQ09MT1JdIiAlIChDT0xPUjEsIG5hbWUsIENPTE9SMiwgYXBrc2l6ZS5yZXBsYWNlKCcgJywgJycpKQogICAgICAgICAgICAgICAgZG93bmxvYWQgPSB0ZW1wdXJsCiAgICAgICAgICAgICAgICBhZGRGaWxlKHRpdGxlLCAnYXBraW5zdGFsbCcsIG5hbWUsIGRvd25sb2FkKQogICAgICAgICAgICAgICAgeCArPSAxCiAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb24sIGU6CiAgICAgICAgICAgICAgICB3aXoubG9nKCJFcnJvciBvbjogJXMgLyAlcyIgJSAobmFtZSwgc3RyKGUpKSkKICAgICAgICBpZiB4ID09IDA6IGFkZEZpbGUoIkVycm9yIFNQTUMgU2NyYXBlciBJcyBDdXJyZW50bHkgRG93bi4iKQoKZGVmIGFwa01lbnUobmFtZT1Ob25lLCB1cmw9Tm9uZSk6CiAgICBpZiB1cmwgPT0gTm9uZToKICAgICAgICBhZGREaXIgKCdLb2RpIG9maWNpYWwgQXBrXCdzJywgJ2Fwa3NjcmFwZScsICdrb2RpJywgaWNvbj1JQ09OQVBLLCB0aGVtZWl0PVRIRU1FMSkKICAgICAgICBhZGREaXIgKCdTUE1DIG9maWNpYWwgQXBrXCdzJywgJ2Fwa3NjcmFwZScsICdzcG1jJywgaWNvbj1JQ09OQVBLLCB0aGVtZWl0PVRIRU1FMSkKICAgICAgICBpZiBISURFU1BBQ0VSUyA9PSAnTm8nOiBhZGRGaWxlKHdpei5zZXAoKSwgJycsIHRoZW1laXQ9VEhFTUUzKQogICAgaWYgbm90IEFQS0ZJTEUgPT0gJ2h0dHA6Ly8nOgogICAgICAgIGlmIHVybCA9PSBOb25lOgogICAgICAgICAgICBURU1QQVBLRklMRSA9IHdpei50ZXh0Q2FjaGUodXNlcnZhci5BUEtGSUxFKQogICAgICAgICAgICBpZiBURU1QQVBLRklMRSA9PSBGYWxzZTogQVBLV09SS0lORyAgPSB3aXoud29ya2luZ1VSTCh1c2VydmFyLkFQS0ZJTEUpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgVEVNUEFQS0ZJTEUgPSB3aXoudGV4dENhY2hlKHVybCkKICAgICAgICAgICAgaWYgVEVNUEFQS0ZJTEUgPT0gRmFsc2U6IEFQS1dPUktJTkcgID0gd2l6LndvcmtpbmdVUkwodXJsKQogICAgICAgIGlmIG5vdCBURU1QQVBLRklMRSA9PSBGYWxzZToKICAgICAgICAgICAgbGluayA9IFRFTVBBUEtGSUxFLnJlcGxhY2UoJ1xuJywnJykucmVwbGFjZSgnXHInLCcnKS5yZXBsYWNlKCdcdCcsJycpCiAgICAgICAgICAgIG1hdGNoID0gcmUuY29tcGlsZSgnbmFtZT0iKC4rPykiLis/ZWN0aW9uPSIoLis/KSIuKz9ybD0iKC4rPykiLis/Y29uPSIoLis/KSIuKz9hbmFydD0iKC4rPykiLis/ZHVsdD0iKC4rPykiLis/ZXNjcmlwdGlvbj0iKC4rPykiJykuZmluZGFsbChsaW5rKQogICAgICAgICAgICBpZiBsZW4obWF0Y2gpID4gMDoKICAgICAgICAgICAgICAgIHggPSAwCiAgICAgICAgICAgICAgICBmb3IgYW5hbWUsIHNlY3Rpb24sIHVybCwgaWNvbiwgZmFuYXJ0LCBhZHVsdCwgZGVzY3JpcHRpb24gaW4gbWF0Y2g6CiAgICAgICAgICAgICAgICAgICAgaWYgbm90IFNIT1dBRFVMVCA9PSAndHJ1ZScgYW5kIGFkdWx0Lmxvd2VyKCkgPT0gJ3llcyc6IGNvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgaWYgc2VjdGlvbi5sb3dlcigpID09ICd5ZXMnOgogICAgICAgICAgICAgICAgICAgICAgICB4ICs9IDEKICAgICAgICAgICAgICAgICAgICAgICAgYWRkRGlyICgiW0JdJXNbL0JdIiAlIGFuYW1lLCAnYXBrJywgYW5hbWUsIHVybCwgZGVzY3JpcHRpb249ZGVzY3JpcHRpb24sIGljb249aWNvbiwgZmFuYXJ0PWZhbmFydCwgdGhlbWVpdD1USEVNRTMpCiAgICAgICAgICAgICAgICAgICAgZWxpZiBzZWN0aW9uLmxvd2VyKCkgPT0gJ3llcyc6CiAgICAgICAgICAgICAgICAgICAgICAgIHggKz0gMQogICAgICAgICAgICAgICAgICAgICAgICBhZGRGaWxlKGFuYW1lLCAncm9taW5zdGFsbCcsIGFuYW1lLCB1cmwsIGRlc2NyaXB0aW9uPWRlc2NyaXB0aW9uLCBpY29uPWljb24sIGZhbmFydD1mYW5hcnQsIHRoZW1laXQ9VEhFTUUyKQogICAgICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgICAgIHggKz0gMQogICAgICAgICAgICAgICAgICAgICAgICBhZGRGaWxlKGFuYW1lLCAnYXBraW5zdGFsbCcsIGFuYW1lLCB1cmwsIGRlc2NyaXB0aW9uPWRlc2NyaXB0aW9uLCBpY29uPWljb24sIGZhbmFydD1mYW5hcnQsIHRoZW1laXQ9VEhFTUUyKQogICAgICAgICAgICAgICAgICAgIGlmIHggPT0gMDoKICAgICAgICAgICAgICAgICAgICAgICAgYWRkRmlsZSgiTm8gYWRkb25zIGFkZGUwZCB0byB0aGlzIG1lbnUgeWV0ISIsICcnLCB0aGVtZWl0PVRIRU1FMikKICAgICAgICAgICAgZWxzZTogd2l6LmxvZygiW0FQSyBNZW51XSBFUlJPUjogSW52YWxpZCBGb3JtYXQuIiwgeGJtYy5MT0dFUlJPUikKICAgICAgICBlbHNlOgogICAgICAgICAgICB3aXoubG9nKCJbQVBLIE1lbnVdIEVSUk9SOiBVUkwgZm9yIGFwayBsaXN0IG5vdCB3b3JraW5nLiIsIHhibWMuTE9HRVJST1IpCiAgICAgICAgICAgIGFkZEZpbGUoJ1VybCBmb3IgdHh0IGZpbGUgbm90IHZhbGlkJywgJycsIHRoZW1laXQ9VEhFTUUzKQogICAgICAgICAgICBhZGRGaWxlKCclcycgJSBBUEtXT1JLSU5HLCAnJywgdGhlbWVpdD1USEVNRTMpCiAgICAgICAgcmV0dXJuCiAgICBlbHNlOiB3aXoubG9nKCJbQVBLIE1lbnVdIE5vIEFQSyBsaXN0IGFkZGVkLiIpCiAgICBzZXRWaWV3KCdmaWxlcycsICd2aWV3VHlwZScpCgpkZWYgYWRkb25NZW51KG5hbWU9Tm9uZSwgdXJsPU5vbmUpOgogICAgaWYgbm90IEFERE9ORklMRSA9PSAnaHR0cDovLyc6CiAgICAgICAgaWYgdXJsID09IE5vbmU6CiAgICAgICAgICAgIFRFTVBBRERPTkZJTEUgPSB3aXoudGV4dENhY2hlKHVzZXJ2YXIuQURET05GSUxFKQogICAgICAgICAgICBpZiBURU1QQURET05GSUxFID09IEZhbHNlOiBBRERPTldPUktJTkcgID0gd2l6LndvcmtpbmdVUkwodXNlcnZhci5BRERPTkZJTEUpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgVEVNUEFERE9ORklMRSA9IHdpei50ZXh0Q2FjaGUodXJsKQogICAgICAgICAgICBpZiBURU1QQURET05GSUxFID09IEZhbHNlOiBBRERPTldPUktJTkcgID0gd2l6LndvcmtpbmdVUkwodXJsKQogICAgICAgIGlmIG5vdCBURU1QQURET05GSUxFID09IEZhbHNlOgogICAgICAgICAgICBsaW5rID0gVEVNUEFERE9ORklMRS5yZXBsYWNlKCdcbicsJycpLnJlcGxhY2UoJ1xyJywnJykucmVwbGFjZSgnXHQnLCcnKS5yZXBsYWNlKCdyZXBvc2l0b3J5PSIiJywgJ3JlcG9zaXRvcnk9Im5vbmUiJykucmVwbGFjZSgncmVwb3NpdG9yeXVybD0iIicsICdyZXBvc2l0b3J5dXJsPSJodHRwOi8vIicpLnJlcGxhY2UoJ3JlcG9zaXRvcnl4bWw9IiInLCAncmVwb3NpdG9yeXhtbD0iaHR0cDovLyInKQogICAgICAgICAgICBtYXRjaCA9IHJlLmNvbXBpbGUoJ25hbWU9IiguKz8pIi4rP2x1Z2luPSIoLis/KSIuKz9ybD0iKC4rPykiLis/ZXBvc2l0b3J5PSIoLis/KSIuKz9lcG9zaXRvcnl4bWw9IiguKz8pIi4rP2Vwb3NpdG9yeXVybD0iKC4rPykiLis/Y29uPSIoLis/KSIuKz9hbmFydD0iKC4rPykiLis/ZHVsdD0iKC4rPykiLis/ZXNjcmlwdGlvbj0iKC4rPykiJykuZmluZGFsbChsaW5rKQogICAgICAgICAgICBpZiBsZW4obWF0Y2gpID4gMDoKICAgICAgICAgICAgICAgIHggPSAwCiAgICAgICAgICAgICAgICBmb3IgYW5hbWUsIHBsdWdpbiwgYXVybCwgcmVwb3NpdG9yeSwgcmVwb3NpdG9yeXhtbCwgcmVwb3NpdG9yeXVybCwgaWNvbiwgZmFuYXJ0LCBhZHVsdCwgZGVzY3JpcHRpb24gaW4gbWF0Y2g6CiAgICAgICAgICAgICAgICAgICAgaWYgcGx1Z2luLmxvd2VyKCkgPT0gJ3NlY3Rpb24nOgogICAgICAgICAgICAgICAgICAgICAgICB4ICs9IDEKICAgICAgICAgICAgICAgICAgICAgICAgYWRkRGlyICgiW0JdJXNbL0JdIiAlIGFuYW1lLCAnYWRkb25zJywgYW5hbWUsIGF1cmwsIGRlc2NyaXB0aW9uPWRlc2NyaXB0aW9uLCBpY29uPWljb24sIGZhbmFydD1mYW5hcnQsIHRoZW1laXQ9VEhFTUUzKQogICAgICAgICAgICAgICAgICAgIGVsaWYgcGx1Z2luLmxvd2VyKCkgPT0gJ3NraW4nOgogICAgICAgICAgICAgICAgICAgICAgICBpZiBub3QgU0hPV0FEVUxUID09ICd0cnVlJyBhbmQgYWR1bHQubG93ZXIoKSA9PSAneWVzJzogY29udGludWUKICAgICAgICAgICAgICAgICAgICAgICAgeCArPSAxCiAgICAgICAgICAgICAgICAgICAgICAgIGFkZEZpbGUoIltCXSVzWy9CXSIgJSBhbmFtZSwgJ3NraW5wYWNrJywgYW5hbWUsIGF1cmwsIGRlc2NyaXB0aW9uPWRlc2NyaXB0aW9uLCBpY29uPWljb24sIGZhbmFydD1mYW5hcnQsIHRoZW1laXQ9VEhFTUUyKQogICAgICAgICAgICAgICAgICAgIGVsaWYgcGx1Z2luLmxvd2VyKCkgPT0gJ3BhY2snOgogICAgICAgICAgICAgICAgICAgICAgICBpZiBub3QgU0hPV0FEVUxUID09ICd0cnVlJyBhbmQgYWR1bHQubG93ZXIoKSA9PSAneWVzJzogY29udGludWUKICAgICAgICAgICAgICAgICAgICAgICAgeCArPSAxCiAgICAgICAgICAgICAgICAgICAgICAgIGFkZEZpbGUoIltCXSVzWy9CXSIgJSBhbmFtZSwgJ2FkZG9ucGFjaycsIGFuYW1lLCBhdXJsLCBkZXNjcmlwdGlvbj1kZXNjcmlwdGlvbiwgaWNvbj1pY29uLCBmYW5hcnQ9ZmFuYXJ0LCB0aGVtZWl0PVRIRU1FMikKICAgICAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgICAgICBpZiBub3QgU0hPV0FEVUxUID09ICd0cnVlJyBhbmQgYWR1bHQubG93ZXIoKSA9PSAneWVzJzogY29udGludWUKICAgICAgICAgICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkICAgID0geGJtY2FkZG9uLkFkZG9uKGlkPXBsdWdpbikuZ2V0QWRkb25JbmZvKCdwYXRoJykKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIG9zLnBhdGguZXhpc3RzKGFkZCk6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYW5hbWUgICA9ICJbQ09MT1Igc3ByaW5nZ3JlZW5dW0luc3RhbGFkb11bL0NPTE9SXSAlcyIgJSBhbmFtZQogICAgICAgICAgICAgICAgICAgICAgICBleGNlcHQ6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzCiAgICAgICAgICAgICAgICAgICAgICAgIHggKz0gMQogICAgICAgICAgICAgICAgICAgICAgICBhZGRGaWxlKGFuYW1lLCAnYWRkb25pbnN0YWxsJywgcGx1Z2luLCB1cmwsIGRlc2NyaXB0aW9uPWRlc2NyaXB0aW9uLCBpY29uPWljb24sIGZhbmFydD1mYW5hcnQsIHRoZW1laXQ9VEhFTUUyKQogICAgICAgICAgICAgICAgICAgIGlmIHggPCAxOgogICAgICAgICAgICAgICAgICAgICAgICBhZGRGaWxlKCJObyBhZGRvbnMgYWRkZWQgdG8gdGhpcyBtZW51IHlldCEiLCAnJywgdGhlbWVpdD1USEVNRTIpCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBhZGRGaWxlKCdUZXh0IEZpbGUgbm90IGZvcm1hdGVkIGNvcnJlY3RseSEnLCAnJywgdGhlbWVpdD1USEVNRTMpCiAgICAgICAgICAgICAgICB3aXoubG9nKCJbQWRkb24gTWVudV0gRVJST1I6IEludmFsaWQgRm9ybWF0LiIpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgd2l6LmxvZygiW0FkZG9uIE1lbnVdIEVSUk9SOiBVUkwgZm9yIEFkZG9uIGxpc3Qgbm90IHdvcmtpbmcuIikKICAgICAgICAgICAgYWRkRmlsZSgnVXJsIGZvciB0eHQgZmlsZSBub3QgdmFsaWQnLCAnJywgdGhlbWVpdD1USEVNRTMpCiAgICAgICAgICAgIGFkZEZpbGUoJyVzJyAlIEFERE9OV09SS0lORywgJycsIHRoZW1laXQ9VEhFTUUzKQogICAgZWxzZTogd2l6LmxvZygiW0FkZG9uIE1lbnVdIE5vIEFkZG9uIGxpc3QgYWRkZWQuIikKICAgIHNldFZpZXcoJ2ZpbGVzJywgJ3ZpZXdUeXBlJykKCmRlZiBwYWNrSW5zdGFsbGVyKG5hbWUsIHVybCk6CiAgICBpZiBub3Qgd2l6LndvcmtpbmdVUkwodXJsKSA9PSBUcnVlOiB3aXouTG9nTm90aWZ5KCJbQ09MT1IgJXNdSW5zdGFsYWRvciBkZSBBZGRvbnNbL0NPTE9SXSIgJSBDT0xPUjEsICdbQ09MT1IgJXNdJXM6Wy9DT0xPUl0gW0NPTE9SICVzXVppcCBVcmwgSW52YWxpZGFbL0NPTE9SXScgJSAoQ09MT1IxLCBuYW1lLCBDT0xPUjIpKTsgcmV0dXJuCiAgICBpZiBub3Qgb3MucGF0aC5leGlzdHMoUEFDS0FHRVMpOiBvcy5tYWtlZGlycyhQQUNLQUdFUykKICAgIERQLmNyZWF0ZShBRERPTlRJVExFLCdbQ09MT1IgJXNdW0JdRGVzY2FyZ2FuZG86Wy9CXVsvQ09MT1JdIFtDT0xPUiAlc10lc1svQ09MT1JdJyAlIChDT0xPUjIsIENPTE9SMSwgbmFtZSksICcnLCAnW0NPTE9SICVzXUVzcGVyYVsvQ09MT1JdJyAlIENPTE9SMikKICAgIHVybHNwbGl0cyA9IHVybC5zcGxpdCgnLycpCiAgICBsaWIgPSB4Ym1jLm1ha2VMZWdhbEZpbGVuYW1lKG9zLnBhdGguam9pbihQQUNLQUdFUywgdXJsc3BsaXRzWy0xXSkpCiAgICB0cnk6IG9zLnJlbW92ZShsaWIpCiAgICBleGNlcHQ6IHBhc3MKICAgIGRvd25sb2FkZXIuZG93bmxvYWQodXJsLCBsaWIsIERQKQogICAgdGl0bGUgPSAnW0NPTE9SICVzXVtCXUluc3RhbGFuZG86Wy9CXVsvQ09MT1JdIFtDT0xPUiAlc10lc1svQ09MT1JdJyAlIChDT0xPUjIsIENPTE9SMSwgbmFtZSkKICAgIERQLnVwZGF0ZSgwLCB0aXRsZSwnJywgJ1tDT0xPUiAlc11Fc3BlcmFbL0NPTE9SXScgJSBDT0xPUjIpCiAgICBwZXJjZW50LCBlcnJvcnMsIGVycm9yID0gZXh0cmFjdC5hbGwobGliLEFERE9OUyxEUCwgdGl0bGU9dGl0bGUpCiAgICBpbnN0YWxsZWQgPSBncmFiQWRkb25zKGxpYikKICAgIGlmIEtPRElWID49IDE3OiB3aXouYWRkb25EYXRhYmFzZShpbnN0YWxsZWQsIDEsIFRydWUpCiAgICBEUC5jbG9zZSgpCiAgICB3aXouTG9nTm90aWZ5KCJbQ09MT1IgJXNdSW5zdGFsYWRvciBkZSBBZGRvbnNbL0NPTE9SXSIgJSBDT0xPUjEsICdbQ09MT1IgJXNdJXM6IEluc3RhbGFkbyFbL0NPTE9SXScgJSAoQ09MT1IyLCBuYW1lKSkKICAgIHdpei5lYmkoJ1VwZGF0ZUFkZG9uUmVwb3MoKScpCiAgICB3aXouZWJpKCdVcGRhdGVMb2NhbEFkZG9ucygpJykKICAgIHdpei5yZWZyZXNoKCkKCmRlZiBza2luSW5zdGFsbGVyKG5hbWUsIHVybCk6CiAgICBpZiBub3Qgd2l6LndvcmtpbmdVUkwodXJsKSA9PSBUcnVlOiB3aXouTG9nTm90aWZ5KCJbQ09MT1IgJXNdQWRkb24gSW5zdGFsbGVyWy9DT0xPUl0iICUgQ09MT1IxLCAnW0NPTE9SICVzXSVzOlsvQ09MT1JdIFtDT0xPUiAlc11JbnZhbGlkIFppcCBVcmwhWy9DT0xPUl0nICUgKENPTE9SMSwgbmFtZSwgQ09MT1IyKSk7IHJldHVybgogICAgaWYgbm90IG9zLnBhdGguZXhpc3RzKFBBQ0tBR0VTKTogb3MubWFrZWRpcnMoUEFDS0FHRVMpCiAgICBEUC5jcmVhdGUoQURET05USVRMRSwnW0NPTE9SICVzXVtCXURlc2NhcmdhbmRvOlsvQl1bL0NPTE9SXSBbQ09MT1IgJXNdJXNbL0NPTE9SXScgJSAoQ09MT1IyLCBDT0xPUjEsIG5hbWUpLCAnJywgJ1tDT0xPUiAlc11Fc3BlcmFbL0NPTE9SXScgJSBDT0xPUjIpCiAgICB1cmxzcGxpdHMgPSB1cmwuc3BsaXQoJy8nKQogICAgbGliID0geGJtYy5tYWtlTGVnYWxGaWxlbmFtZShvcy5wYXRoLmpvaW4oUEFDS0FHRVMsIHVybHNwbGl0c1stMV0pKQogICAgdHJ5OiBvcy5yZW1vdmUobGliKQogICAgZXhjZXB0OiBwYXNzCiAgICBkb3dubG9hZGVyLmRvd25sb2FkKHVybCwgbGliLCBEUCkKICAgIHRpdGxlID0gJ1tDT0xPUiAlc11bQl1JbnN0YWxsaW5nOlsvQl1bL0NPTE9SXSBbQ09MT1IgJXNdJXNbL0NPTE9SXScgJSAoQ09MT1IyLCBDT0xPUjEsIG5hbWUpCiAgICBEUC51cGRhdGUoMCwgdGl0bGUsJycsICdbQ09MT1IgJXNdUGxlYXNlIFdhaXRbL0NPTE9SXScgJSBDT0xPUjIpCiAgICBwZXJjZW50LCBlcnJvcnMsIGVycm9yID0gZXh0cmFjdC5hbGwobGliLEhPTUUsRFAsIHRpdGxlPXRpdGxlKQogICAgaW5zdGFsbGVkID0gZ3JhYkFkZG9ucyhsaWIpCiAgICBpZiBLT0RJViA+PSAxNzogd2l6LmFkZG9uRGF0YWJhc2UoaW5zdGFsbGVkLCAxLCBUcnVlKQogICAgRFAuY2xvc2UoKQogICAgd2l6LkxvZ05vdGlmeSgiW0NPTE9SICVzXUFkZG9uIEluc3RhbGxlclsvQ09MT1JdIiAlIENPTE9SMSwgJ1tDT0xPUiAlc10lczogSW5zdGFsbGVkIVsvQ09MT1JdJyAlIChDT0xPUjIsIG5hbWUpKQogICAgd2l6LmViaSgnVXBkYXRlQWRkb25SZXBvcygpJykKICAgIHdpei5lYmkoJ1VwZGF0ZUxvY2FsQWRkb25zKCknKQogICAgZm9yIGl0ZW0gaW4gaW5zdGFsbGVkOgogICAgICAgIGlmIGl0ZW0uc3RhcnRzd2l0aCgnc2tpbi4nKSA9PSBUcnVlIGFuZCBub3QgaXRlbSA9PSAnc2tpbi5zaG9ydGN1dHMnOgogICAgICAgICAgICBpZiBub3QgQlVJTEROQU1FID09ICcnIGFuZCBERUZBVUxUSUdOT1JFID09ICd0cnVlJzogd2l6LnNldFMoJ2RlZmF1bHRza2luaWdub3JlJywgJ3RydWUnKQogICAgICAgICAgICB3aXouc3dhcFNraW5zKGl0ZW0sICdTa2luIEluc3RhbGxlcicpCiAgICB3aXoucmVmcmVzaCgpCgpkZWYgYWRkb25JbnN0YWxsZXIocGx1Z2luLCB1cmwpOgogICAgaWYgbm90IEFERE9ORklMRSA9PSAnaHR0cDovLyc6CiAgICAgICAgaWYgdXJsID09IE5vbmU6IHVybCA9IEFERE9ORklMRQogICAgICAgIEFERE9OV09SS0lORyA9IHdpei53b3JraW5nVVJMKHVybCkKICAgICAgICBpZiBBRERPTldPUktJTkcgPT0gVHJ1ZToKICAgICAgICAgICAgbGluayA9IHdpei50ZXh0Q2FjaGUodXJsKS5yZXBsYWNlKCdcbicsJycpLnJlcGxhY2UoJ1xyJywnJykucmVwbGFjZSgnXHQnLCcnKS5yZXBsYWNlKCdyZXBvc2l0b3J5PSIiJywgJ3JlcG9zaXRvcnk9Im5vbmUiJykucmVwbGFjZSgncmVwb3NpdG9yeXVybD0iIicsICdyZXBvc2l0b3J5dXJsPSJodHRwOi8vIicpLnJlcGxhY2UoJ3JlcG9zaXRvcnl4bWw9IiInLCAncmVwb3NpdG9yeXhtbD0iaHR0cDovLyInKQogICAgICAgICAgICBtYXRjaCA9IHJlLmNvbXBpbGUoJ25hbWU9IiguKz8pIi4rP2x1Z2luPSIlcyIuKz9ybD0iKC4rPykiLis/ZXBvc2l0b3J5PSIoLis/KSIuKz9lcG9zaXRvcnl4bWw9IiguKz8pIi4rP2Vwb3NpdG9yeXVybD0iKC4rPykiLis/Y29uPSIoLis/KSIuKz9hbmFydD0iKC4rPykiLis/ZHVsdD0iKC4rPykiLis/ZXNjcmlwdGlvbj0iKC4rPykiJyAlIHBsdWdpbikuZmluZGFsbChsaW5rKQogICAgICAgICAgICBpZiBsZW4obWF0Y2gpID4gMDoKICAgICAgICAgICAgICAgIGZvciBuYW1lLCB1cmwsIHJlcG9zaXRvcnksIHJlcG9zaXRvcnl4bWwsIHJlcG9zaXRvcnl1cmwsIGljb24sIGZhbmFydCwgYWR1bHQsIGRlc2NyaXB0aW9uIGluIG1hdGNoOgogICAgICAgICAgICAgICAgICAgIGlmIG9zLnBhdGguZXhpc3RzKG9zLnBhdGguam9pbihBRERPTlMsIHBsdWdpbikpOgogICAgICAgICAgICAgICAgICAgICAgICBkbyAgICAgICAgPSBbJ0xhbnphciBBZGRvbicsICdCb3JyYXIgQWRkb24nXQogICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZCA9IERJQUxPRy5zZWxlY3QoIltDT0xPUiAlc11BZGRvbiB5YSBpbnN0YWxhZG8sIHF1ZSBxdWllcmVzIGhhY2VyP1svQ09MT1JdIiAlIENPTE9SMiwgZG8pCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIHNlbGVjdGVkID09IDA6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aXouZWJpKCdSdW5BZGRvbiglcyknICUgcGx1Z2luKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgeGJtYy5zbGVlcCg1MDApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQogICAgICAgICAgICAgICAgICAgICAgICBlbGlmIHNlbGVjdGVkID09IDE6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aXouY2xlYW5Ib3VzZShvcy5wYXRoLmpvaW4oQURET05TLCBwbHVnaW4pKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ5OiB3aXoucmVtb3ZlRm9sZGVyKG9zLnBhdGguam9pbihBRERPTlMsIHBsdWdpbikpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBleGNlcHQ6IHBhc3MKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIERJQUxPRy55ZXNubyhBRERPTlRJVExFLCAiW0NPTE9SICVzXVF1aWVyZXMgYm9ycmFyIGxhIGNhcnBldGEgYWRkb25fZGF0YSBkZToiICUgQ09MT1IyLCAiW0NPTE9SICVzXSVzWy9DT0xPUl0/Wy9DT0xPUl0iICUgKENPTE9SMSwgcGx1Z2luKSwgeWVzbGFiZWw9IltCXVtDT0xPUiBzcHJpbmdncmVlbl1Cb3JyYXJbL0NPTE9SXVsvQl0iLCBub2xhYmVsPSJbQl1bQ09MT1IgcmVkXVNhbHRhclsvQ09MT1JdWy9CXSIpOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbW92ZUFkZG9uRGF0YShwbHVnaW4pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aXoucmVmcmVzaCgpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQogICAgICAgICAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAgICAgICAgICAgICAgICAgcmVwbyA9IG9zLnBhdGguam9pbihBRERPTlMsIHJlcG9zaXRvcnkpCiAgICAgICAgICAgICAgICAgICAgaWYgbm90IHJlcG9zaXRvcnkubG93ZXIoKSA9PSAnbm9uZScgYW5kIG5vdCBvcy5wYXRoLmV4aXN0cyhyZXBvKToKICAgICAgICAgICAgICAgICAgICAgICAgd2l6LmxvZygiUmVwb3NpdG9yeSBub3QgaW5zdGFsbGVkLCBpbnN0YWxsaW5nIGl0IikKICAgICAgICAgICAgICAgICAgICAgICAgaWYgRElBTE9HLnllc25vKEFERE9OVElUTEUsICJbQ09MT1IgJXNdV291bGQgeW91IGxpa2UgdG8gaW5zdGFsbCB0aGUgcmVwb3NpdG9yeSBmb3IgW0NPTE9SICVzXSVzWy9DT0xPUl06IiAlIChDT0xPUjIsIENPTE9SMSwgcGx1Z2luKSwgIltDT0xPUiAlc10lc1svQ09MT1JdP1svQ09MT1JdIiAlIChDT0xPUjEsIHJlcG9zaXRvcnkpLCB5ZXNsYWJlbD0iW0JdW0NPTE9SIHNwcmluZ2dyZWVuXVllcyBJbnN0YWxsWy9DT0xPUl1bL0JdIiwgbm9sYWJlbD0iW0JdW0NPTE9SIHJlZF1ObyBTa2lwWy9DT0xPUl1bL0JdIik6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2ZXIgPSB3aXoucGFyc2VET00od2l6Lm9wZW5VUkwocmVwb3NpdG9yeXhtbCksICdhZGRvbicsIHJldD0ndmVyc2lvbicsIGF0dHJzID0geydpZCc6IHJlcG9zaXRvcnl9KQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgbGVuKHZlcikgPiAwOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcG96aXAgPSAnJXMlcy0lcy56aXAnICUgKHJlcG9zaXRvcnl1cmwsIHJlcG9zaXRvcnksIHZlclswXSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aXoubG9nKHJlcG96aXApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgS09ESVYgPj0gMTc6IHdpei5hZGRvbkRhdGFiYXNlKHJlcG9zaXRvcnksIDEpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5zdGFsbEFkZG9uKHJlcG9zaXRvcnksIHJlcG96aXApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2l6LmViaSgnVXBkYXRlQWRkb25SZXBvcygpJykKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAjd2l6LmViaSgnVXBkYXRlTG9jYWxBZGRvbnMoKScpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2l6LmxvZygiSW5zdGFsbGluZyBBZGRvbiBmcm9tIEtvZGkiKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluc3RhbGwgPSBpbnN0YWxsRnJvbUtvZGkocGx1Z2luKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpei5sb2coIkluc3RhbGwgZnJvbSBLb2RpOiAlcyIgJSBpbnN0YWxsKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIGluc3RhbGw6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpei5yZWZyZXNoKCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFRydWUKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2l6LmxvZygiW0FkZG9uIEluc3RhbGxlcl0gUmVwb3NpdG9yeSBub3QgaW5zdGFsbGVkOiBVbmFibGUgdG8gZ3JhYiB1cmwhICglcykiICUgcmVwb3NpdG9yeSkKICAgICAgICAgICAgICAgICAgICAgICAgZWxzZTogd2l6LmxvZygiW0FkZG9uIEluc3RhbGxlcl0gUmVwb3NpdG9yeSBmb3IgJXMgbm90IGluc3RhbGxlZDogJXMiICUgKHBsdWdpbiwgcmVwb3NpdG9yeSkpCiAgICAgICAgICAgICAgICAgICAgZWxpZiByZXBvc2l0b3J5Lmxvd2VyKCkgPT0gJ25vbmUnOgogICAgICAgICAgICAgICAgICAgICAgICB3aXoubG9nKCJObyByZXBvc2l0b3J5LCBpbnN0YWxsaW5nIGFkZG9uIikKICAgICAgICAgICAgICAgICAgICAgICAgcGx1Z2luaWQgPSBwbHVnaW4KICAgICAgICAgICAgICAgICAgICAgICAgemlwdXJsID0gdXJsCiAgICAgICAgICAgICAgICAgICAgICAgIGluc3RhbGxBZGRvbihwbHVnaW4sIHVybCkKICAgICAgICAgICAgICAgICAgICAgICAgd2l6LnJlZnJlc2goKQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQogICAgICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgICAgIHdpei5sb2coIlJlcG9zaXRvcnkgaW5zdGFsbGVkLCBpbnN0YWxsaW5nIGFkZG9uIikKICAgICAgICAgICAgICAgICAgICAgICAgaW5zdGFsbCA9IGluc3RhbGxGcm9tS29kaShwbHVnaW4sIEZhbHNlKQogICAgICAgICAgICAgICAgICAgICAgICBpZiBpbnN0YWxsOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgd2l6LnJlZnJlc2goKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFRydWUKICAgICAgICAgICAgICAgICAgICBpZiBvcy5wYXRoLmV4aXN0cyhvcy5wYXRoLmpvaW4oQURET05TLCBwbHVnaW4pKTogcmV0dXJuIFRydWUKICAgICAgICAgICAgICAgICAgICB2ZXIyID0gd2l6LnBhcnNlRE9NKHdpei5vcGVuVVJMKHJlcG9zaXRvcnl4bWwpLCAnYWRkb24nLCByZXQ9J3ZlcnNpb24nLCBhdHRycyA9IHsnaWQnOiBwbHVnaW59KQogICAgICAgICAgICAgICAgICAgIGlmIGxlbih2ZXIyKSA+IDA6CiAgICAgICAgICAgICAgICAgICAgICAgIHVybCA9ICIlcyVzLSVzLnppcCIgJSAodXJsLCBwbHVnaW4sIHZlcjJbMF0pCiAgICAgICAgICAgICAgICAgICAgICAgIHdpei5sb2coc3RyKHVybCkpCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIEtPRElWID49IDE3OiB3aXouYWRkb25EYXRhYmFzZShwbHVnaW4sIDEpCiAgICAgICAgICAgICAgICAgICAgICAgIGluc3RhbGxBZGRvbihwbHVnaW4sIHVybCkKICAgICAgICAgICAgICAgICAgICAgICAgd2l6LnJlZnJlc2goKQogICAgICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgICAgIHdpei5sb2coIm5vIG1hdGNoIik7IHJldHVybiBGYWxzZQogICAgICAgICAgICBlbHNlOiB3aXoubG9nKCJbQWRkb24gSW5zdGFsbGVyXSBJbnZhbGlkIEZvcm1hdCIpCiAgICAgICAgZWxzZTogd2l6LmxvZygiW0FkZG9uIEluc3RhbGxlcl0gVGV4dCBGaWxlOiAlcyIgJSBBRERPTldPUktJTkcpCiAgICBlbHNlOiB3aXoubG9nKCJbQWRkb24gSW5zdGFsbGVyXSBOb3QgRW5hYmxlZC4iKQoKZGVmIGluc3RhbGxGcm9tS29kaShwbHVnaW4sIG92ZXI9VHJ1ZSk6CiAgICBpZiBvdmVyID09IFRydWU6CiAgICAgICAgeGJtYy5zbGVlcCgyMDAwKQogICAgI3dpei5lYmkoJ0luc3RhbGxBZGRvbiglcyknICUgcGx1Z2luKQogICAgd2l6LmViaSgnUnVuUGx1Z2luKHBsdWdpbjovLyVzKScgJSBwbHVnaW4pCiAgICBpZiBub3Qgd2l6LndoaWxlV2luZG93KCd5ZXNub2RpYWxvZycpOgogICAgICAgIHJldHVybiBGYWxzZQogICAgeGJtYy5zbGVlcCg1MDApCiAgICBpZiB3aXoud2hpbGVXaW5kb3coJ29rZGlhbG9nJyk6CiAgICAgICAgcmV0dXJuIEZhbHNlCiAgICB3aXoud2hpbGVXaW5kb3coJ3Byb2dyZXNzZGlhbG9nJykKICAgIGlmIG9zLnBhdGguZXhpc3RzKG9zLnBhdGguam9pbihBRERPTl'
love = ''
god = 'ZSgnUmVjb3ZlciBBbGwgU2F2ZWQgTG9naW4gSW5mbycsICdyZXN0b3JlbG9naW4nLCAnYWxsJywgaWNvbj1JQ09OTE9HSU4sICB0aGVtZWl0PVRIRU1FMykKICAgIGFkZEZpbGUoJ0ltcG9ydCBMb2dpbiBJbmZvJywgICAgICAgICAgICAnaW1wb3J0bG9naW4nLCAgJ2FsbCcsIGljb249SUNPTkxPR0lOLCAgdGhlbWVpdD1USEVNRTMpCiAgICBhZGRGaWxlKCdDbGVhciBBbGwgQWRkb24gTG9naW4gSW5mbycsICAgICAgICAgJ2FkZG9ubG9naW4nLCAgICdhbGwnLCBpY29uPUlDT05MT0dJTiwgIHRoZW1laXQ9VEhFTUUzKQogICAgYWRkRmlsZSgnQ2xlYXIgQWxsIFNhdmVkIExvZ2luIEluZm8nLCAgICdjbGVhcmxvZ2luJywgICAnYWxsJywgaWNvbj1JQ09OTE9HSU4sICB0aGVtZWl0PVRIRU1FMykKICAgIHNldFZpZXcoJ2ZpbGVzJywgJ3ZpZXdUeXBlJykKCmRlZiBmaXhVcGRhdGUoKToKICAgIGlmIEtPRElWIDwgMTc6CiAgICAgICAgZGJmaWxlID0gb3MucGF0aC5qb2luKERBVEFCQVNFLCB3aXoubGF0ZXN0REIoJ0FkZG9ucycpKQogICAgICAgIHRyeToKICAgICAgICAgICAgb3MucmVtb3ZlKGRiZmlsZSkKICAgICAgICBleGNlcHQgRXhjZXB0aW9uLCBlOgogICAgICAgICAgICB3aXoubG9nKCJVbmFibGUgdG8gcmVtb3ZlICVzLCBQdXJnaW5nIERCIiAlIGRiZmlsZSkKICAgICAgICAgICAgd2l6LnB1cmdlRGIoZGJmaWxlKQogICAgZWxzZToKICAgICAgICBpZiBvcy5wYXRoLmV4aXN0cyhvcy5wYXRoLmpvaW4oVVNFUkRBVEEsICdhdXRvZXhlYy5weScpKToKICAgICAgICAgICAgdGVtcCA9IG9zLnBhdGguam9pbihVU0VSREFUQSwgJ2F1dG9leGVjX3RlbXAucHknKQogICAgICAgICAgICBpZiBvcy5wYXRoLmV4aXN0cyh0ZW1wKTogeGJtY3Zmcy5kZWxldGUodGVtcCkKICAgICAgICAgICAgeGJtY3Zmcy5yZW5hbWUob3MucGF0aC5qb2luKFVTRVJEQVRBLCAnYXV0b2V4ZWMucHknKSwgdGVtcCkKICAgICAgICB4Ym1jdmZzLmNvcHkob3MucGF0aC5qb2luKFBMVUdJTiwgJ3Jlc291cmNlcycsICdsaWJzJywgJ2F1dG9leGVjLnB5JyksIG9zLnBhdGguam9pbihVU0VSREFUQSwgJ2F1dG9leGVjLnB5JykpCiAgICAgICAgZGJmaWxlID0gb3MucGF0aC5qb2luKERBVEFCQVNFLCB3aXoubGF0ZXN0REIoJ0FkZG9ucycpKQogICAgICAgIHRyeToKICAgICAgICAgICAgb3MucmVtb3ZlKGRiZmlsZSkKICAgICAgICBleGNlcHQgRXhjZXB0aW9uLCBlOgogICAgICAgICAgICB3aXoubG9nKCJVbmFibGUgdG8gcmVtb3ZlICVzLCBQdXJnaW5nIERCIiAlIGRiZmlsZSkKICAgICAgICAgICAgd2l6LnB1cmdlRGIoZGJmaWxlKQogICAgICAgIHdpei5raWxseGJtYyhUcnVlKQoKZGVmIHJlbW92ZUFkZG9uTWVudSgpOgogICAgZm9sZCA9IGdsb2IuZ2xvYihvcy5wYXRoLmpvaW4oQURET05TLCAnKi8nKSkKICAgIGFkZG9ubmFtZXMgPSBbXTsgYWRkb25pZHMgPSBbXQogICAgZm9yIGZvbGRlciBpbiBzb3J0ZWQoZm9sZCwga2V5ID0gbGFtYmRhIHg6IHgpOgogICAgICAgIGZvbGRlcm5hbWUgPSBvcy5wYXRoLnNwbGl0KGZvbGRlcls6LTFdKVsxXQogICAgICAgIGlmIGZvbGRlcm5hbWUgaW4gRVhDTFVERVM6IGNvbnRpbnVlCiAgICAgICAgZWxpZiBmb2xkZXJuYW1lIGluIERFRkFVTFRQTFVHSU5TOiBjb250aW51ZQogICAgICAgIGVsaWYgZm9sZGVybmFtZSA9PSAncGFja2FnZXMnOiBjb250aW51ZQogICAgICAgIHhtbCA9IG9zLnBhdGguam9pbihmb2xkZXIsICdhZGRvbi54bWwnKQogICAgICAgIGlmIG9zLnBhdGguZXhpc3RzKHhtbCk6CiAgICAgICAgICAgIGYgICAgICA9IG9wZW4oeG1sKQogICAgICAgICAgICBhICAgICAgPSBmLnJlYWQoKQogICAgICAgICAgICBtYXRjaCAgPSB3aXoucGFyc2VET00oYSwgJ2FkZG9uJywgcmV0PSdpZCcpCgogICAgICAgICAgICBhZGRpZCAgPSBmb2xkZXJuYW1lIGlmIGxlbihtYXRjaCkgPT0gMCBlbHNlIG1hdGNoWzBdCiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIGFkZCA9IHhibWNhZGRvbi5BZGRvbihpZD1hZGRpZCkKICAgICAgICAgICAgICAgIGFkZG9ubmFtZXMuYXBwZW5kKGFkZC5nZXRBZGRvbkluZm8oJ25hbWUnKSkKICAgICAgICAgICAgICAgIGFkZG9uaWRzLmFwcGVuZChhZGRpZCkKICAgICAgICAgICAgZXhjZXB0OgogICAgICAgICAgICAgICAgcGFzcwogICAgaWYgbGVuKGFkZG9ubmFtZXMpID09IDA6CiAgICAgICAgd2l6LkxvZ05vdGlmeSgiW0NPTE9SICVzXSVzWy9DT0xPUl0iICUgKENPTE9SMSwgQURET05USVRMRSksICJbQ09MT1IgJXNdTm8gQWRkb25zIFRvIFJlbW92ZVsvQ09MT1JdIiAlIENPTE9SMikKICAgICAgICByZXR1cm4KICAgIGlmIEtPRElWID4gMTY6CiAgICAgICAgc2VsZWN0ZWQgPSBESUFMT0cubXVsdGlzZWxlY3QoIiVzOiBFbGlnZSBsb3MgYWRkb25zIHF1ZSBxdWllcmVzIGJvcnJhci4iICUgQURET05USVRMRSwgYWRkb25uYW1lcykKICAgIGVsc2U6CiAgICAgICAgc2VsZWN0ZWQgPSBbXTsgY2hvaWNlID0gMAogICAgICAgIHRlbXBhZGRvbm5hbWVzID0gWyItLSBDbGljayBoZXJlIHRvIENvbnRpbnVlIC0tIl0gKyBhZGRvbm5hbWVzCiAgICAgICAgd2hpbGUgbm90IGNob2ljZSA9PSAtMToKICAgICAgICAgICAgY2hvaWNlID0gRElBTE9HLnNlbGVjdCgiJXM6IEVsaWdlIGxvcyBhZGRvbnMgcXVlIHF1aWVyZXMgYm9ycmFyLiIgJSBBRERPTlRJVExFLCB0ZW1wYWRkb25uYW1lcykKICAgICAgICAgICAgaWYgY2hvaWNlID09IC0xOiBicmVhawogICAgICAgICAgICBlbGlmIGNob2ljZSA9PSAwOiBicmVhawogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgY2hvaWNlMiA9IChjaG9pY2UtMSkKICAgICAgICAgICAgICAgIGlmIGNob2ljZTIgaW4gc2VsZWN0ZWQ6CiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQucmVtb3ZlKGNob2ljZTIpCiAgICAgICAgICAgICAgICAgICAgdGVtcGFkZG9ubmFtZXNbY2hvaWNlXSA9IGFkZG9ubmFtZXNbY2hvaWNlMl0KICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQuYXBwZW5kKGNob2ljZTIpCiAgICAgICAgICAgICAgICAgICAgdGVtcGFkZG9ubmFtZXNbY2hvaWNlXSA9ICJbQl1bQ09MT1IgJXNdJXNbL0NPTE9SXVsvQl0iICUgKENPTE9SMSwgYWRkb25uYW1lc1tjaG9pY2UyXSkKICAgIGlmIHNlbGVjdGVkID09IE5vbmU6IHJldHVybgogICAgaWYgbGVuKHNlbGVjdGVkKSA+IDA6CiAgICAgICAgd2l6LmFkZG9uVXBkYXRlcygnc2V0JykKICAgICAgICBmb3IgYWRkb24gaW4gc2VsZWN0ZWQ6CiAgICAgICAgICAgIHJlbW92ZUFkZG9uKGFkZG9uaWRzW2FkZG9uXSwgYWRkb25uYW1lc1thZGRvbl0sIFRydWUpCgogICAgICAgIHhibWMuc2xlZXAoNTAwKQoKICAgICAgICBpZiBJTlNUQUxMTUVUSE9EID09IDE6IHRvZG8gPSAxCiAgICAgICAgZWxpZiBJTlNUQUxMTUVUSE9EID09IDI6IHRvZG8gPSAwCiAgICAgICAgZWxzZTogdG9kbyA9IERJQUxPRy55ZXNubyhBRERPTlRJVExFLCAiW0NPTE9SICVzXVdvdWxkIHlvdSBsaWtlIHRvIFtDT0xPUiAlc11Gb3JjZSBjbG9zZVsvQ09MT1JdIGtvZGkgb3IgW0NPTE9SICVzXVJlbG9hZCBQcm9maWxlWy9DT0xPUl0/Wy9DT0xPUl0iICUgKENPTE9SMiwgQ09MT1IxLCBDT0xPUjEpLCB5ZXNsYWJlbD0iW0JdW0NPTE9SIHNwcmluZ2dyZWVuXVJlbG9hZCBQcm9maWxlWy9DT0xPUl1bL0JdIiwgbm9sYWJlbD0iW0JdW0NPTE9SIHJlZF1Gb3JjZSBDbG9zZVsvQ09MT1JdWy9CXSIpCiAgICAgICAgaWYgdG9kbyA9PSAxOiB3aXoucmVsb2FkRml4KCdyZW1vdmUgYWRkb24nKQogICAgICAgIGVsc2U6IHdpei5hZGRvblVwZGF0ZXMoJ3Jlc2V0Jyk7IHdpei5raWxseGJtYyhUcnVlKQoKZGVmIHJlbW92ZUFkZG9uRGF0YU1lbnUoKToKICAgIGlmIG9zLnBhdGguZXhpc3RzKEFERE9ORCk6CiAgICAgICAgYWRkRmlsZSgnW0NPTE9SIHJlZF1bQl1bQk9SUkFSXVsvQl1bL0NPTE9SXSBUb2RhIGxhIGNhcnBldGEgQWRkb25fRGF0YScsICdyZW1vdmVkYXRhJywgJ2FsbCcsIHRoZW1laXQ9VEhFTUUyKQogICAgICAgIGFkZEZpbGUoJ1tDT0xPUiByZWRdW0JdW0JPUlJBUl1bL0JdWy9DT0xPUl0gQWRkb25fRGF0YSBkZSBBZGRvbnMgRGVzaW5zdGFsYWRvcycsICdyZW1vdmVkYXRhJywgJ3VuaW5zdGFsbGVkJywgdGhlbWVpdD1USEVNRTIpCiAgICAgICAgYWRkRmlsZSgnW0NPTE9SIHJlZF1bQl1bQk9SUkFSXVsvQl1bL0NPTE9SXSBDYXJwZXRhcyB2YWNpYXMgZGUgQWRkb25fRGF0YScsICdyZW1vdmVkYXRhJywgJ2VtcHR5JywgdGhlbWVpdD1USEVNRTIpCiAgICAgICAgYWRkRmlsZSgnW0NPTE9SIHJlZF1bQl1bQk9SUkFSXVsvQl1bL0NPTE9SXSBDYXJwZXRhICVzIGRlIEFkZG9uX0RhdGEnICUgQURET05USVRMRSwgJ3Jlc2V0YWRkb24nLCB0aGVtZWl0PVRIRU1FMikKICAgICAgICBpZiBISURFU1BBQ0VSUyA9PSAnTm8nOiBhZGRGaWxlKHdpei5zZXAoKSwgJycsIHRoZW1laXQ9VEhFTUUzKQogICAgICAgIGZvbGQgPSBnbG9iLmdsb2Iob3MucGF0aC5qb2luKEFERE9ORCwgJyovJykpCiAgICAgICAgZm9yIGZvbGRlciBpbiBzb3J0ZWQoZm9sZCwga2V5ID0gbGFtYmRhIHg6IHgpOgogICAgICAgICAgICBmb2xkZXJuYW1lID0gZm9sZGVyLnJlcGxhY2UoQURET05ELCAnJykucmVwbGFjZSgnXFwnLCAnJykucmVwbGFjZSgnLycsICcnKQogICAgICAgICAgICBpY29uID0gb3MucGF0aC5qb2luKGZvbGRlci5yZXBsYWNlKEFERE9ORCwgQURET05TKSwgJ2ljb24ucG5nJykKICAgICAgICAgICAgZmFuYXJ0ID0gb3MucGF0aC5qb2luKGZvbGRlci5yZXBsYWNlKEFERE9ORCwgQURET05TKSwgJ2ZhbmFydC5wbmcnKQogICAgICAgICAgICBmb2xkZXJkaXNwbGF5ID0gZm9sZGVybmFtZQogICAgICAgICAgICByZXBsYWNlID0geydhdWRpby4nOidbQ09MT1Igb3JhbmdlXVtBVURJT10gWy9DT0xPUl0nLCAnbWV0YWRhdGEuJzonW0NPTE9SIGN5YW5dW01FVEFEQVRBXSBbL0NPTE9SXScsICdtb2R1bGUuJzonW0NPTE9SIG9yYW5nZV1bTU9EVUxFXSBbL0NPTE9SXScsICdwbHVnaW4uJzonW0NPTE9SIGJsdWVdW1BMVUdJTl0gWy9DT0xPUl0nLCAncHJvZ3JhbS4nOidbQ09MT1Igb3JhbmdlXVtQUk9HUkFNXSBbL0NPTE9SXScsICdyZXBvc2l0b3J5Lic6J1tDT0xPUiBnb2xkXVtSRVBPXSBbL0NPTE9SXScsICdzY3JpcHQuJzonW0NPTE9SIHNwcmluZ2dyZWVuXVtTQ1JJUFRdIFsvQ09MT1JdJywgJ3NlcnZpY2UuJzonW0NPTE9SIHNwcmluZ2dyZWVuXVtTRVJWSUNFXSBbL0NPTE9SXScsICdza2luLic6J1tDT0xPUiBkb2RnZXJibHVlXVtTS0lOXSBbL0NPTE9SXScsICd2aWRlby4nOidbQ09MT1Igb3JhbmdlXVtWSURFT10gWy9DT0xPUl0nLCAnd2VhdGhlci4nOidbQ09MT1IgeWVsbG93XVtXRUFUSEVSXSBbL0NPTE9SXSd9CiAgICAgICAgICAgIGZvciByZXAgaW4gcmVwbGFjZToKICAgICAgICAgICAgICAgIGZvbGRlcmRpc3BsYXkgPSBmb2xkZXJkaXNwbGF5LnJlcGxhY2UocmVwLCByZXBsYWNlW3JlcF0pCiAgICAgICAgICAgIGlmIGZvbGRlcm5hbWUgaW4gRVhDTFVERVM6IGZvbGRlcmRpc3BsYXkgPSAnW0NPTE9SIHNwcmluZ2dyZWVuXVtCXVtCTE9RVUVBRE9dWy9CXVsvQ09MT1JdICVzJyAlIGZvbGRlcmRpc3BsYXkKICAgICAgICAgICAgZWxzZTogZm9sZGVyZGlzcGxheSA9ICdbQ09MT1IgcmVkXVtCXVtCT1JSQVJdWy9CXVsvQ09MT1JdICVzJyAlIGZvbGRlcmRpc3BsYXkKICAgICAgICAgICAgYWRkRmlsZSgnICVzJyAlIGZvbGRlcmRpc3BsYXksICdyZW1vdmVkYXRhJywgZm9sZGVybmFtZSwgaWNvbj1pY29uLCBmYW5hcnQ9ZmFuYXJ0LCB0aGVtZWl0PVRIRU1FMikKICAgIGVsc2U6CiAgICAgICAgYWRkRmlsZSgnTm8gQWRkb24gZGF0YSBmb2xkZXIgZm91bmQuJywgJycsIHRoZW1laXQ9VEhFTUUzKQogICAgc2V0VmlldygnZmlsZXMnLCAndmlld1R5cGUnKQoKZGVmIGVuYWJsZUFkZG9ucygpOgogICAgYWRkRmlsZSgiW0ldW0JdW0NPTE9SIHJlZF1BdGVuY2lvbjogRGVzYWN0aXZhciBhbGd1bm9zIGFkZG9ucyBwdWVkZSBjYXVzYXIgcHJvYmxlbWFzWy9DT0xPUl1bL0JdWy9JXSIsICcnLCBpY29uPUlDT05NQUlOVCkKICAgIGZvbGQgPSBnbG9iLmdsb2Iob3MucGF0aC5qb2luKEFERE9OUywgJyovJykpCiAgICB4ID0gMAogICAgZm9yIGZvbGRlciBpbiBzb3J0ZWQoZm9sZCwga2V5ID0gbGFtYmRhIHg6IHgpOgogICAgICAgIGZvbGRlcm5hbWUgPSBvcy5wYXRoLnNwbGl0KGZvbGRlcls6LTFdKVsxXQogICAgICAgIGlmIGZvbGRlcm5hbWUgaW4gRVhDTFVERVM6IGNvbnRpbnVlCiAgICAgICAgaWYgZm9sZGVybmFtZSBpbiBERUZBVUxUUExVR0lOUzogY29udGludWUKICAgICAgICBhZGRvbnhtbCA9IG9zLnBhdGguam9pbihmb2xkZXIsICdhZGRvbi54bWwnKQogICAgICAgIGlmIG9zLnBhdGguZXhpc3RzKGFkZG9ueG1sKToKICAgICAgICAgICAgeCArPSAxCiAgICAgICAgICAgIGZvbGQgICA9IGZvbGRlci5yZXBsYWNlKEFERE9OUywgJycpWzE6LTFdCiAgICAgICAgICAgIGYgICAgICA9IG9wZW4oYWRkb254bWwpCiAgICAgICAgICAgIGEgICAgICA9IGYucmVhZCgpLnJlcGxhY2UoJ1xuJywnJykucmVwbGFjZSgnXHInLCcnKS5yZXBsYWNlKCdcdCcsJycpCiAgICAgICAgICAgIG1hdGNoICA9IHdpei5wYXJzZURPTShhLCAnYWRkb24nLCByZXQ9J2lkJykKICAgICAgICAgICAgbWF0Y2gyID0gd2l6LnBhcnNlRE9NKGEsICdhZGRvbicsIHJldD0nbmFtZScpCiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIHBsdWdpbmlkID0gbWF0Y2hbMF0KICAgICAgICAgICAgICAgIG5hbWUgPSBtYXRjaDJbMF0KICAgICAgICAgICAgZXhjZXB0OgogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgYWRkICAgID0geGJtY2FkZG9uLkFkZG9uKGlkPXBsdWdpbmlkKQogICAgICAgICAgICAgICAgc3RhdGUgID0gIltDT0xPUiBzcHJpbmdncmVlbl1bQWN0aXZhZG9dWy9DT0xPUl0iCiAgICAgICAgICAgICAgICBnb3RvICAgPSAiZmFsc2UiCiAgICAgICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgICAgIHN0YXRlICA9ICJbQ09MT1IgcmVkXVtEZXNhY3RpdmFkb11bL0NPTE9SXSIKICAgICAgICAgICAgICAgIGdvdG8gICA9ICJ0cnVlIgogICAgICAgICAgICAgICAgcGFzcwogICAgICAgICAgICBpY29uICAgPSBvcy5wYXRoLmpvaW4oZm9sZGVyLCAnaWNvbi5wbmcnKSBpZiBvcy5wYXRoLmV4aXN0cyhvcy5wYXRoLmpvaW4oZm9sZGVyLCAnaWNvbi5wbmcnKSkgZWxzZSBJQ09OCiAgICAgICAgICAgIGZhbmFydCA9IG9zLnBhdGguam9pbihmb2xkZXIsICdmYW5hcnQuanBnJykgaWYgb3MucGF0aC5leGlzdHMob3MucGF0aC5qb2luKGZvbGRlciwgJ2ZhbmFydC5qcGcnKSkgZWxzZSBGQU5BUlQKICAgICAgICAgICAgYWRkRmlsZSgiJXMgJXMiICUgKHN0YXRlLCBuYW1lKSwgJ3RvZ2dsZWFkZG9uJywgZm9sZCwgZ290bywgaWNvbj1pY29uLCBmYW5hcnQ9ZmFuYXJ0KQogICAgICAgICAgICBmLmNsb3NlKCkKICAgIGlmIHggPT0gMDoKICAgICAgICBhZGRGaWxlKCJObyBBZGRvbnMgRm91bmQgdG8gRW5hYmxlIG9yIERpc2FibGUuIiwgJycsIGljb249SUNPTk1BSU5UKQogICAgc2V0VmlldygnZmlsZXMnLCAndmlld1R5cGUnKQoKZGVmIGNoYW5nZUZlcSgpOgogICAgZmVxICAgICAgICA9IFsnRXZlcnkgU3RhcnR1cCcsICdFdmVyeSBEYXknLCAnRXZlcnkgVGhyZWUgRGF5cycsICdFdmVyeSBXZWVrbHknXQogICAgY2hhbmdlICAgICA9IERJQUxPRy5zZWxlY3QoIltDT0xPUiAlc11DYWRhIGN1YW50byBxdWllcmVzIHF1ZSBzZSBsaW1waWUgS29kaT9bL0NPTE9SXSIgJSBDT0xPUjIsIGZlcSkKICAgIGlmIG5vdCBjaGFuZ2UgPT0gLTE6CiAgICAgICAgd2l6LnNldFMoJ2F1dG9jbGVhbmZlcScsIHN0cihjaGFuZ2UpKQogICAgICAgIHdpei5Mb2dOb3RpZnkoJ1tDT0xPUiAlc11BdXRvIENsZWFuIFVwWy9DT0xPUl0nICUgQ09MT1IxLCAnW0NPTE9SICVzXUZlcXVlbmN5IE5vdyAlc1svQ09MT1JdJyAlIChDT0xPUjIsIGZlcVtjaGFuZ2VdKSkKCmRlZiBkZXZlbG9wZXIoKToKICAgIGFkZEZpbGUoJ0NvbnZlcnQgVGV4dCBGaWxlcyB0byAwLjEuNycsICAgICAgICAgJ2NvbnZlcnR0ZXh0JywgICAgICAgICAgIHRoZW1laXQ9VEhFTUUxKQogICAgYWRkRmlsZSgnQ3JlYXRlIFFSIENvZGUnLCAgICAgICAgICAgICAgICAgICAgICAnY3JlYXRlcXInLCAgICAgICAgICAgICAgdGhlbWVpdD1USEVNRTEpCiAgICBhZGRGaWxlKCdUZXN0IE5vdGlmaWNhdGlvbnMnLCAgICAgICAgICAgICAgICAgICd0ZXN0bm90aWZ5JywgICAgICAgICAgICB0aGVtZWl0PVRIRU1FMSkKICAgIGFkZEZpbGUoJ1Rlc3QgVXBkYXRlJywgICAgICAgICAgICAgICAgICAgICAgICAgJ3Rlc3R1cGRhdGUnLCAgICAgICAgICAgIHRoZW1laXQ9VEhFTUUxKQogICAgYWRkRmlsZSgnVGVzdCBGaXJzdCBSdW4nLCAgICAgICAgICAgICAgICAgICAgICAndGVzdGZpcnN0JywgICAgICAgICAgICAgdGhlbWVpdD1USEVNRTEpCiAgICBhZGRGaWxlKCdUZXN0IEZpcnN0IFJ1biBTZXR0aW5ncycsICAgICAgICAgICAgICd0ZXN0Zmlyc3RydW4nLCAgICAgICAgICB0aGVtZWl0PVRIRU1FMSkKICAgIHNldFZpZXcoJ2ZpbGVzJywgJ3ZpZXdUeXBlJykKCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwojIyMjIyMgQnVpbGQgSW5zdGFsbCAjIyMjIyMKIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCmRlZiBidWlsZFdpemFyZChuYW1lLCB0eXBlLCB0aGVtZT1Ob25lLCBvdmVyPUZhbHNlKToKICAgIGlmIG92ZXIgPT0gRmFsc2U6CiAgICAgICAgdGVzdGJ1aWxkID0gd2l6LmNoZWNrQnVpbGQobmFtZSwgJ3VybCcpCiAgICAgICAgaWYgdGVzdGJ1aWxkID09IEZhbHNlOgogICAgICAgICAgICB3aXouTG9nTm90aWZ5KCJbQ09MT1IgJXNdJXNbL0NPTE9SXSIgJSAoQ09MT1IxLCBBRERPTlRJVExFKSwgIltDT0xPUiAlc11VbmFibGVkIHRvIGZpbmQgYnVpbGRbL0NPTE9SXSIgJSBDT0xPUjIpCiAgICAgICAgICAgIHJldHVybgogICAgICAgIHRlc3R3b3JraW5nID0gd2l6LndvcmtpbmdVUkwodGVzdGJ1aWxkKQogICAgICAgIGlmIHRlc3R3b3JraW5nID09IEZhbHNlOgogICAgICAgICAgICB3aXouTG9nTm90aWZ5KCJbQ09MT1IgJXNdJXNbL0NPTE9SXSIgJSAoQ09MT1IxLCBBRERPTlRJVExFKSwgIltDT0xPUiAlc11CdWlsZCBaaXAgRXJyb3I6ICVzWy9DT0xPUl0iICUgKENPTE9SMiwgdGVzdHdvcmtpbmcpKQogICAgICAgICAgICByZXR1cm4KICAgIGlmIHR5cGUgPT0gJ2d1aSc6CiAgICAgICAgaWYgbmFtZSA9PSBCVUlMRE5BTUU6CiAgICAgICAgICAgIGlmIG92ZXIgPT0gVHJ1ZTogeWVzID0gMQogICAgICAgICAgICBlbHNlOiB5ZXMgPSBESUFMT0cueWVzbm8oQURET05USVRMRSwgJ1tDT0xPUiAlc11Xb3VsZCB5b3UgbGlrZSB0byBhcHBseSB0aGUgZ3VpZml4IGZvcjonICUgQ09MT1IyLCAnW0NPTE9SICVzXSVzWy9DT0xPUl0/Wy9DT0xPUl0nICUgKENPTE9SMSwgbmFtZSksIG5vbGFiZWw9J1tCXVtDT0xPUiByZWRdTm8sIENhbmNlbFsvQ09MT1JdWy9CXScseWVzbGFiZWw9J1tCXVtDT0xPUiBzcHJpbmdncmVlbl1BcHBseSBGaXhbL0NPTE9SXVsvQl0nKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHllcyA9IERJQUxPRy55ZXNubygiJXMgLSBbQ09MT1IgcmVkXVdBUk5JTkchIVsvQ09MT1JdIiAlIEFERE9OVElUTEUsICJbQ09MT1IgJXNdW0NPTE9SICVzXSVzWy9DT0xPUl0gY29tbXVuaXR5IGJ1aWxkIGlzIG5vdCBjdXJyZW50bHkgaW5zdGFsbGVkLiIgJSAoQ09MT1IyLCBDT0xPUjEsIG5hbWUpLCAiV291bGQgeW91IGxpa2UgdG8gYXBwbHkgdGhlIGd1aUZpeCBhbnl3YXlzPy5bL0NPTE9SXSIsIG5vbGFiZWw9J1tCXVtDT0xPUiByZWRdTm8sIENhbmNlbFsvQ09MT1JdWy9CXScseWVzbGFiZWw9J1tCXVtDT0xPUiBzcHJpbmdncmVlbl1BcHBseSBGaXhbL0NPTE9SXVsvQl0nKQogICAgICAgIGlmIHllczoKICAgICAgICAgICAgYnVpbGR6aXAgPSB3aXouY2hlY2tCdWlsZChuYW1lLCdndWknKQogICAgICAgICAgICB6aXBuYW1lID0gbmFtZS5yZXBsYWNlKCdcXCcsICcnKS5yZXBsYWNlKCcvJywgJycpLnJlcGxhY2UoJzonLCAnJykucmVwbGFjZSgnKicsICcnKS5yZXBsYWNlKCc/JywgJycpLnJlcGxhY2UoJyInLCAnJykucmVwbGFjZSgnPCcsICcnKS5yZXBsYWNlKCc+JywgJycpLnJlcGxhY2UoJ3wnLCAnJykKICAgICAgICAgICAgaWYgbm90IHdpei53b3JraW5nVVJMKGJ1aWxkemlwKSA9PSBUcnVlOiB3aXouTG9nTm90aWZ5KCJbQ09MT1IgJXNdJXNbL0NPTE9SXSIgJSAoQ09MT1IxLCBBRERPTlRJVExFKSwgJ1tDT0xPUiAlc11HdWlGaXg6IEludmFsaWQgWmlwIFVybCFbL0NPTE9SXScgJSBDT0xPUjIpOyByZXR1cm4KICAgICAgICAgICAgaWYgbm90IG9zLnBhdGguZXhpc3RzKFBBQ0tBR0VTKTogb3MubWFrZWRpcnMoUEFDS0FHRVMpCiAgICAgICAgICAgIERQLmNyZWF0ZShBRERPTlRJVExFLCdbQ09MT1IgJXNdW0JdRG93bmxvYWRpbmcgR3VpRml4OlsvQl1bL0NPTE9SXSBbQ09MT1IgJXNdJXNbL0NPTE9SXScgJSAoQ09MT1IyLCBDT0xPUjEsIG5hbWUpLCcnLCAnUGxlYXNlIFdhaXQnKQogICAgICAgICAgICBsaWI9b3MucGF0aC5qb2luKFBBQ0tBR0VTLCAnJXNfZ3Vpc2V0dGluZ3MuemlwJyAlIHppcG5hbWUpCiAgICAgICAgICAgIHRyeTogb3MucmVtb3ZlKGxpYikKICAgICAgICAgICAgZXhjZXB0OiBwYXNzCiAgICAgICAgICAgIGRvd25sb2FkZXIuZG93bmxvYWQoYnVpbGR6aXAsIGxpYiwgRFApCiAgICAgICAgICAgIHhibWMuc2xlZXAoNTAwKQogICAgICAgICAgICB0aXRsZSA9ICdbQ09MT1IgJXNdW0JdSW5zdGFsbGluZzpbL0JdWy9DT0xPUl0gW0NPTE9SICVzXSVzWy9DT0xPUl0nICUgKENPTE9SMiwgQ09MT1IxLCBuYW1lKQogICAgICAgICAgICBEUC51cGRhdGUoMCwgdGl0bGUsJycsICdQbGVhc2UgV2FpdCcpCiAgICAgICAgICAgIGV4dHJhY3QuYWxsKGxpYixVU0VSREFUQSxEUCwgdGl0bGU9dGl0bGUpCiAgICAgICAgICAgIERQLmNsb3NlKCkKICAgICAgICAgICAgd2l6LmRlZmF1bHRTa2luKCkKICAgICAgICAgICAgd2l6Lmxvb2thbmRGZWVsRGF0YSgnc2F2ZScpCiAgICAgICAgICAgIGlmIEtPRElWID49IDE3OgogICAgICAgICAgICAgICAgaW5zdGFsbGVkID0gZ3JhYkFkZG9ucyhsaWIpCiAgICAgICAgICAgICAgICB3aXouYWRkb25EYXRhYmFzZShpbnN0YWxsZWQsIDEsIFRydWUpCiAgICAgICAgICAgIGlmIElOU1RBTExNRVRIT0QgPT0gMTogdG9kbyA9IDEKICAgICAgICAgICAgZWxpZiBJTlNUQUxMTUVUSE9EID09IDI6IHRvZG8gPSAwCiAgICAgICAgICAgIGVsc2U6IHRvZG8gPSBESUFMT0cueWVzbm8oQURET05USVRMRSwgIltDT0xPUiAlc11UaGUgR3VpIGZpeCBoYXMgYmVlbiBpbnN0YWxsZWQuICBXb3VsZCB5b3UgbGlrZSB0byBSZWxvYWQgdGhlIHByb2ZpbGUgb3IgRm9yY2UgQ2xvc2UgS29kaT9bL0NPTE9SXSIgJSBDT0xPUjIsIHllc2xhYmVsPSJbQl1bQ09MT1IgcmVkXVJlbG9hZCBQcm9maWxlWy9DT0xPUl1bL0JdIiwgbm9sYWJlbD0iW0JdW0NPTE9SIHNwcmluZ2dyZWVuXUZvcmNlIENsb3NlWy9DT0xPUl1bL0JdIikKICAgICAgICAgICAgaWYgdG9kbyA9PSAxOiB3aXoucmVsb2FkRml4KCkKICAgICAgICAgICAgZWxzZTogRElBTE9HLm9rKEFERE9OVElUTEUsICJbQ09MT1IgJXNdVG8gc2F2ZSBjaGFuZ2VzIHlvdSBub3cgbmVlZCB0byBmb3JjZSBjbG9zZSBLb2RpLCBQcmVzcyBPSyB0byBmb3JjZSBjbG9zZSBLb2RpWy9DT0xPUl0iICUgQ09MT1IyKTsgd2l6LmtpbGx4Ym1jKCd0cnVlJykKICAgICAgICBlbHNlOgogICAgICAgICAgICB3aXouTG9nTm90aWZ5KCJbQ09MT1IgJXNdJXNbL0NPTE9SXSIgJSAoQ09MT1IxLCBBRERPTlRJVExFKSwgJ1tDT0xPUiAlc11HdWlGaXg6IENhbmNlbGxlZCFbL0NPTE9SXScgJSBDT0xPUjIpCiAgICBlbGlmIHR5cGUgPT0gJ2ZyZXNoJzoKICAgICAgICBmcmVzaFN0YXJ0KG5hbWUpCiAgICBlbGlmIHR5cGUgPT0gJ25vcm1hbCc6CiAgICAgICAgaWYgdXJsID09ICdub3JtYWwnOgogICAgICAgICAgICBpZiBLRUVQVFJBS1QgPT0gJ3RydWUnOgogICAgICAgICAgICAgICAgdHJha3RpdC5hdXRvVXBkYXRlKCdhbGwnKQogICAgICAgICAgICAgICAgd2l6LnNldFMoJ3RyYWt0bGFzdHNhdmUnLCBzdHIoVEhSRUVEQVlTKSkKICAgICAgICAgICAgaWYgS0VFUFJFQUwgPT0gJ3RydWUnOgogICAgICAgICAgICAgICAgZGVicmlkaXQuYXV0b1VwZGF0ZSgnYWxsJykKICAgICAgICAgICAgICAgIHdpei5zZXRTKCdkZWJyaWRsYXN0c2F2ZScsIHN0cihUSFJFRURBWVMpKQogICAgICAgICAgICBpZiBLRUVQTE9HSU4gPT0gJ3RydWUnOgogICAgICAgICAgICAgICAgbG9naW5pdC5hdXRvVXBkYXRlKCdhbGwnKQogICAgICAgICAgICAgICAgd2l6LnNldFMoJ2xvZ2lubGFzdHNhdmUnLCBzdHIoVEhSRUVEQVlTKSkKICAgICAgICB0ZW1wX2tvZGl2ID0gaW50KEtPRElWKTsgYnVpbGR2ID0gaW50KGZsb2F0KHdpei5jaGVja0J1aWxkKG5hbWUsICdrb2RpJykpKQogICAgICAgIGlmIG5vdCB0ZW1wX2tvZGl2ID09IGJ1aWxkdjoKICAgICAgICAgICAgaWYgdGVtcF9rb2RpdiA9PSAxNiBhbmQgYnVpbGR2IDw9IDE1OiB3YXJuaW5nID0gRmFsc2UKICAgICAgICAgICAgZWxzZTogd2FybmluZyA9IFRydWUKICAgICAgICBlbHNlOiB3YXJuaW5nID0gRmFsc2UKICAgICAgICBpZiB3YXJuaW5nID09IFRydWU6CiAgICAgICAgICAgIHllc19wcmVzc2VkID0gRElBTE9HLnllc25vKCIlcyAtIFtDT0xPUiByZWRdV0FSTklORyEhWy9DT0xPUl0iICUgQURET05USVRMRSwgJ1tDT0xPUiAlc11UaGVyZSBpcyBhIGNoYW5jZSB0aGF0IHRoZSBza2luIHdpbGwgbm90IGFwcGVhciBjb3JyZWN0bHknICUgQ09MT1IyLCAnV2hlbiBpbnN0YWxsaW5nIGEgJXMgYnVpbGQgb24gYSBLb2RpICVzIGluc3RhbGwnICUgKHdpei5jaGVja0J1aWxkKG5hbWUsICdrb2RpJyksIEtPRElWKSwgJ1dvdWxkIHlvdSBzdGlsbCBsaWtlIHRvIGluc3RhbGw6IFtDT0xPUiAlc10lcyB2JXNbL0NPTE9SXT9bL0NPTE9SXScgJSAoQ09MT1IxLCBuYW1lLCB3aXouY2hlY2tCdWlsZChuYW1lLCd2ZXJzaW9uJykpLCBub2xhYmVsPSdbQl1bQ09MT1IgcmVkXU5vLCBDYW5jZWxbL0NPTE9SXVsvQl0nLHllc2xhYmVsPSdbQl1bQ09MT1Igc3ByaW5nZ3JlZW5dWWVzLCBJbnN0YWxsWy9DT0xPUl1bL0JdJykKICAgICAgICBlbHNlOgogICAgICAgICAgICBpZiBub3Qgb3ZlciA9PSBGYWxzZTogeWVzX3ByZXNzZWQgPSAxCiAgICAgICAgICAgIGVsc2U6IHllc19wcmVzc2VkID0gRElBTE9HLnllc25vKEFERE9OVElUTEUsICdbQ09MT1IgJXNdRXN0YXMgYSBwdW50byBkZSBpbnN0YWxhciBlbCBbQ09MT1IgeWVsbG93XVtCXVBhcmNoZVsvQl1bL0NPTE9SXScgJSBDT0xPUjIsICdbQ09MT1IgJXNdJXMgdiVzWy9DT0xPUl0/Wy9DT0xPUl0nICUgKENPTE9SMSwgbmFtZSwgd2l6LmNoZWNrQnVpbGQobmFtZSwndmVyc2lvbicpKSwgbm9sYWJlbD0nW0JdW0NPTE9SIHJlZF1DYW5jZWxhclsvQ09MT1JdWy9CXScseWVzbGFiZWw9J1tCXVtDT0xPUiBzcHJpbmdncmVlbl1JbnN0YWxhclsvQ09MT1JdWy9CXScpCiAgICAgICAgaWYgeWVzX3ByZXNzZWQ6CiAgICAgICAgICAgIHdpei5jbGVhclMoJ2J1aWxkJykKICAgICAgICAgICAgYnVpbGR6aXAgPSB3aXouY2hlY2tCdWlsZChuYW1lLCAndXJsJykKICAgICAgICAgICAgemlwbmFtZSA9IG5hbWUucmVwbGFjZSgnXFwnLCAnJykucmVwbGFjZSgnLycsICcnKS5yZXBsYWNlKCc6JywgJycpLnJlcGxhY2UoJyonLCAnJykucmVwbGFjZSgnPycsICcnKS5yZXBsYWNlKCciJywgJycpLnJlcGxhY2UoJzwnLCAnJykucmVwbGFjZSgnPicsICcnKS5yZXBsYWNlKCd8JywgJycpCiAgICAgICAgICAgIGlmIG5vdCB3aXoud29ya2luZ1VSTChidWlsZHppcCkgPT0gVHJ1ZTogd2l6LkxvZ05vdGlmeSgiW0NPTE9SICVzXSVzWy9DT0xPUl0iICUgKENPTE9SMSwgQURET05USVRMRSksICdbQ09MT1IgJXNdQnVpbGQgSW5zdGFsbDogSW52YWxpZCBaaXAgVXJsIVsvQ09MT1JdJyAlIENPTE9SMik7IHJldHVybgogICAgICAgICAgICBpZiBub3Qgb3MucGF0aC5leGlzdHMoUEFDS0FHRVMpOiBvcy5tYWtlZGlycyhQQUNLQUdFUykKICAgICAgICAgICAgRFAuY3JlYXRlKEFERE9OVElUTEUsJ1tDT0xPUiAlc11bQl1EZXNjYXJnYW5kbzpbL0JdWy9DT0xPUl0gW0NPTE9SICVzXSVzIHYlc1svQ09MT1JdJyAlIChDT0xPUjIsIENPTE9SMSwgbmFtZSwgd2l6LmNoZWNrQnVpbGQobmFtZSwndmVyc2lvbicpKSwnJywgJ0VzcGVyYScpCiAgICAgICAgICAgIGxpYj1vcy5wYXRoLmpvaW4oUEFDS0FHRVMsICclcy56aXAnICUgemlwbmFtZSkKICAgICAgICAgICAgdHJ5OiBvcy5yZW1vdmUobGliKQogICAgICAgICAgICBleGNlcHQ6IHBhc3MKICAgICAgICAgICAgZG93bmxvYWRlci5kb3dubG9hZChidWlsZHppcCwgbGliLCBEUCkKICAgICAgICAgICAgeGJtYy5zbGVlcCg1MDApCiAgICAgICAgICAgIHRpdGxlID0gJ1tDT0xPUiAlc11bQl1JbnN0YWxhbmRvOlsvQl1bL0NPTE9SXSBbQ09MT1IgJXNdJXMgdiVzWy9DT0xPUl0nICUgKENPTE9SMiwgQ09MT1IxLCBuYW1lLCB3aXouY2hlY2tCdWlsZChuYW1lLCd2ZXJzaW9uJykpCiAgICAgICAgICAgIERQLnVwZGF0ZSgwLCB0aXRsZSwnJywgJ0VzcGVyYScpCiAgICAgICAgICAgIHBlcmNlbnQsIGVycm9ycywgZXJyb3IgPSBleHRyYWN0LmFsbChsaWIsSE9NRSxEUCwgdGl0bGU9dGl0bGUpCiAgICAgICAgICAgIGlmIGludChmbG9hdChwZXJjZW50KSkgPiAwOgogICAgICAgICAgICAgICAgd2l6LmZpeG1ldGFzKCkKICAgICAgICAgICAgICAgIHdpei5sb29rYW5kRmVlbERhdGEoJ3NhdmUnKQogICAgICAgICAgICAgICAgd2l6LmRlZmF1bHRTa2luKCkKICAgICAgICAgICAgICAgICN3aXouYWRkb25VcGRhdGVzKCdzZXQnKQogICAgICAgICAgICAgICAgd2l6LnNldFMoJ2J1aWxkbmFtZScsIG5hbWUpCiAgICAgICAgICAgICAgICB3aXouc2V0UygnYnVpbGR2ZXJzaW9uJywgd2l6LmNoZWNrQnVpbGQoIG5hbWUsJ3ZlcnNpb24nKSkKICAgICAgICAgICAgICAgIHdpei5zZXRTKCdidWlsZHRoZW1lJywgJycpCiAgICAgICAgICAgICAgICB3aXouc2V0UygnbGF0ZXN0dmVyc2lvbicsIHdpei5jaGVja0J1aWxkKCBuYW1lLCd2ZXJzaW9uJykpCiAgICAgICAgICAgICAgICB3aXouc2V0UygnbGFzdGJ1aWxkY2hlY2snLCBzdHIoTkVYVENIRUNLKSkKICAgICAgICAgICAgICAgIHdpei5zZXRTKCdpbnN0YWxsZWQnLCAndHJ1ZScpCiAgICAgICAgICAgICAgICB3aXouc2V0UygnZXh0cmFjdCcsIHN0cihwZXJjZW50KSkKICAgICAgICAgICAgICAgIHdpei5zZXRTKCdlcnJvcnMnLCBzdHIoZXJyb3JzKSkKICAgICAgICAgICAgICAgIHdpei5sb2coJ0lOU1RBTExFRCAlczogW0VSUk9SUzolc10nICUgKHBlcmNlbnQsIGVycm9ycykpCiAgICAgICAgICAgICAgICB0cnk6IG9zLnJlbW92ZShsaWIpCiAgICAgICAgICAgICAgICBleGNlcHQ6IHBhc3MKICAgICAgICAgICAgICAgIGlmIGludChmbG9hdChlcnJvcnMpKSA+IDA6CiAgICAgICAgICAgICAgICAgICAgeWVzPURJQUxPRy55ZXNubyhBRERPTlRJVExFLCAnW0NPTE9SICVzXVtDT0xPUiAlc10lcyB2JXNbL0NPTE9SXScgJSAoQ09MT1IyLCBDT0xPUjEsIG5hbWUsIHdpei5jaGVja0J1aWxkKG5hbWUsJ3ZlcnNpb24nKSksICdDb21wbGV0ZWRvOiBbQ09MT1IgJXNdJXMlc1svQ09MT1JdIFtFcnJvcmVzOltDT0xPUiAlc10lc1svQ09MT1JdXScgJSAoQ09MT1IxLCBwZXJjZW50LCAnJScsIENPTE9SMSwgZXJyb3JzKSwgJ1F1aWVyZXMgdmVyIGxvcyBlcnJvcmVzP1svQ09MT1JdJywgbm9sYWJlbD0nW0JdW0NPTE9SIHJlZF1Ob1svQ09MT1JdWy9CXScsIHllc2xhYmVsPSdbQl1bQ09MT1Igc3ByaW5nZ3JlZW5dU2lbL0NPTE9SXVsvQl0nKQogICAgICAgICAgICAgICAgICAgIGlmIHllczoKICAgICAgICAgICAgICAgICAgICAgICAgaWYgaXNpbnN0YW5jZShlcnJvcnMsIHVuaWNvZGUpOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3IgPSBlcnJvci5lbmNvZGUoJ3V0Zi04JykKICAgICAgICAgICAgICAgICAgICAgICAgd2l6LlRleHRCb3goQURET05USVRMRSwgZXJyb3IpCiAgICAgICAgICAgICAgICBEUC5jbG9zZSgpCiAgICAgICAgICAgICAgICB0aGVtZWZpbGUgPSB3aXoudGhlbWVDb3VudChuYW1lKQogICAgICAgICAgICAgICAgaWYgbm90IHRoZW1lZmlsZSA9PSBGYWxzZToKICAgICAgICAgICAgICAgICAgICBidWlsZFdpemFyZChuYW1lLCAndGhlbWUnKQogICAgICAgICAgICAgICAgaWYgS09ESVYgPj0gMTc6IHdpei5hZGRvbkRhdGFiYXNlKEFERE9OX0lELCAxKQogICAgICAgICAgICAgICAgaWYgSU5TVEFMTE1FVEhPRCA9PSAxOiB0b2RvID0gMQogICAgICAgICAgICAgICAgZWxpZiBJTlNUQUxMTUVUSE9EID09IDI6IHRvZG8gPSAwCiAgICAgICAgICAgICAgICBlbHNlOiB0b2RvID0gRElBTE9HLnllc25vKEFERE9OVElUTEUsICJbQ09MT1IgJXNdUXVpZXJlcyBbQ09MT1IgJXNdQ2VycmFyWy9DT0xPUl0gS29kaSBvIFtDT0xPUiAlc11SZWNhcmdhciBlbCBwZXJmaWxbL0NPTE9SXT9bL0NPTE9SXSIgJSAoQ09MT1IyLCBDT0xPUjEsIENPTE9SMSksIHllc2xhYmVsPSJbQl1bQ09MT1IgcmVkXVJlY2FyZ2FyWy9DT0xPUl1bL0JdIiwgbm9sYWJlbD0iW0JdW0NPTE9SIHNwcmluZ2dyZWVuXUNlcnJhclsvQ09MT1JdWy9CXSIpCiAgICAgICAgICAgICAgICBpZiB0b2RvID09IDE6IHdpei5yZWxvYWRGaXgoKQogICAgICAgICAgICAgICAgZWxzZTogd2l6LmtpbGx4Ym1jKFRydWUpCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBpZiBpc2luc3RhbmNlKGVycm9ycywgdW5pY29kZSk6CiAgICAgICAgICAgICAgICAgICAgZXJyb3IgPSBlcnJvci5lbmNvZGUoJ3V0Zi04JykKICAgICAgICAgICAgICAgIHdpei5UZXh0Qm94KCIlczogRXJyb3IgSW5zdGFsbGluZyBCdWlsZCIgJSBBRERPTlRJVExFLCBlcnJvcikKICAgICAgICBlbHNlOgogICAgICAgICAgICB3aXouTG9nTm90aWZ5KCJbQ09MT1IgJXNdJXNbL0NPTE9SXSIgJSAoQ09MT1IxLCBBRERPTlRJVExFKSwgJ1tDT0xPUiAlc11CdWlsZCBJbnN0YWxsOiBDYW5jZWxsZWQhWy9DT0xPUl0nICUgQ09MT1IyKQogICAgZWxpZiB0eXBlID09ICd0aGVtZSc6CiAgICAgICAgaWYgdGhlbWUgPT0gTm9uZToKICAgICAgICAgICAgdGhlbWVmaWxlID0gd2l6LmNoZWNrQnVpbGQobmFtZSwgJ3RoZW1lJykKICAgICAgICAgICAgdGhlbWVsaXN0ID0gW10KICAgICAgICAgICAgaWYgbm90IHRoZW1lZmlsZSA9PSAnaHR0cDovLycgYW5kIHdpei53b3JraW5nVVJMKHRoZW1lZmlsZSkgPT0gVHJ1ZToKICAgICAgICAgICAgICAgIHRoZW1lbGlzdCA9IHdpei50aGVtZUNvdW50KG5hbWUsIEZhbHNlKQogICAgICAgICAgICAgICAgaWYgbGVuKHRoZW1lbGlzdCkgPiAwOgogICAgICAgICAgICAgICAgICAgIGlmIERJQUxPRy55ZXNubyhBRERPTlRJVExFLCAiW0NPTE9SICVzXVRoZSBCdWlsZCBbQ09MT1IgJXNdJXNbL0NPTE9SXSBjb21lcyB3aXRoIFtDT0xPUiAlc10lc1svQ09MT1JdIGRpZmZlcmVudCB0aGVtZXMiICUgKENPTE9SMiwgQ09MT1IxLCBuYW1lLCBDT0xPUjEsIGxlbih0aGVtZWxpc3QpKSwgIldvdWxkIHlvdSBsaWtlIHRvIGluc3RhbGwgb25lIG5vdz9bL0NPTE9SXSIsIHllc2xhYmVsPSJbQl1bQ09MT1Igc3ByaW5nZ3JlZW5dSW5zdGFsbCBUaGVtZVsvQ09MT1JdWy9CXSIsIG5vbGFiZWw9IltCXVtDT0xPUiByZWRdQ2FuY2VsIFRoZW1lc1svQ09MT1JdWy9CXSIpOgogICAgICAgICAgICAgICAgICAgICAgICB3aXoubG9nKCJUaGVtZSBMaXN0OiAlcyAiICUgc3RyKHRoZW1lbGlzdCkpCiAgICAgICAgICAgICAgICAgICAgICAgIHJldCA9IERJQUxPRy5zZWxlY3QoQURET05USVRMRSwgdGhlbWVsaXN0KQogICAgICAgICAgICAgICAgICAgICAgICB3aXoubG9nKCJUaGVtZSBpbnN0YWxsIHNlbGVjdGVkOiAlcyIgJSByZXQpCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIG5vdCByZXQgPT0gLTE6IHRoZW1lID0gdGhlbWVsaXN0W3JldF07IGluc3RhbGx0aGVtZSA9IFRydWUKICAgICAgICAgICAgICAgICAgICAgICAgZWxzZTogd2l6LkxvZ05vdGlmeSgiW0NPTE9SICVzXSVzWy9DT0xPUl0iICUgKENPTE9SMSwgQURET05USVRMRSksICdbQ09MT1IgJXNdVGhlbWUgSW5zdGFsbDogQ2FuY2VsbGVkIVsvQ09MT1JdJyAlIENPTE9SMik7IHJldHVybgogICAgICAgICAgICAgICAgICAgIGVsc2U6IHdpei5Mb2dOb3RpZnkoIltDT0xPUiAlc10lc1svQ09MT1JdIiAlIChDT0xPUjEsIEFERE9OVElUTEUpLCAnW0NPTE9SICVzXVRoZW1lIEluc3RhbGw6IENhbmNlbGxlZCFbL0NPTE9SXScgJSBDT0xPUjIpOyByZXR1cm4KICAgICAgICAgICAgZWxzZTogd2l6LkxvZ05vdGlmeSgiW0NPTE9SICVzXSVzWy9DT0xPUl0iICUgKENPTE9SMSwgQURET05USVRMRSksICdbQ09MT1IgJXNdVGhlbWUgSW5zdGFsbDogTm9uZSBGb3VuZCFbL0NPTE9SXScgJSBDT0xPUjIpCiAgICAgICAgZWxzZTogaW5zdGFsbHRoZW1lID0gRElBTE9HLnllc25vKEFERE9OVElUTEUsICdbQ09MT1IgJXNdV291bGQgeW91IGxpa2UgdG8gaW5zdGFsbCB0aGUgdGhlbWU6JyAlIENPTE9SMiwgJ1tDT0xPUiAlc10lc1svQ09MT1JdJyAlIChDT0xPUjEsIHRoZW1lKSwgJ2ZvciBbQ09MT1IgJXNdJXMgdiVzWy9DT0xPUl0/Wy9DT0xPUl0nICUgKENPTE9SMSwgbmFtZSwgd2l6LmNoZWNrQnVpbGQobmFtZSwndmVyc2lvbicpKSwgeWVzbGFiZWw9IltCXVtDT0xPUiBzcHJpbmdncmVlbl1JbnN0YWxsIFRoZW1lWy9DT0xPUl1bL0JdIiwgbm9sYWJlbD0iW0JdW0NPTE9SIHJlZF1DYW5jZWwgVGhlbWVzWy9DT0xPUl1bL0JdIikKICAgICAgICBpZiBpbnN0YWxsdGhlbWU6CiAgICAgICAgICAgIHRoZW1lemlwID0gd2l6LmNoZWNrVGhlbWUobmFtZSwgdGhlbWUsICd1cmwnKQogICAgICAgICAgICB6aXBuYW1lID0gbmFtZS5yZXBsYWNlKCdcXCcsICcnKS5yZXBsYWNlKCcvJywgJycpLnJlcGxhY2UoJzonLCAnJykucmVwbGFjZSgnKicsICcnKS5yZXBsYWNlKCc/JywgJycpLnJlcGxhY2UoJyInLCAnJykucmVwbGFjZSgnPCcsICcnKS5yZXBsYWNlKCc+JywgJycpLnJlcGxhY2UoJ3wnLCAnJykKICAgICAgICAgICAgaWYgbm90IHdpei53b3JraW5nVVJMKHRoZW1lemlwKSA9PSBUcnVlOiB3aXouTG9nTm90aWZ5KCJbQ09MT1IgJXNdJXNbL0NPTE9SXSIgJSAoQ09MT1IxLCBBRERPTlRJVExFKSwgJ1tDT0xPUiAlc11UaGVtZSBJbnN0YWxsOiBJbnZhbGlkIFppcCBVcmwhWy9DT0xPUl0nICUgQ09MT1IyKTsgcmV0dXJuIEZhbHNlCiAgICAgICAgICAgIGlmIG5vdCBvcy5wYXRoLmV4aXN0cyhQQUNLQUdFUyk6IG9zLm1ha2VkaXJzKFBBQ0tBR0VTKQogICAgICAgICAgICBEUC5jcmVhdGUoQURET05USVRMRSwnW0NPTE9SICVzXVtCXURvd25sb2FkaW5nOlsvQl1bL0NPTE9SXSBbQ09MT1IgJXNdJXNbL0NPTE9SXScgJSAoQ09MT1IyLCBDT0xPUjEsIHRoZW1lKSwnJywgJ1BsZWFzZSBXYWl0JykKICAgICAgICAgICAgbGliPW9zLnBhdGguam9pbihQQUNLQUdFUywgJyVzLnppcCcgJSB6aXBuYW1lKQogICAgICAgICAgICB0cnk6IG9zLnJlbW92ZShsaWIpCiAgICAgICAgICAgIGV4Y2VwdDogcGFzcwogICAgICAgICAgICBkb3dubG9hZGVyLmRvd25sb2FkKHRoZW1lemlwLCBsaWIsIERQKQogICAgICAgICAgICB4Ym1jLnNsZWVwKDUwMCkKICAgICAgICAgICAgRFAudXBkYXRlKDAsIiIsICJJbnN0YWxsaW5nICVzICIgJSBuYW1lKQogICAgICAgICAgICB0ZXN0ID0gRmFsc2UKICAgICAgICAgICAgaWYgdXJsIG5vdCBpbiBbImZyZXNoIiwgIm5vcm1hbCJdOgogICAgICAgICAgICAgICAgdGVzdCA9IHRlc3RUaGVtZShsaWIpIGlmIG5vdCB3aXouY3VyclNraW4oKSBpbiBbJ3NraW4uY29uZmx1ZW5jZScsICdza2luLmVzdHVhcnknXSBlbHNlIEZhbHNlCiAgICAgICAgICAgICAgICB0ZXN0MiA9IHRlc3RHdWkobGliKSBpZiBub3Qgd2l6LmN1cnJTa2luKCkgaW4gWydza2luLmNvbmZsdWVuY2UnLCAnc2tpbi5lc3R1YXJ5J10gZWxzZSBGYWxzZQogICAgICAgICAgICAgICAgaWYgdGVzdCA9PSBUcnVlOgogICAgICAgICAgICAgICAgICAgIHdpei5sb29rYW5kRmVlbERhdGEoJ3NhdmUnKQogICAgICAgICAgICAgICAgICAgIHN3YXAgPSB3aXouc2tpblRvRGVmYXVsdCgnVGhlbWUgSW5zdGFsbCcpCiAgICAgICAgICAgICAgICAgICAgaWYgc3dhcCA9PSBGYWxzZTogcmV0dXJuIEZhbHNlCiAgICAgICAgICAgICAgICAgICAgeGJtYy5zbGVlcCg1MDApCiAgICAgICAgICAgIHRpdGxlID0gJ1tDT0xPUiAlc11bQl1JbnN0YWxsaW5nIFRoZW1lOlsvQl1bL0NPTE9SXSBbQ09MT1IgJXNdJXNbL0NPTE9SXScgJSAoQ09MT1IyLCBDT0xPUjEsIHRoZW1lKQogICAgICAgICAgICBEUC51cGRhdGUoMCwgdGl0bGUsJycsICdQbGVhc2UgV2FpdCcpCiAgICAgICAgICAgIHBlcmNlbnQsIGVycm9ycywgZXJyb3IgPSBleHRyYWN0LmFsbChsaWIsSE9NRSxEUCwgdGl0bGU9dGl0bGUpCiAgICAgICAgICAgIHdpei5zZXRTKCdidWlsZHRoZW1lJywgdGhlbWUpCiAgICAgICAgICAgIHdpei5sb2coJ0lOU1RBTExFRCAlczogW0VSUk9SUzolc10nICUgKHBlcmNlbnQsIGVycm9ycykpCiAgICAgICAgICAgIERQLmNsb3NlKCkKICAgICAgICAgICAgaWYgdXJsIG5vdCBpbiBbImZyZXNoIiwgIm5vcm1hbCJdOgogICAgICAgICAgICAgICAgd2l6LmZvcmNlVXBkYXRlKCkKICAgICAgICAgICAgICAgIGlmIEtPRElWID49IDE3OgogICAgICAgICAgICAgICAgICAgIGluc3RhbGxlZCA9IGdyYWJBZGRvbnMobGliKQogICAgICAgICAgICAgICAgICAgIHdpei5hZGRvbkRhdGFiYXNlKGluc3RhbGxlZCwgMSwgVHJ1ZSkKICAgICAgICAgICAgICAgIGlmIHRlc3QyID09IFRydWU6CiAgICAgICAgICAgICAgICAgICAgd2l6Lmxvb2thbmRGZWVsRGF0YSgnc2F2ZScpCiAgICAgICAgICAgICAgICAgICAgd2l6LmRlZmF1bHRTa2luKCkKICAgICAgICAgICAgICAgICAgICBnb3Rvc2tpbiA9IHdpei5nZXRTKCdkZWZhdWx0c2tpbicpCiAgICAgICAgICAgICAgICAgICAgd2l6LnN3YXBTa2lucyhnb3Rvc2tpbiwgIlRoZW1lIEluc3RhbGxlciIpCiAgICAgICAgICAgICAgICAgICAgd2l6Lmxvb2thbmRGZWVsRGF0YSgncmVzdG9yZScpCiAgICAgICAgICAgICAgICBlbGlmIHRlc3QgPT0gVHJ1ZToKICAgICAgICAgICAgICAgICAgICB3aXoubG9va2FuZEZlZWxEYXRhKCdzYXZlJykKICAgICAgICAgICAgICAgICAgICB3aXouZGVmYXVsdFNraW4oKQogICAgICAgICAgICAgICAgICAgIGdvdG9za2luID0gd2l6LmdldFMoJ2RlZmF1bHRza2luJykKICAgICAgICAgICAgICAgICAgICB3aXouc3dhcFNraW5zKGdvdG9za2luLCAiVGhlbWUgSW5zdGFsbGVyIikKICAgICAgICAgICAgICAgICAgICB3aXoubG9va2FuZEZlZWxEYXRhKCdyZXN0b3JlJykKICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgd2l6LmViaSgiUmVsb2FkU2tpbigpIikKICAgICAgICAgICAgICAgICAgICB4Ym1jLnNsZWVwKDEwMDApCiAgICAgICAgICAgICAgICAgICAgd2l6LmViaSgiQ29udGFpbmVyLlJlZnJlc2giKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHdpei5Mb2dOb3RpZnkoIltDT0xPUiAlc10lc1svQ09MT1JdIiAlIChDT0xPUjEsIEFERE9OVElUTEUpLCAnW0NPTE9SICVzXVRoZW1lIEluc3RhbGw6IENhbmNlbGxlZCFbL0NPTE9SXScgJSBDT0xPUjIpCgpkZWYgdGhpcmRQYXJ0eUluc3RhbGwobmFtZSwgdXJsKToKICAgIGlmIG5vdCB3aXoud29ya2luZ1VSTCh1cmwpOgogICAgICAgIExvZ05vdGlmeSgiW0NPTE9SICVzXSVzWy9DT0xPUl0iICUgKENPTE9SMSwgQURET05USVRMRSksICdbQ09MT1IgJXNdSW52YWxpZCBVUkwgZm9yIEJ1aWxkWy9DT0xPUl0nICUgQ09MT1IyKTsgcmV0dXJuCiAgICB0eXBlID0gRElBTE9HLnllc25vKEFERE9OVElUTEUsICJbQ09MT1IgJXNdSW5zdGFsYWNpb24gW0NPTE9SICVzXUNvbiBMaW1waWV6YSAoV2l6YXJkcylbL0NPTE9SXSBvIFtDT0xPUiAlc11TaW4gTGltcGllemEgKFBhcmNoZXMpWy9DT0xPUl0gUGFyYSBlbCBwYXF1ZXRlOlsvQ09MT1JdIiAlIChDT0xPUjIsIENPTE9SMSwgQ09MT1IxKSwgIltDT0xPUiAlc10lc1svQ09MT1JdIiAlIChDT0xPUjEsIG5hbWUpLCB5ZXNsYWJlbD0iW0JdW0NPTE9SIHNwcmluZ2dyZWVuXUNvbiBMaW1waWV6YVsvQ09MT1JdWy9CXSIsIG5vbGFiZWw9IltCXVtDT0xPUiByZWRdU2luIExpbXBpZXphWy9DT0xPUl1bL0JdIikKICAgIGlmIHR5cGUgPT0gMToKICAgICAgICBmcmVzaFN0YXJ0KCd0aGlyZCcsIFRydWUpCiAgICB3aXouY2xlYXJTKCdidWlsZCcpCiAgICB6aXBuYW1lID0gbmFtZS5yZXBsYWNlKCdcXCcsICcnKS5yZXBsYWNlKCcvJywgJycpLnJlcGxhY2UoJzonLCAnJykucmVwbGFjZSgnKicsICcnKS5yZXBsYWNlKCc/JywgJycpLnJlcGxhY2UoJyInLCAnJykucmVwbGFjZSgnPCcsICcnKS5yZXBsYWNlKCc+JywgJycpLnJlcGxhY2UoJ3wnLCAnJykKICAgIGlmIG5vdCBvcy5wYXRoLmV4aXN0cyhQQUNLQUdFUyk6IG9zLm1ha2VkaXJzKFBBQ0tBR0VTKQogICAgRFAuY3JlYXRlKEFERE9OVElUTEUsJ1tDT0xPUiAlc11bQl1EZXNjYXJnYW5kbzpbL0JdWy9DT0xPUl0gW0NPTE9SICVzXSVzWy9DT0xPUl0nICUgKENPTE9SMiwgQ09MT1IxLCBuYW1lKSwnJywgJ0VzcGVyYScpCiAgICBsaWI9b3MucGF0aC5qb2luKFBBQ0tBR0VTLCAnJXMuemlwJyAlIHppcG5hbWUpCiAgICB0cnk6IG9zLnJlbW92ZShsaWIpCiAgICBleGNlcHQ6IHBhc3MKICAgIGRvd25sb2FkZXIuZG93bmxvYWQodXJsLCBsaWIsIERQKQogICAgeGJtYy5zbGVlcCg1MDApCiAgICB0aXRsZSA9ICdbQ09MT1IgJXNdW0JdSW5zdGFsYW5kbzpbL0JdWy9DT0xPUl0gW0NPTE9SICVzXSVzWy9DT0xPUl0nICUgKENPTE9SMiwgQ09MT1IxLCBuYW1lKQogICAgRFAudXBkYXRlKDAsIHRpdGxlLCcnLCAnRXNwZXJhJykKICAgIHBlcmNlbnQsIGVycm9ycywgZXJyb3IgPSBleHRyYWN0LmFsbChsaWIsSE9NRSxEUCwgdGl0bGU9dGl0bGUpCiAgICBpZiBpbnQoZmxvYXQocGVyY2VudCkpID4gMDoKICAgICAgICB3aXouZml4bWV0YXMoKQogICAgICAgIHdpei5sb29rYW5kRmVlbERhdGEoJ3NhdmUnKQogICAgICAgIHdpei5kZWZhdWx0U2tpbigpCiAgICAgICAgI3dpei5hZGRvblVwZGF0ZXMoJ3NldCcpCiAgICAgICAgd2l6LnNldFMoJ2luc3RhbGxlZCcsICd0cnVlJykKICAgICAgICB3aXouc2V0UygnZXh0cmFjdCcsIHN0cihwZXJjZW50KSkKICAgICAgICB3aXouc2V0UygnZXJyb3JzJywgc3RyKGVycm9ycykpCiAgICAgICAgd2l6LmxvZygnSU5TVEFMTEVEICVzOiBbRVJST1JTOiVzXScgJSAocGVyY2VudCwgZXJyb3JzKSkKICAgICAgICB0cnk6IG9zLnJlbW92ZShsaWIpCiAgICAgICAgZXhjZXB0OiBwYXNzCiAgICAgICAgaWYgaW50KGZsb2F0KGVycm9ycykpID4gMDoKICAgICAgICAgICAgeWVzPURJQUxPRy55ZXNubyhBRERPTlRJVExFLCAnW0NPTE9SICVzXVtDT0xPUiAlc10lc1svQ09MT1JdJyAlIChDT0xPUjIsIENPTE9SMSwgbmFtZSksICdDb21wbGV0ZWRhZG86IFtDT0xPUiAlc10lcyVzWy9DT0xPUl0gW0Vycm9yZXM6W0NPTE9SICVzXSVzWy9DT0xPUl1dJyAlIChDT0xPUjEsIHBlcmNlbnQsICclJywgQ09MT1IxLCBlcnJvcnMpLCAnUXVpZXJlcyB2ZXIgbG9zIGVycm9yZXM/Wy9DT0xPUl0nLCBub2xhYmVsPSdbQl1bQ09MT1IgcmVkXU5vWy9DT0xPUl1bL0JdJyx5ZXNsYWJlbD0nW0JdW0NPTE9SIHNwcmluZ2dyZWVuXVZlciBFcnJvcmVzWy9DT0xPUl1bL0JdJykKICAgICAgICAgICAgaWYgeWVzOgogICAgICAgICAgICAgICAgaWYgaXNpbnN0YW5jZShlcnJvcnMsIHVuaWNvZGUpOgogICAgICAgICAgICAgICAgICAgIGVycm9yID0gZXJyb3IuZW5jb2RlKCd1dGYtOCcpCiAgICAgICAgICAgICAgICB3aXouVGV4dEJveChBRERPTlRJVExFLCBlcnJvcikKICAgIERQLmNsb3NlKCkKICAgIGlmIEtPRElWID49IDE3OiB3aXouYWRkb25EYXRhYmFzZShBRERPTl9JRCwgMSkKICAgIGlmIElOU1RBTExNRVRIT0QgPT0gMTogdG9kbyA9IDEKICAgIGVsaWYgSU5TVEFMTE1FVEhPRCA9PSAyOiB0b2RvID0gMAogICAgZWxzZTogdG9kbyA9IERJQUxPRy55ZXNubyhBRERPTlRJVExFLCAiW0NPTE9SICVzXVdvdWxkIHlvdSBsaWtlIHRvIFtDT0xPUiAlc11Gb3JjZSBjbG9zZVsvQ09MT1JdIGtvZGkgb3IgW0NPTE9SICVzXVJlbG9hZCBQcm9maWxlWy9DT0xPUl0/Wy9DT0xPUl0iICUgKENPTE9SMiwgQ09MT1IxLCBDT0xPUjEpLCB5ZXNsYWJlbD0iW0JdW0NPTE9SIHNwcmluZ2dyZWVuXVJlbG9hZCBQcm9maWxlWy9DT0xPUl1bL0JdIiwgbm9sYWJlbD0iW0JdW0NPTE9SIHJlZF1Gb3JjZSBDbG9zZVsvQ09MT1JdWy9CXSIpCiAgICBpZiB0b2RvID09IDE6IHdpei5yZWxvYWRGaXgoKQogICAgZWxzZTogd2l6LmtpbGx4Ym1jKFRydWUpCgpkZWYgdGVzdFRoZW1lKHBhdGgpOgogICAgemZpbGUgPSB6aXBmaWxlLlppcEZpbGUocGF0aCkKICAgIGZvciBpdGVtIGluIHpmaWxlLmluZm9saXN0KCk6CiAgICAgICAgd2l6LmxvZyhzdHIoaXRlbS5maWxlbmFtZSkpCiAgICAgICAgaWYgJy9zZXR0aW5ncy54bWwnIGluIGl0ZW0uZmlsZW5hbWU6CiAgICAgICAgICAgIHJldHVybiBUcnVlCiAgICByZXR1cm4gRmFsc2UKCmRlZiB0ZXN0R3VpKHBhdGgpOgogICAgemZpbGUgPSB6aXBmaWxlLlppcEZpbGUocGF0aCkKICAgIGZvciBpdGVtIGluIHpmaWxlLmluZm9saXN0KCk6CiAgICAgICAgaWYgJy9ndWlzZXR0aW5ncy54bWwnIGluIGl0ZW0uZmlsZW5hbWU6CiAgICAgICAgICAgIHJldHVybiBUcnVlCiAgICByZXR1cm4gRmFsc2UKCmRlZiBncmFiQWRkb25zKHBhdGgpOgogICAgemZpbGUgPSB6aXBmaWxlLlppcEZpbGUocGF0aCkKICAgIGFkZG9ubGlzdCA9IFtdCiAgICBmb3IgaXRlbSBpbiB6ZmlsZS5pbmZvbGlzdCgpOgogICAgICAgIGlmIHN0cihpdGVtLmZpbGVuYW1lKS5maW5kKCdhZGRvbi54bWwnKSA9PSAtMTogY29udGludWUKICAgICAgICBpbmZvID0gc3RyKGl0ZW0uZmlsZW5hbWUpLnNwbGl0KCcvJykKICAgICAgICBpZiBub3QgaW5mb1stMl0gaW4gYWRkb25saXN0OgogICAgICAgICAgICBhZGRvbmxpc3QuYXBwZW5kKGluZm9bLTJdKQogICAgcmV0dXJuIGFkZG9ubGlzdAoKZGVmIGFwa0luc3RhbGxlcihhcGssIHVybCk6CiAgICB3aXoubG9nKGFwaykKICAgIHdpei5sb2codXJsKQogICAgaWYgd2l6LnBsYXRmb3JtKCkgPT0gJ2FuZHJvaWQnOgogICAgICAgIHllcyA9IERJQUxPRy55ZXNubyhBRERPTlRJVExFLCAiW0NPTE9SICVzXVF1aWVyZXMgZGVzY2FyZ2FyIGUgaW5zdGFsYXI6IiAlIENPTE9SMiwgIltDT0xPUiAlc10lc1svQ09MT1JdIiAlIChDT0xPUjEsIGFwayksIHllc2xhYmVsPSJbQl1bQ09MT1Igc3ByaW5nZ3JlZW5dRGVzY2FyZ2FyWy9DT0xPUl1bL0JdIiwgbm9sYWJlbD0iW0JdW0NPTE9SIHJlZF1DYW5jZWxhclsvQ09MT1JdWy9CXSIpCiAgICAgICAgaWYgbm90IHllczogd2l6LkxvZ05vdGlmeSgiW0NPTE9SICVzXSVzWy9DT0xPUl0iICUgKENPTE9SMSwgQURET05USVRMRSksICdbQ09MT1IgJXNdRVJST1I6IEluc3RhbGFjaW9uIENhbmNlbGFkYVsvQ09MT1JdJyAlIENPTE9SMik7IHJldHVybgogICAgICAgIGRpc3BsYXkgPSBhcGsKICAgICAgICBpZiBub3Qgb3MucGF0aC5leGlzdHMoUEFDS0FHRVMpOiBvcy5tYWtlZGlycyhQQUNLQUdFUykKICAgICAgICBpZiBub3Qgd2l6LndvcmtpbmdVUkwodXJsKSA9PSBUcnVlOiB3aXouTG9nTm90aWZ5KCJbQ09MT1IgJXNdJXNbL0NPTE9SXSIgJSAoQ09MT1IxLCBBRERPTlRJVExFKSwgJ1tDT0xPUiAlc11BUEsgSW5zdGFsbGVyOiBJbnZhbGlkIEFwayBVcmwhWy9DT0xPUl0nICUgQ09MT1IyKTsgcmV0dXJuCiAgICAgICAgRFAuY3JlYXRlKEFERE9OVElUTEUsJ1tDT0xPUiAlc11bQl1EZXNjYXJnYW5kbzpbL0JdWy9DT0xPUl0gW0NPTE9SICVzXSVzWy9DT0xPUl0nICUgKENPTE9SMiwgQ09MT1IxLCBkaXNwbGF5KSwnJywgJ0VzcGVyYScpCiAgICAgICAgbGliPW9zLnBhdGguam9pbihQQUNLQUdFUywgIiVzLmFwayIgJSBhcGsucmVwbGFjZSgnXFwnLCAnJykucmVwbGFjZSgnLycsICcnKS5yZXBsYWNlKCc6JywgJycpLnJlcGxhY2UoJyonLCAnJykucmVwbGFjZSgnPycsICcnKS5yZXBsYWNlKCciJywgJycpLnJlcGxhY2UoJzwnLCAnJykucmVwbGFjZSgnPicsICcnKS5yZXBsYWNlKCd8JywgJycpKQogICAgICAgIHRyeTogb3MucmVtb3ZlKGxpYikKICAgICAgICBleGNlcHQ6IHBhc3MKICAgICAgICBkb3dubG9hZGVyLmRvd25sb2FkKHVybCwgbGliLCBEUCkKICAgICAgICB4Ym1jLnNsZWVwKDEwMCkKICAgICAgICBEUC5jbG9zZSgpCiAgICAgICAgbm90aWZ5LmFwa0luc3RhbGxlcihhcGspCiAgICAgICAgd2l6LmViaSgnU3RhcnRBbmRyb2lkQWN0aXZpdHkoIiIsImFuZHJvaWQuaW50ZW50LmFjdGlvbi5WSUVXIiwiYXBwbGljYXRpb24vdm5kLmFuZHJvaWQucGFja2FnZS1hcmNoaXZlIiwiZmlsZTonK2xpYisnIiknKQogICAgZWxzZTogd2l6LkxvZ05vdGlmeSgiW0NPTE9SICVzXSVzWy9DT0xPUl0iICUgKENPTE9SMSwgQURET05USVRMRSksICdbQ09MT1IgJXNdRVJST1I6IE5vbmUgQW5kcm9pZCBEZXZpY2VbL0NPTE9SXScgJSBDT0xPUjIpCgpkZWYgcm9tSW5zdGFsbGVyKG5hbWUsIHVybCk6CiAgICBteXJvbXMgPSB4Ym1jLnRyYW5zbGF0ZVBhdGgoQkFDS1VQUk9NUykKICAgIGlmIG15cm9tcyA9PSAnJzoKICAgICAgICBpZiBESUFMT0cueWVzbm8oQURET05USVRMRSwgIltDT0xPUiAlc11JdCBzZWVtcyB0aGF0IHlvdSBkbyBub3QgaGF2ZSBhbiBleHRyYWN0IGxvY2F0aW9uIHNldHVwIGZvciBSb20gUGFja3MiICUgQ09MT1IyLCAiV291bGQgeW91IGxpa2UgdG8gc2V0IG9uZT9bL0NPTE9SXSIsIHllc2xhYmVsPSJbQ09MT1Igc3ByaW5nZ3JlZW5dW0JdU2V0IExvY2F0aW9uWy9CXVsvQ09MT1JdIiwgbm9sYWJlbD0iW0NPTE9SIHJlZF1bQl1DYW5jZWwgRG93bmxvYWRbL0JdWy9DT0xPUl0iKToKICAgICAgICAgICAgd2l6Lm9wZW5TKCkKICAgICAgICAgICAgbXlyb21zID0gd2l6LmdldFMoJ3JvbXBhdGgnKQogICAgICAgICAgICBpZiBteXJvbXMgPT0gJyc6IHJldHVybgogICAgeWVzID0gRElBTE9HLnllc25vKEFERE9OVElUTEUsICJbQ09MT1IgJXNdQXJlIHlvdSBzdXJlIHlvdSB3b3VsZCBsaWtlIHRvIGRvd25sb2FkIGFuZCBleHRyYWN0IFtDT0xPUiAlc10lc1svQ09MT1JdIHRvOiIgJSAoQ09MT1IyLCBDT0xPUjEsIG5hbWUpLCAiW0NPTE9SICVzXSVzWy9DT0xPUl0iICUgKENPTE9SMSwgbXlyb21zKSwgeWVzbGFiZWw9IltCXVtDT0xPUiBzcHJpbmdncmVlbl1Eb3dubG9hZFsvQ09MT1JdWy9CXSIsIG5vbGFiZWw9IltCXVtDT0xPUiByZWRdQ2FuY2VsWy9DT0xPUl1bL0JdIikKICAgIGlmIG5vdCB5ZXM6IHdpei5Mb2dOb3RpZnkoIltDT0xPUiAlc10lc1svQ09MT1JdIiAlIChDT0xPUjEsIEFERE9OVElUTEUpLCAnW0NPTE9SICVzXUVSUk9SOiBJbnN0YWxsIENhbmNlbGxlZFsvQ09MT1JdJyAlIENPTE9SMik7IHJldHVybgogICAgZGlzcGxheSA9IG5hbWUKICAgIGlmIG5vdCBvcy5wYXRoLmV4aXN0cyhQQUNLQUdFUyk6IG9zLm1ha2VkaXJzKFBBQ0tBR0VTKQogICAgaWYgbm90IHdpei53b3JraW5nVVJMKHVybCkgPT0gVHJ1ZTogd2l6LkxvZ05vdGlmeSgiW0NPTE9SICVzXSVzWy9DT0xPUl0iICUgKENPTE9SMSwgQURET05USVRMRSksICdbQ09MT1IgJXNdQVBLIEluc3RhbGxlcjogSW52YWxpZCBSb20gVXJsIVsvQ09MT1JdJyAlIENPTE9SMik7IHJldHVybgogICAgRFAuY3JlYXRlKEFERE9OVElUTEUsJ1tDT0xPUiAlc11bQl1Eb3dubG9hZGluZzpbL0JdWy9DT0xPUl0gW0NPTE9SICVzXSVzWy9DT0xPUl0nICUgKENPTE9SMiwgQ09MT1IxLCBkaXNwbGF5KSwnJywgJ1BsZWFzZSBXYWl0JykKICAgIGxpYj1vcy5wYXRoLmpvaW4oUEFDS0FHRVMsICIlcy56aXAiICUgbmFtZS5yZXBsYWNlKCdcXCcsICcnKS5yZXBsYWNlKCcvJywgJycpLnJlcGxhY2UoJzonLCAnJykucmVwbGFjZSgnKicsICcnKS5yZXBsYWNlKCc/JywgJycpLnJlcGxhY2UoJyInLCAnJykucmVwbGFjZSgnPCcsICcnKS5yZXBsYWNlKCc+JywgJycpLnJlcGxhY2UoJ3wnLCAnJykpCiAgICB0cnk6IG9zLnJlbW92ZShsaWIpCiAgICBleGNlcHQ6IHBhc3MKICAgIGRvd25sb2FkZXIuZG93bmxvYWQodXJsLCBsaWIsIERQKQogICAgeGJtYy5zbGVlcCgxMDApCiAgICBwZXJjZW50LCBlcnJvcnMsIGVycm9yID0gZXh0cmFjdC5hbGwobGliLG15cm9tcyxEUCwgdGl0bGU9ZGlzcGxheSkKICAgIHRyeTogb3MucmVtb3ZlKGxpYikKICAgIGV4Y2VwdDogcGFzcwogICAgd2l6LkxvZ05vdGlmeSgiW0NPTE9SICVzXSVzWy9DT0xPUl0iICUgKENPTE9SMSwgQURET05USVRMRSksICdbQ09MT1IgJXNdUm9tIFBhY2sgSW5zdGFsbGVkWy9DT0xPUl0nICUgQ09MT1IyKQogICAgRFAuY2xvc2UoKQoKIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCiMjIyMjIyBNaXNjIEZ1bmN0aW9ucyMjIyMjIwojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKCmRlZiBjcmVhdGVNZW51KHR5cGUsIGFkZCwgbmFtZSk6CiAgICBpZiAgIHR5cGUgPT0gJ3NhdmVhZGRvbic6CiAgICAgICAgbWVudV9pdGVtcz1bXQogICAgICAgIGFkZDIgID0gdXJsbGliLnF1b3RlX3BsdXMoYWRkLmxvd2VyKCkucmVwbGFjZSgnICcsICcnKSkKICAgICAgICBhZGQzICA9IGFkZC5yZXBsYWNlKCdEZWJyaWQnLCAnUmVhbCBEZWJyaWQnKQogICAgICAgIG5hbWUyID0gdXJsbGliLnF1b3RlX3BsdXMobmFtZS5sb3dlcigpLnJlcGxhY2UoJyAnLCAnJykpCiAgICAgICAgbmFtZSA9IG5hbWUucmVwbGFjZSgndXJsJywgJ1VSTCBSZXNvbHZlcicpCiAgICAgICAgbWVudV9pdGVtcy5hcHBlbmQoKFRIRU1FMiAlIG5hbWUudGl0bGUoKSwgICAgICAgICAgICAgJyAnKSkKICAgICAgICBtZW51X2l0ZW1zLmFwcGVuZCgoVEhFTUUzICUgJ1NhdmUgJXMgRGF0YScgJSBhZGQzLCAgICAgICAgICAgICAgICdSdW5QbHVnaW4ocGx1Z2luOi8vJXMvP21vZGU9c2F2ZSVzJm5hbWU9JXMpJyAlICAgIChBRERPTl9JRCwgYWRkMiwgbmFtZTIpKSkKICAgICAgICBtZW51X2l0ZW1zLmFwcGVuZCgoVEhFTUUzICUgJ1Jlc3RvcmUgJXMgRGF0YScgJSBhZGQzLCAgICAgICAgICAgICdSdW5QbHVnaW4ocGx1Z2luOi8vJXMvP21vZGU9cmVzdG9yZSVzJm5hbWU9JXMpJyAlIChBRERPTl9JRCwgYWRkMiwgbmFtZTIpKSkKICAgICAgICBtZW51X2l0ZW1zLmFwcGVuZCgoVEhFTUUzICUgJ0NsZWFyICVzIERhdGEnICUgYWRkMywgICAgICAgICAgICAgICdSdW5QbHVnaW4ocGx1Z2luOi8vJXMvP21vZGU9Y2xlYXIlcyZuYW1lPSVzKScgJSAgIChBRERPTl9JRCwgYWRkMiwgbmFtZTIpKSkKICAgIGVsaWYgdHlwZSA9PSAnc2F2ZScgICAgOgogICAgICAgIG1lbnVfaXRlbXM9W10KICAgICAgICBhZGQyICA9IHVybGxpYi5xdW90ZV9wbHVzKGFkZC5sb3dlcigpLnJlcGxhY2UoJyAnLCAnJykpCiAgICAgICAgYWRkMyAgPSBhZGQucmVwbGFjZSgnRGVicmlkJywgJ1JlYWwgRGVicmlkJykKICAgICAgICBuYW1lMiA9IHVybGxpYi5xdW90ZV9wbHVzKG5hbWUubG93ZXIoKS5yZXBsYWNlKCcgJywgJycpKQogICAgICAgIG5hbWUgPSBuYW1lLnJlcGxhY2UoJ3VybCcsICdVUkwgUmVzb2x2ZXInKQogICAgICAgIG1lbnVfaXRlbXMuYXBwZW5kKChUSEVNRTIgJSBuYW1lLnRpdGxlKCksICAgICAgICAgICAgICcgJykpCiAgICAgICAgbWVudV9pdGVtcy5hcHBlbmQoKFRIRU1FMyAlICdSZWdpc3RlciAlcycgJSBhZGQzLCAgICAgICAgICAgICAgICAnUnVuUGx1Z2luKHBsdWdpbjovLyVzLz9tb2RlPWF1dGglcyZuYW1lPSVzKScgJSAgICAoQURET05fSUQsIGFkZDIsIG5hbWUyKSkpCiAgICAgICAgbWVudV9pdGVtcy5hcHBlbmQoKFRIRU1FMyAlICdTYXZlICVzIERhdGEnICUgYWRkMywgICAgICAgICAgICAgICAnUnVuUGx1Z2luKHBsdWdpbjovLyVzLz9tb2RlPXNhdmUlcyZuYW1lPSVzKScgJSAgICAoQURET05fSUQsIGFkZDIsIG5hbWUyKSkpCiAgICAgICAgbWVudV9pdGVtcy5hcHBlbmQoKFRIRU1FMyAlICdSZXN0b3JlICVzIERhdGEnICUgYWRkMywgICAgICAgICAgICAnUnVuUGx1Z2luKHBsdWdpbjovLyVzLz9tb2RlPXJlc3RvcmUlcyZuYW1lPSVzKScgJSAoQURET05fSUQsIGFkZDIsIG5hbWUyKSkpCiAgICAgICAgbWVudV9pdGVtcy5hcHBlbmQoKFRIRU1FMyAlICdJbXBvcnQgJXMgRGF0YScgJSBhZGQzLCAgICAgICAgICAgICAnUnVuUGx1Z2luKHBsdWdpbjovLyVzLz9tb2RlPWltcG9ydCVzJm5hbWU9JXMpJyAlICAoQURET05fSUQsIGFkZDIsIG5hbWUyKSkpCiAgICAgICAgbWVudV9pdGVtcy5hcHBlbmQoKFRIRU1FMyAlICdDbGVhciBBZGRvbiAlcyBEYXRhJyAlIGFkZDMsICAgICAgICAnUnVuUGx1Z2luKHBsdWdpbjovLyVzLz9tb2RlPWFkZG9uJXMmbmFtZT0lcyknICUgICAoQURET05fSUQsIGFkZDIsIG5hbWUyKSkpCiAgICBlbGlmIHR5cGUgPT0gJ2luc3RhbGwnICA6CiAgICAgICAgbWVudV9pdGVtcz1bXQogICAgICAgIG5hbWUyID0gdXJsbGliLnF1b3RlX3BsdXMobmFtZSkKICAgICAgICBtZW51X2l0ZW1zLmFwcGVuZCgoVEhFTUUyICUgbmFtZSwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdSdW5BZGRvbiglcywgP21vZGU9dmlld2J1aWxkJm5hbWU9JXMpJyAgJSAoQURET05fSUQsIG5hbWUyKSkpCiAgICAgICAgbWVudV9pdGVtcy5hcHBlbmQoKFRIRU1FMyAlICdGcmVzaCBJbnN0YWxsJywgICAgICAgICAgICAgICAgICAgICAnUnVuUGx1Z2luKHBsdWdpbjovLyVzLz9tb2RlPWluc3RhbGwmbmFtZT0lcyZ1cmw9ZnJlc2gpJyAgJSAoQURET05fSUQsIG5hbWUyKSkpCiAgICAgICAgbWVudV9pdGVtcy5hcHBlbmQoKFRIRU1FMyAlICdOb3JtYWwgSW5zdGFsbCcsICAgICAgICAgICAgICAgICAgICAnUnVuUGx1Z2luKHBsdWdpbjovLyVzLz9tb2RlPWluc3RhbGwmbmFtZT0lcyZ1cmw9bm9ybWFsKScgJSAoQURET05fSUQsIG5hbWUyKSkpCiAgICAgICAgbWVudV9pdGVtcy5hcHBlbmQoKFRIRU1FMyAlICdBcHBseSBndWlGaXgnLCAgICAgICAgICAgICAgICAgICAgICAnUnVuUGx1Z2luKHBsdWdpbjovLyVzLz9tb2RlPWluc3RhbGwmbmFtZT0lcyZ1cmw9Z3VpKScgICAgJSAoQURET05fSUQsIG5hbWUyKSkpCiAgICAgICAgbWVudV9pdGVtcy5hcHBlbmQoKFRIRU1FMyAlICdCdWlsZCBJbmZvcm1hdGlvbicsICAgICAgICAgICAgICAgICAnUnVuUGx1Z2luKHBsdWdpbjovLyVzLz9tb2RlPWJ1aWxkaW5mbyZuYW1lPSVzKScgICUgKEFERE9OX0lELCBuYW1lMikpKQogICAgbWVudV9pdGVtcy5hcHBlbmQoKFRIRU1FMiAlICclcyBTZXR0aW5ncycgJSBBRERPTlRJVExFLCAgICAgICAgICAgICAgJ1J1blBsdWdpbihwbHVnaW46Ly8lcy8/bW9kZT1zZXR0aW5ncyknICUgQURET05fSUQpKQogICAgcmV0dXJuIG1lbnVfaXRlbXMKCmRlZiB0b2dnbGVDYWNoZShzdGF0ZSk6CiAgICBjYWNoZWxpc3QgPSBbJ2luY2x1ZGV2aWRlbycsICdpbmNsdWRlYWxsJywgJ2luY2x1ZGUxM2Nsb3ducycsICdpbmNsdWRlZXhvZHVzcmVkdXgnLCAnaW5jbHVkZWdhaWEnLCAnaW5jbHVkZW1hZ2ljYWxpdHknLCAnaW5jbHVkZXBsYWNlbnRhJywgJ2luY2x1ZGVzZXJlbicsICdpbmNsdWRlemFubmknIF0KICAgIHRpdGxlbGlzdCA9IFsnSW5jbHVkZSBWaWRlbyBBZGRvbnMnLCAnSW5jbHVkZSBBbGwgQWRkb25zJywgJ0luY2x1ZGUgMTNDbG93bnMnLCAnSW5jbHVkZSBFeG9kdXMgUmVkdXgnLCAnSW5jbHVkZSBHYWlhJywgJ0luY2x1ZGUgTWFnaWNhbGl0eScsICdJbmNsdWRlIFBsYWNlbnRhJywgJ0luY2x1ZGUgU2VyZW4nLCAnSW5jbHVkZSBaYW5uaSddCiAgICBpZiBzdGF0ZSBpbiBbJ3RydWUnLCAnZmFsc2UnXToKICAgICAgICBmb3IgaXRlbSBpbiBjYWNoZWxpc3Q6CiAgICAgICAgICAgIHdpei5zZXRTKGl0ZW0sIHN0YXRlKQogICAgZWxzZToKICAgICAgICBpZiBub3Qgc3RhdGUgaW4gWydpbmNsdWRldmlkZW8nLCAnaW5jbHVkZWFsbCddIGFuZCB3aXouZ2V0UygnaW5jbHVkZWFsbCcpID09ICd0cnVlJzoKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgaXRlbSA9IHRpdGxlbGlzdFtjYWNoZWxpc3QuaW5kZXgoc3RhdGUpXQogICAgICAgICAgICAgICAgRElBTE9HLm9rKEFERE9OVElUTEUsICJbQ09MT1IgJXNdWW91IHdpbGwgbmVlZCB0byB0dXJuIG9mZiBbQ09MT1IgJXNdSW5jbHVkZSBBbGwgQWRkb25zWy9DT0xPUl0gdG8gZGlzYWJsZVsvQ09MT1JdIFtDT0xPUiAlc10lc1svQ09MT1JdIiAlIChDT0xPUjIsIENPTE9SMSwgQ09MT1IxLCBpdGVtKSkKICAgICAgICAgICAgZXhjZXB0OgogICAgICAgICAgICAgICAgd2l6LkxvZ05vdGlmeSgiW0NPTE9SICVzXVRvZ2dsZSBDYWNoZVsvQ09MT1JdIiAlIENPTE9SMSwgIltDT0xPUiAlc11JbnZhbGlkIGlkOiAlc1svQ09MT1JdIiAlIChDT0xPUjIsIHN0YXRlKSkKICAgICAgICBlbHNlOgogICAgICAgICAgICBuZXcgPSAndHJ1ZScgaWYgd2l6LmdldFMoc3RhdGUpID09ICdmYWxzZScgZWxzZSAnZmFsc2UnCiAgICAgICAgICAgIHdpei5zZXRTKHN0YXRlLCBuZXcpCgpkZWYgcGxheVZpZGVvKHVybCk6CiAgICBpZiAnd2F0Y2g/dj0nIGluIHVybDoKICAgICAgICBhLCBiID0gdXJsLnNwbGl0KCc/JykKICAgICAgICBmaW5kID0gYi5zcGxpdCgnJicpCiAgICAgICAgZm9yIGl0ZW0gaW4gZmluZDoKICAgICAgICAgICAgaWYgaXRlbS5zdGFydHN3aXRoKCd2PScpOgogICAgICAgICAgICAgICAgdXJsID0gaXRlbVsyOl0KICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgIGVsc2U6IGNvbnRpbnVlCiAgICBlbGlmICdlbWJlZCcgaW4gdXJsIG9yICd5b3V0dS5iZScgaW4gdXJsOgogICAgICAgIGEgPSB1cmwuc3BsaXQoJy8nKQogICAgICAgIGlmIGxlbihhWy0xXSkgPiA1OgogICAgICAgICAgICB1cmwgPSBhWy0xXQogICAgICAgIGVsaWYgbGVuKGFbLTJdKSA+IDU6CiAgICAgICAgICAgIHVybCA9IGFbLTJdCiAgICB3aXoubG9nKCJZb3VUdWJlIFVSTDogJXMiICUgdXJsKQogICAgaWYgd2l6LmdldENvbmQoJ1N5c3RlbS5IYXNBZGRvbihwbHVnaW4udmlkZW8ueW91dHViZSknKSA9PSAxOgogICAgICAgIHVybCA9ICdwbHVnaW46Ly9wbHVnaW4udmlkZW8ueW91dHViZS9wbGF5Lz92aWRlb19pZD0lcycgJSB1cmwKICAgICAgICB4Ym1jLlBsYXllcigpLnBsYXkodXJsKQogICAgeGJtYy5zbGVlcCgyMDAwKQogICAgaWYgeGJtYy5QbGF5ZXIoKS5pc1BsYXlpbmdWaWRlbygpID09IDA6CiAgICAgICAgeXQuUGxheVZpZGVvKHVybCkKCmRlZiB2aWV3TG9nRmlsZSgpOgogICAgbWFpbmxvZyA9IHdpei5HcmFiX0xvZyhUcnVlKQogICAgb2xkbG9nICA9IHdpei5HcmFiX0xvZyhUcnVlLCBUcnVlKQogICAgd2hpY2ggPSAwOyBsb2d0eXBlID0gbWFpbmxvZwogICAgaWYgbm90IG9sZGxvZyA9PSBGYWxzZSBhbmQgbm90IG1haW5sb2cgPT0gRmFsc2U6CiAgICAgICAgd2hpY2ggPSBESUFMT0cuc2VsZWN0KEFERE9OVElUTEUsIFsiVmlldyAlcyIgJSBtYWlubG9nLnJlcGxhY2UoTE9HLCAiIiksICJWaWV3ICVzIiAlIG9sZGxvZy5yZXBsYWNlKExPRywgIiIpXSkKICAgICAgICBpZiB3aGljaCA9PSAtMTogd2l6LkxvZ05vdGlmeSgnW0NPTE9SICVzXVZpZXcgTG9nWy9DT0xPUl0nICUgQ09MT1IxLCAnW0NPTE9SICVzXVZpZXcgTG9nIENhbmNlbGxlZCFbL0NPTE9SXScgJSBDT0xPUjIpOyByZXR1cm4KICAgIGVsaWYgbWFpbmxvZyA9PSBGYWxzZSBhbmQgb2xkbG9nID09IEZhbHNlOgogICAgICAgIHdpei5Mb2dOb3RpZnkoJ1tDT0xPUiAlc11WaWV3IExvZ1svQ09MT1JdJyAlIENPTE9SMSwgJ1tDT0xPUiAlc11ObyBMb2cgRmlsZSBGb3VuZCFbL0NPTE9SXScgJSBDT0xPUjIpCiAgICAgICAgcmV0dXJuCiAgICBlbGlmIG5vdCBtYWlubG9nID09IEZhbHNlOiB3aGljaCA9IDAKICAgIGVsaWYgbm90IG9sZGxvZyA9PSBGYWxzZTogd2hpY2ggPSAxCgogICAgbG9ndHlwZSA9IG1haW5sb2cgaWYgd2hpY2ggPT0gMCBlbHNlIG9sZGxvZwogICAgbXNnICAgICA9IHdpei5HcmFiX0xvZyhGYWxzZSkgaWYgd2hpY2ggPT0gMCBlbHNlIHdpei5HcmFiX0xvZyhGYWxzZSwgVHJ1ZSkKCiAgICB3aXouVGV4dEJveCgiJXMgLSAlcyIgJSAoQURET05USVRMRSwgbG9ndHlwZSksIG1zZykKCmRlZiBlcnJvckxpc3QoZmlsZSk6CiAgICBlcnJvcnMgPSBbXQogICAgYT1vcGVuKGZpbGUpLnJlYWQoKQogICAgYj1hLnJlcGxhY2UoJ1xuJywnW0NSXScpLnJlcGxhY2UoJ1xyJywnJykKICAgIG1hdGNoID0gcmUuY29tcGlsZSgiLS0+UHl0aG9uIGNhbGxiYWNrL3NjcmlwdCByZXR1cm5lZCB0aGUgZm9sbG93aW5nIGVycm9yPC0tKC4rPyktLT5FbmQgb2YgUHl0aG9uIHNjcmlwdCBlcnJvciByZXBvcnQ8LS0iKS5maW5kYWxsKGIpCiAgICBmb3IgaXRlbSBpbiBtYXRjaDoKICAgICAgICBlcnJvcnMuYXBwZW5kKGl0ZW0pCiAgICByZXR1cm4gZXJyb3JzCgpkZWYgZXJyb3JDaGVja2luZyhsb2c9Tm9uZSwgY291bnQ9Tm9uZSwgbGFzdD1Ob25lKToKICAgIGVycm9ycyA9IFtdOyBlcnJvcjEgPSBbXTsgZXJyb3IyID0gW107CiAgICBpZiBsb2cgPT0gTm9uZToKICAgICAgICBjdXJyID0gd2l6LkdyYWJfTG9nKFRydWUsIEZhbHNlKQogICAgICAgIG9sZCA9IHdpei5HcmFiX0xvZyhUcnVlLCBUcnVlKQogICAgICAgIGlmIG9sZCA9PSBGYWxzZSBhbmQgY3VyciA9PSBGYWxzZToKICAgICAgICAgICAgaWYgY291bnQgPT0gTm9uZToKICAgICAgICAgICAgICAgIHdpei5Mb2dOb3RpZnkoJ1tDT0xPUiAlc11WaWV3IEVycm9yIExvZ1svQ09MT1JdJyAlIENPTE9SMSwgJ1tDT0xPUiAlc11ObyBMb2cgRmlsZSBGb3VuZCFbL0NPTE9SXScgJSBDT0xPUjIpCiAgICAgICAgICAgICAgICByZXR1cm4KICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIHJldHVybiAwCiAgICAgICAgaWYgbm90IGN1cnIgPT0gRmFsc2U6CiAgICAgICAgICAgIGVycm9yMSA9IGVycm9yTGlzdChjdXJyKQogICAgICAgIGlmIG5vdCBvbGQgPT0gRmFsc2U6CiAgICAgICAgICAgIGVycm9yMiA9IGVycm9yTGlzdChvbGQpCiAgICAgICAgaWYgbGVuKGVycm9yMikgPiAwOgogICAgICAgICAgICBmb3IgaXRlbSBpbiBlcnJvcjI6IGVycm9ycyA9IFtpdGVtXSArIGVycm9ycwogICAgICAgIGlmIGxlbihlcnJvcjEpID4gMDoKICAgICAgICAgICAgZm9yIGl0ZW0gaW4gZXJyb3IxOiBlcnJvcnMgPSBbaXRlbV0gKyBlcnJvcnMKICAgIGVsc2U6CiAgICAgICAgZXJyb3IxID0gZXJyb3JMaXN0KGxvZykKICAgICAgICBpZiBsZW4oZXJyb3IxKSA+IDA6CiAgICAgICAgICAgIGZvciBpdGVtIGluIGVycm9yMTogZXJyb3JzID0gW2l0ZW1dICsgZXJyb3JzCiAgICBpZiBub3QgY291bnQgPT0gTm9uZToKICAgICAgICByZXR1cm4gbGVuKGVycm9ycykKICAgIGVsaWYgbGVuKGVycm9ycykgPiAwOgogICAgICAgIGlmIGxhc3QgPT0gTm9uZToKICAgICAgICAgICAgaSA9IDA7IHN0cmluZyA9ICcnCiAgICAgICAgICAgIGZvciBpdGVtIGluIGVycm9yczoKICAgICAgICAgICAgICAgIGkgKz0gMQogICAgICAgICAgICAgICAgc3RyaW5nICs9ICJbQl1bQ09MT1IgcmVkXUVSUk9SIE5VTUJFUiAlczpbL0JdWy9DT0xPUl0lc1xuIiAlIChzdHIoaSksIGl0ZW0ucmVwbGFjZShIT01FLCAnLycpLnJlcGxhY2UoJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnLCAnJykpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgc3RyaW5nID0gIltCXVtDT0xPUiByZWRdTGFzdCBFcnJvciBpbiBMb2c6Wy9CXVsvQ09MT1JdJXNcbiIgJSAoZXJyb3JzWzBdLnJlcGxhY2UoSE9NRSwgJy8nKS5yZXBsYWNlKCcgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJywgJycpKQogICAgICAgIHdpei5UZXh0Qm94KCIlczogRXJyb3JzIGluIExvZyIgJSBBRERPTlRJVExFLCBzdHJpbmcpCiAgICBlbHNlOgogICAgICAgIHdpei5Mb2dOb3RpZnkoJ1tDT0xPUiAlc11WaWV3IEVycm9yIExvZ1svQ09MT1JdJyAlIENPTE9SMSwgJ1tDT0xPUiAlc11ObyBFcnJvcnMgRm91bmQhWy9DT0xPUl0nICUgQ09MT1IyKQoKQUNUSU9OX1BSRVZJT1VTX01FTlUgICAgICAgICAgICA9ICAxMCAgICMjIEVTQyBhY3Rpb24KQUNUSU9OX05BVl9CQUNLICAgICAgICAgICAgICAgICA9ICA5MiAgICMjIEJhY2tzcGFjZSBhY3Rpb24KQUNUSU9OX01PVkVfTEVGVCAgICAgICAgICAgICAgICA9ICAgMSAgICMjIExlZnQgYXJyb3cga2V5CkFDVElPTl9NT1ZFX1JJR0hUICAgICAgICAgICAgICAgPSAgIDIgICAjIyBSaWdodCBhcnJvdyBrZXkKQUNUSU9OX01PVkVfVVAgICAgICAgICAgICAgICAgICA9ICAgMyAgICMjIFVwIGFycm93IGtleQpBQ1RJT05fTU9WRV9ET1dOICAgICAgICAgICAgICAgID0gICA0ICAgIyMgRG93biBhcnJvdyBrZXkKQUNUSU9OX01PVVNFX1dIRUVMX1VQICAgICAgICAgICA9IDEwNCAgICMjIE1vdXNlIHdoZWVsIHVwCkFDVElPTl9NT1VTRV9XSEVFTF9ET1dOICAgICAgICAgPSAxMDUgICAjIyBNb3VzZSB3aGVlbCBkb3duCkFDVElPTl9NT1ZFX01PVVNFICAgICAgICAgICAgICAgPSAxMDcgICAjIyBEb3duIGFycm93IGtleQpBQ1RJT05fU0VMRUNUX0lURU0gICAgICAgICAgICAgID0gICA3ICAgIyMgTnVtYmVyIFBhZCBFbnRlcgpBQ1RJT05fQkFDS1NQQUNFICAgICAgICAgICAgICAgID0gMTEwICAgIyMgPwpBQ1RJT05fTU9VU0VfTEVGVF9DTElDSyAgICAgICAgID0gMTAwCkFDVElPTl9NT1VTRV9MT05HX0NMSUNLICAgICAgICAgPSAxMDgKCmRlZiBMb2dWaWV3ZXIoZGVmYXVsdD1Ob25lKToKICAgIGNsYXNzIExvZ1ZpZXdlcih4Ym1jZ3VpLldpbmRvd1hNTERpYWxvZyk6CiAgICAgICAgZGVmIF9faW5pdF9fKHNlbGYsKmFyZ3MsKiprd2FyZ3MpOgogICAgICAgICAgICBzZWxmLmRlZmF1bHQgPSBrd2FyZ3NbJ2RlZmF1bHQnXQoKICAgICAgICBkZWYgb25Jbml0KHNlbGYpOgogICAgICAgICAgICBzZWxmLnRpdGxlICAgICAgPSAxMDEKICAgICAgICAgICAgc2VsZi5tc2cgICAgICAgID0gMTAyCiAgICAgICAgICAgIHNlbGYuc2Nyb2xsYmFyICA9IDEwMwogICAgICAgICAgICBzZWxmLnVwbG9hZCAgICAgPSAyMDEKICAgICAgICAgICAgc2VsZi5rb2RpICAgICAgID0gMjAyCiAgICAgICAgICAgIHNlbGYua29kaW9sZCAgICA9IDIwMwogICAgICAgICAgICBzZWxmLndpemFyZCAgICAgPSAyMDQKICAgICAgICAgICAgc2VsZi5va2J1dHRvbiAgID0gMjA1CiAgICAgICAgICAgIGYgPSBvcGVuKHNlbGYuZGVmYXVsdCwgJ3InKQogICAgICAgICAgICBzZWxmLmxvZ21zZyA9IGYucmVhZCgpCiAgICAgICAgICAgIGYuY2xvc2UoKQogICAgICAgICAgICBzZWxmLnRpdGxlbXNnID0gIiVzOiAlcyIgJSAoQURET05USVRMRSwgc2VsZi5kZWZhdWx0LnJlcGxhY2UoTE9HLCAnJykucmVwbGFjZShBRERPTkRBVEEsICcnKSkKICAgICAgICAgICAgc2VsZi5zaG93ZGlhbG9nKCkKCiAgICAgICAgZGVmIHNob3dkaWFsb2coc2VsZik6CiAgICAgICAgICAgIHNlbGYuZ2V0Q29udHJvbChzZWxmLnRpdGxlKS5zZXRMYWJlbChzZWxmLnRpdGxlbXNnKQogICAgICAgICAgICBzZWxmLmdldENvbnRyb2woc2VsZi5tc2cpLnNldFRleHQod2l6LmhpZ2hsaWdodFRleHQoc2VsZi5sb2dtc2cpKQogICAgICAgICAgICBzZWxmLnNldEZvY3VzSWQoc2VsZi5zY3JvbGxiYXIpCgogICAgICAgIGRlZiBvbkNsaWNrKHNlbGYsIGNvbnRyb2xJZCk6CiAgICAgICAgICAgIGlmICAgY29udHJvbElkID09IHNlbGYub2tidXR0b246IHNlbGYuY2xvc2UoKQogICAgICAgICAgICBlbGlmIGNvbnRyb2xJZCA9PSBzZWxmLnVwbG9hZDogc2VsZi5jbG9zZSgpOyB1cGxvYWRMb2cuTWFpbigpCiAgICAgICAgICAgIGVsaWYgY29udHJvbElkID09IHNlbGYua29kaToKICAgICAgICAgICAgICAgIG5ld21zZyA9IHdpei5HcmFiX0xvZyhGYWxzZSkKICAgICAgICAgICAgICAgIGZpbGVuYW1lID0gd2l6LkdyYWJfTG9nKFRydWUpCiAgICAgICAgICAgICAgICBpZiBuZXdtc2cgPT0gRmFsc2U6CiAgICAgICAgICAgICAgICAgICAgc2VsZi50aXRsZW1zZyA9ICIlczogVmlldyBMb2cgRXJyb3IiICUgQURET05USVRMRQogICAgICAgICAgICAgICAgICAgIHNlbGYuZ2V0Q29udHJvbChzZWxmLm1zZykuc2V0VGV4dCgiTG9nIEZpbGUgRG9lcyBOb3QgRXhpc3RzISIpCiAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIHNlbGYudGl0bGVtc2cgPSAiJXM6ICVzIiAlIChBRERPTlRJVExFLCBmaWxlbmFtZS5yZXBsYWNlKExPRywgJycpKQogICAgICAgICAgICAgICAgICAgIHNlbGYuZ2V0Q29udHJvbChzZWxmLnRpdGxlKS5zZXRMYWJlbChzZWxmLnRpdGxlbXNnKQogICAgICAgICAgICAgICAgICAgIHNlbGYuZ2V0Q29udHJvbChzZWxmLm1zZykuc2V0VGV4dCh3aXouaGlnaGxpZ2h0VGV4dChuZXdtc2cpKQogICAgICAgICAgICAgICAgICAgIHNlbGYuc2V0Rm9jdXNJZChzZWxmLnNjcm9sbGJhcikKICAgICAgICAgICAgZWxpZiBjb250cm9sSWQgPT0gc2VsZi5rb2Rpb2xkOgogICAgICAgICAgICAgICAgbmV3bXNnID0gd2l6LkdyYWJfTG9nKEZhbHNlLCBUcnVlKQogICAgICAgICAgICAgICAgZmlsZW5hbWUgPSB3aXouR3JhYl9Mb2coVHJ1ZSwgVHJ1ZSkKICAgICAgICAgICAgICAgIGlmIG5ld21zZyA9PSBGYWxzZToKICAgICAgICAgICAgICAgICAgICBzZWxmLnRpdGxlbXNnID0gIiVzOiBWaWV3IExvZyBFcnJvciIgJSBBRERPTlRJVExFCiAgICAgICAgICAgICAgICAgICAgc2VsZi5nZXRDb250cm9sKHNlbGYubXNnKS5zZXRUZXh0KCJMb2cgRmlsZSBEb2VzIE5vdCBFeGlzdHMhIikKICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgc2VsZi50aXRsZW1zZyA9ICIlczogJXMiICUgKEFERE9OVElUTEUsIGZpbGVuYW1lLnJlcGxhY2UoTE9HLCAnJykpCiAgICAgICAgICAgICAgICAgICAgc2VsZi5nZXRDb250cm9sKHNlbGYudGl0bGUpLnNldExhYmVsKHNlbGYudGl0bGVtc2cpCiAgICAgICAgICAgICAgICAgICAgc2VsZi5nZXRDb250cm9sKHNlbGYubXNnKS5zZXRUZXh0KHdpei5oaWdobGlnaHRUZXh0KG5ld21zZykpCiAgICAgICAgICAgICAgICAgICAgc2VsZi5zZXRGb2N1c0lkKHNlbGYuc2Nyb2xsYmFyKQogICAgICAgICAgICBlbGlmIGNvbnRyb2xJZCA9PSBzZWxmLndpemFyZDoKICAgICAgICAgICAgICAgIG5ld21zZyA9IHdpei5HcmFiX0xvZyhGYWxzZSwgRmFsc2UsIFRydWUpCiAgICAgICAgICAgICAgICBmaWxlbmFtZSA9IHdpei5HcmFiX0xvZyhUcnVlLCBGYWxzZSwgVHJ1ZSkKICAgICAgICAgICAgICAgIGlmIG5ld21zZyA9PSBGYWxzZToKICAgICAgICAgICAgICAgICAgICBzZWxmLnRpdGxlbXNnID0gIiVzOiBWaWV3IExvZyBFcnJvciIgJSBBRERPTlRJVExFCiAgICAgICAgICAgICAgICAgICAgc2VsZi5nZXRDb250cm9sKHNlbGYubXNnKS5zZXRUZXh0KCJMb2cgRmlsZSBEb2VzIE5vdCBFeGlzdHMhIikKICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgc2VsZi50aXRsZW1zZyA9IC'
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))